%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Air transportation set.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 5/2/2019
%%BoundingBox: 0 0 700 501
%%HiResBoundingBox: 0 0 700 500.0005
%%CropBox: 0 0 700 500.0005
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Air transportation set</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Air transportation set. Collection of planes and helicopters. Can be used for topics like traveling, airport, aviation</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>card</rdf:li>
               <rdf:li>poster</rdf:li>
               <rdf:li>leaflet</rdf:li>
               <rdf:li>brochure</rdf:li>
               <rdf:li>sign</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>creative</rdf:li>
               <rdf:li>layout</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>realistic</rdf:li>
               <rdf:li>style</rdf:li>
               <rdf:li>decorative</rdf:li>
               <rdf:li>label</rdf:li>
               <rdf:li>banner</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>set</rdf:li>
               <rdf:li>collection</rdf:li>
               <rdf:li>airplane</rdf:li>
               <rdf:li>flight</rdf:li>
               <rdf:li>airline</rdf:li>
               <rdf:li>vehicle</rdf:li>
               <rdf:li>departure</rdf:li>
               <rdf:li>aircraft</rdf:li>
               <rdf:li>toy</rdf:li>
               <rdf:li>propeller</rdf:li>
               <rdf:li>pilot</rdf:li>
               <rdf:li>cargo</rdf:li>
               <rdf:li>journey</rdf:li>
               <rdf:li>trip</rdf:li>
               <rdf:li>children</rdf:li>
               <rdf:li>kid</rdf:li>
               <rdf:li>playing</rdf:li>
               <rdf:li>air</rdf:li>
               <rdf:li>transportation</rdf:li>
               <rdf:li>plane</rdf:li>
               <rdf:li>traveling</rdf:li>
               <rdf:li>airport</rdf:li>
               <rdf:li>aviation</rdf:li>
               <rdf:li>jet</rdf:li>
               <rdf:li>gliding</rdf:li>
               <rdf:li>engine</rdf:li>
               <rdf:li>airship</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-05-02T14:00:52+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-05-02T14:00:53+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-05-02T14:00:53+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>184</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxjU&#xA;/wAyvJ2matPpd7fGK6tqCakUrqrMAwSqK2/FgfD3rmXj0WWceKIsMDkiDRTzTdX0rVIfX067iu4h&#xA;Tk0Lq/GoqAwBqp9jmPPHKBqQpkCDyReQS7FXYq7FXYq7FXYq7FWiyjqQPngMgOat1r0wq7FXYqxL&#xA;zd+aHlXyvOLa+kkuLzYvbWqq7oD058mRR8q1y/Hp5TFjk6/Vdp4sJ4Zby7gt8t/mv5L8wXSWdpdt&#xA;BeymkVvcoY2c+Ct8SE+3KuOTTziLK6ftPDlNA0fNl+UOwdirsVdirsVQ+ozmCwnlVuLKjcG8GpRe&#xA;vvgJ2UBLf8S2dnpa3Wo+srIv7304Jpm2/a4wo5369Mh4gA3bceKUzQr4kD70u8r/AJi6X5ovnh0e&#xA;xvZbKMN6mqSRCK2BHRVZm5sx8OOCGYSOwLlars+eCNzMeL+be7IbrVNPtqiadQw/YHxN9wqcsJAc&#xA;BLZvNtgh+GORlHVjRR+vI8YVOon9SJJOJXmobiwowqK0I8cmq7FXYq7FXYq7FXzD+YdrrFt5z1K/&#xA;1C2aK3vbkoJQp9NXUUjXlxUVaNQR4jfOh7NziuH8fi3GzwGxHx/HuWeWptM9cSLq0umahGWUMjei&#xA;3h8D1FQfnX2zKyaiMriRYYjCRu9e0Hzrq9uix6hcQ6nAacZqehPSvU0+B9vZfnmsy6HHL6NvtbRM&#xA;jmyiHzhojryld7ceMi1H/BJzUfScw5aHIOQtnxhi35g+Yb+a40qHy7qAUhnmuJYZRxHHiEElDQj7&#xA;XwnM/s7SxAkcsfdYassjtSW6t5s169mgggumW4ZkjUWpaNGkb4QBQ1arHucvhpMWOJJHzXiJeqoG&#xA;CKGbkwABbpU+O2c6XIbxVI/NXnLRvLMEMuo+ozXBYQwwqGduFOR+IqtF5DqcIFtmPEZ8mBef/PWr&#xA;ar5YsLry9JNY6feyTJe3FKTr6ThETkhPDmQx2NffrXI0EoSyyhL6o1Xn/Y6Xt+WbDECJoHmR8Kec&#xA;aLqvmTQnL6XqToCavBIOcTE9SVbkKnxArmzz6PFl+qO/f1eX0+szYfol8Oj0Sy/NHWofJ9/r2o6c&#xA;pe0mWCMWpYK7MASzVLlFXkN6mvTOezdniOeOKE6sX5/ot6bT9qzlgOWUeRrb8bI3Svzs0g6Dp2pa&#xA;qj2r38zW4hCl6FCOUlRT4PiG/X55I6XURySjEiYiL32+Hvbodq4/DEpggk18uvud5/8AzL1uz9bT&#xA;/Llqk8yQiS4vImFxJCGrv6Kg8abfG22+XaMwnESyenfr1+LR2lrssSYYRxbbkb18P0vn67uLm6uX&#xA;kmLyXEjktyqzs7HetdyxObuxTyVEnfmXtvkP8ipLK503W9cvWS+tpY7pdOgC8UeNuaK8pLctwOXE&#xA;ewPfNdm1d2Byen0XY3CYzmfUN6ex5hO/dirsVdiqVeZNKOp6cbcapdaRRuX1qzkSJ+hHEs6ttv2p&#xA;kJxsc6b9PmGOVmMZeReQeY9VufImqw6fpUkut6hqCGZ9S1FpLqdgWKqkZVloPhJ98v0ejhIEyJbd&#xA;VrJZq2EYjpHYKbQfnXrEHqFJ7W3O4/urMj/iEuZf+Cw8/t/Y4bK11zWNN8u2Q80XK2N16otAvNSJ&#xA;2Y/A49Ou5r8VelCdhmuzmPF6D6T+KbMeKU7oXQs+5I9W8+eX7C5lsRcCbUY1kK2qBiWkRSwi5AEB&#xA;2pRVPfMeUwHJwaDLkFgenv8Ax8/cj/yU81y+bLnVpr2wjQWDQtaTKWYL6oaqHlsWHD7QGHBPivZu&#xA;7Q0McAjRsnn9n46+961mS6x2KuxV2KuxVZNNFDE0sziOJByd2NAAO5JwxiSaCvNPzBj0rzjaW8EX&#xA;Mw2ruyyk8Q5IA2Xr1XqfuzbabRmBuRr3NZydzx7VvJusWjsjQGWKvwyJ/T+mZhxnpukTCN8madeW&#xA;P1x7tGgRuCqH+GvHlvv88swYzxWwySCfJKipIpvA7M5ZXPD4VJ2UUFKD3y/wpVzauIIHWvMuk6bG&#xA;8cl1yu5l429tABLNyP2SqDx/ytsxtRqYYzUj6u4c3KwaTJlFxHp7zyR/lOLzzc2lvq40WeRYHWSK&#xA;dBH6nJTUExFvi3G/GtO4yuWohKNT9N9C1ZMRhKgeLzD3fRry7vdKtrq8tWsrqVA01q/2kbwP680O&#xA;SIEiAbDaDsjMgljXnzyTbea9LS2aY2t5bsXtboDlxLbMrCoqrAePUDCDTfgzeGbqwwqHTPMnk63/&#xA;AEdFHHq2k0attMBDKOdS/FjyRw1elT8s1mURnK5XCff0bpyjlu+qU3T+QLpw1zp19pUxarrGhCmv&#xA;gPjUAf5KjMzFq9XAUJRmPN1ObsDBM2BXuP4DHfOl0RJEvl67uW0URhH04fWE4tvybiaK4bqe9cy9&#xA;DlBJOYDjv6tnVdqdkZ4x/ck+GB9IP6OqSReYLmaC0jkdLqGxYPbW1yqyopHYchWniK5tfy2M2RsZ&#xA;cyHlvzuaFRkbjHoRafReePLck1/O2h3B1zWYTa3htJSitzO5irVgWIB6HfNPm0maAiBIHHA2LH3v&#xA;V9m59PqZS4v3eWYrnsb7vPyP2pZ+kvOdhbW9xeaMyQWXAQ3U9q0gTjTjWVgSp28cyIYcGUkiRs86&#xA;LiarJrNPQlGMhHka4vt/sL6E8kebbbzVoEWqwxmFixiuIjWiyoByCsftLvsf45Vlx8Eqd5otUM+M&#xA;Tqu9Psqct2KpVrWvR6a8cZUc5BUO+ygVp9J9sjKVKk0vmWGU0e8Y16RxcU+6h5fjlZkUsc1rzTpx&#xA;+sQWTxT6pDFNJFYl+U8kkMbOUKgl/wBnfI3Zrq3QwnYyBENrNcgxu3/Ozy2Fe/vNGnttYjhMcLKE&#xA;lQhasqLN8LKCx3+H78chnAVIEfd83YY+yxlkPDyQlE/A/wClLDP+Vk/mXqEx1NdWKLyLRWgVfSoN&#xA;uPAginbffNVLVkSerh2Hp+CuH49UDc61r3nLWrJ7yX1by7lW2sbaIFYofUYKfTUlqeJY750ehxxE&#xA;PFO8jdeTxvas/BkdNjFRFcR6y6i/IdA+hJPyl8nP5yHmxoZf0gJBcegJKW/1hTUTcAK867/apXtm&#xA;J4UeK2P8oZfC8O/T+Ph5XV1tbMUjjQURQorWiigqfllrhE23ih2KuxV2KuxVjnn/AMuTeYPLz6fE&#xA;OR9RJTGGKFvTqQFYEUYNRhv2zI00oCXr5fd5so5JQNx5vGLvRvOGjSemt1VRssWoRsj0/wCM0fHl&#xA;8ypzcxGSv3c4zH9L9Y/Uz8XBL64GJ/on9B/Whn1vzPGOMunwz9i0V3QU/wBV0Bw+LnHOET7pfrC+&#xA;DpjyySHvj+opZqGpa3PIszWX1aO3BJrMkgatK1AC0pl+HUyF8ceAd9g/2OPqNPDbw5cZ7uEj+1F2&#xA;3mCG4i9CRQkg2HIUOZgAO4cEo/QW0bT9cj1O806K9TZZlIHMrXqDtyp/K2xyjPp+MEj0z722GaQH&#xA;DZ4e59A6TqWn6lp8N3p7rJaSKPT47cabcSP2SvSmcrmxShIxlzcuMgRYReVpdirsVWyRxyKUkUOh&#xA;6qwBH3HAQDzVAyeX9GcktaIK/wAtV/4iRlR08D0ZcZQ195W0uawuYLeFYppYnSKUljwdlIVuvY74&#xA;x0+MG6Txl4vo35J+Yb23u2vYf0fdNcOYGZ1IEZNdwpaqiu23bbNjDUGHV1XaPZ0M8h3/AM749e9K&#xA;vMX5Qed9HlMsNp+lLcfZuLIc2p/lQmkgP+rX55lw1cJc9nnNR2Lmx8hxR8nqf5Oa55rvtNu7LzBb&#xA;3SmxMYtbu7ieN3VgQYyXClynGtdzvv2zD1UYA3Hq73sjLmlExyg+nkS9DzFdw7FXYq7FXk17+S+q&#xA;XH5pp5tXVEGnC7iv3Rw7XIeIg+gKAJ6Z48QeWy9jTMc4SZ3f4/H2O4h2nEafw+H1VX3j9tVz3tNd&#xA;N/JnS7H8wpfOA1CaTnPNeR2BRQFuLjlzYyDdlHM8V4jtue8hhHFxNM+0pHAMVV+B9uw615JB55/I&#xA;uW5uJr3yxJEiTVaXS5yVQE9fRkAPEH+Vth402zYw1Nx4Zbh1UQYSE47EG2B2v5N/mtH/AKKmnpFA&#xA;xI9V7i2IUHv8Ls34ZpZ9mQMr4tvtevh7UVDeB4vft+t6r+WX5OWvlWZdU1OZL3WFUrD6YPowBqhu&#xA;HKhZiD9ogfLvmz4gIiEfpDy2bJLLkOSX1SelZWwdirsVdirsVdirsVdiq2SKOVDHIgdG+0rAEH5g&#xA;4QSOSoE+XtAY1bTLQk9SYI/+acs8fJ/OPzRQUL/yn5evdPnsHsYYobheLmGNI2G4IIIHiBgOWR5m&#xA;/ekbGxsXln5ifltoeg6NBPp9vJM0k7Pf6hcTO0oAX4RsPTUca9FFSBuTscvTavJE0D8PjusoxmfV&#xA;tt07+nzYd5X8mfmNq1pPe2OnOllE3G2+tsIjcL/PEJOBpTu1B4E5tIdqQocTj5dLwmgz38tbH8wN&#xA;J8y/VLvSpbbTpwzX5kZDCvFSFeN1JBfnQUWtR7bintDUYMuOwfUOSMUJRPk9ezROS7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;UPfahY2EHr3txHbQ1p6krBFqe1T3yvLmhjFzIiPNnjxSmaiCS3Z39jexerZ3EdxH/PE6uN/dScce&#xA;WExcSCPJZ45QNSBHvV8sYOxV2KuxV2KuxV2KuxVD3Oo2NtUTzpGRvxLDl/wPXCASwlljHmUKfMWl&#xA;UqsjP8kcfrAyXAWo6qHe5fMOlkVaRk9ij/wBx4Co1UO9F21/ZXP+886SHrxVhy+kdciQQ2xyRlyK&#xA;+W4t4aetKkfL7PNgtaeFcDZS9WVlDKQysKqw3BB7jFDeKuxV2KuxVpmCqWNaAVNBU7ewxVAx67pj&#xA;osiykowDBuJpQ716ZPwyxEgwz81POl/pWl2aaRIY/rzuk14n2owgBCrUfCzhjQ9aA0zG1JlGOzv/&#xA;AGf0eLPlPib8PT8dzyeHX9ct5xdwancxzg1EvrOa/wCtUkNX3zXjJIHm91k0GCUaMI17g9Z8ifmD&#xA;rGoIttrmnyqQPg1OOMrE9P51NKH3Tb2GbHDKcuYeE7X0GDCbx5I/1bs/D9rMG1y2/wB1o8nuBQfj&#xA;mT4RdBxhSbXHH/Htt7uB/DJeF5o41K0846HPqraTJN9X1FQpEMvwh+QrRG6E+3XISxkMhK07yDJ2&#xA;KuxV2KvmH82vOuo615pvbMSNHYadK9tBCCRvG3B2P+sy5zGqJyZTKXTYDu/aXuuytJHFhB/ikLLD&#xA;dM8wanZzNLYXk1vJA3EujlaEAHY198hPTCJBqiRe2x+xzpRhMEEWGeaD+fHnGxVBdPFqdvQU9UfE&#xA;R4h1oT9OZENVnxmuK/KX4B+duszdi4Mm8fT7no2hfn95SveMepRTaZKerMPViH+yT4v+FzOx9qD+&#xA;OJHu3H6/sdPn7Ayx+giX2H8fF6BpWuaNq0PraZew3kdKkwurEf6wG4+nM/Fnhk+kguoy4J4zUwQj&#xA;staXYq7FUNqepWOmafcahfzLb2dqhknmc0Cqv+ew74soQMiANyXzH+Yn5++ZdcuHtvL8smj6TG9Y&#xA;5ImKXUoB2MjqfgH+Qv0k5MB6H+RxjxcUt5/Ym/lbX/PfmC1N8kXCFwPSMUaqh3IYhpCxPxCnXNfP&#xA;JqTIgDbo4x0XZWCMeI3Ot7JJHwj+pOzpfnqTdpZVPgJ1X/iLZHwdSep+ajW9lx5CJ/zD+kOGl+eo&#xA;91mlY+BnDf8AEmx8HUjqfmp1vZcucYj/ADP1BAaxqn5g6WkU8do12wejx+mJCVpWtYSG2p1xlm1U&#xA;OnF8L+5cei7JzkjjGM9/Fw/7rZ5155vtA1YXGp3kNzpfmRmBkhflLHcEkA/b4tGw69KfMnMnSajx&#xA;yY8JjIfJsy9n5NJwkZI5sMjQP8Q++x8fky78iPKstxrVvfWvnKG2SFhJLo1nLILicKalJIpljXh4&#xA;kK/0dcyp4pR5hxdVOhRj8X0zlbq3Yq7FXYq7FXjvm/yJJN5muUt44PTlHrp63pdH2qoa2nc8W2/v&#xA;FoKbZRl0hyGxX2f8Sfvdvou1RhhwyMtuVXy/08R/sSmFh5dvZdNm0rWriK50+QURFWUyxkfY4ys9&#xA;AFoKAR5k48EgKkQY/H9f6HGydoQGQZMQlGY67V8gOvvR2keVfL+kov1aFTKv+72HOQnx5Hp9FMtx&#xA;4Iw5Bp1famfUfXI13DYfJMLrULKzt3uJaLFH9p233rSlB3rltOAoXGoXrS2v1eL1rac/vJVYAItK&#xA;g071w0hFbcffChhPmHyPfaprzXsc8a2s/D1eVeaBFCniKEGtKjfAm3pXly5dpJLYOXihQfDWvE1o&#xA;or2qK5TlAbIEp7lDY7FXYqxbzT5Y/Lq65TeYLSxjllqTcSFbeZz/AMZEKO335h6nwI75OEe/Zz9L&#xA;qNSNsRka+IeG6l+V3lcfly/mC31h7LUbktL9RmkiZFN3ccIImB9OSNlWRA3In5ZER088sTGcTVdQ&#xA;doj9juI9o54kwlDbvoj8eTHdc8iWulQg2PmXRdYQfBFBY3iSXBA6UhFan2UnMXPpZi5Ej7vvc7T9&#xA;qY5UDGUfgmWgflldXlqlxfTPbO+/oKByVe3It0PtTOS1XbnDIxxgSrr0c6WcBO7jy7oPlLTLrWpV&#xA;ubmWzCCCMXDQs8srcV+OHgRTc4ezNRn1mcQsQ9w/W42ozkgAdU91f85bryxp2gWltXUNSvoBeXZv&#xA;ZDN6cUwLrCZFKFnSvHl7bjfN3pjnGSeTi4hD073vv7/jzdXj7NjmnLiHALoVtuOrMfIn5y6P5p1C&#xA;LSntJbHU5gxjSolibgpdqSAKR8Kk7r9ObvT60ZDwkUXB13Y88ETMESiPgXoWZzp3iX/OUmtXlroG&#xA;i6XEStrqFzLJcsCRX6uq8EPipMvL5qMlF2fZZAyiXmB83zkehwvX5xcJe4s28qfmN5g0bRbewsxB&#xA;6MBf02dGLUdy5BIYDqx7ZhanWThLhFOk0/s5p9THxZmXEe4ittu5P4/zm8yf7tggP+oCv6+eUfyh&#xA;Pybz7JaXoZfP+x0v5y+ZSP3UUKHxYcv1ccT2hkTH2S0vXi+aHX82PNssgJjt5SOq+k52/wBi+Shr&#xA;8hIumM/ZHR9TMf5w/UkHmfVJNangl164IkhVhBEV9NVDGrFRUVrTr7ZuMc5fwubg7J7PwfTw/Gf7&#xA;WL3D2EFxE+nXDrMrgrJUpxIOzBq7UPeuZmPjP1BxNcdNEfuzZ+YfXn5U6v5j1PRFn1lpXUxRGzkd&#xA;PgkjJceoJj8UhYAfa/Z4tvyzXZAAXjt7Ns4ytk7FXYq7FWKecphaXVtezws1sqmNbiPco7HcONvh&#xA;YUp7/Rl2IhrmEmTzDpD/APHxQ+DKw/hl1tdKyalp0/wJcIWYEUDUb6O+G1Su81Hy95f01YbqRmt5&#xA;XYIjAyF2YFio28BkMmUQFly9Josupnw4xZY3qP5mXUqlNKtFhToJp/iNPZF2H3nNdk7QP8Ies0fs&#xA;mOeaV+Uf1/sCH0f8wdUtZCmpt9agc1MwUCRCfZaArkcOuINS3Dd2l7MY5RvB6ZDp0P7XqOj6LJql&#xA;rFey3a/U51Dxi3YMWU+Lj4R7gV+YzPOYHk8RPTyhIxmKI6MotLO2tIRDbRiKMb8R3PiT1JPicqJt&#xA;ICrgSwzXvOkljqaGyura8snQExq6PRgaMCyGoOcj2t2zqNPnHhcOTERy579dw7/R9lDJjPHGUZ35&#xA;/pUbv809MS3UwqqTsNxMaqG8Bx3b8MOb2lmYfu8R4/6XIfLn9jPF7PZDLc2PL8frfOvnGfzpqOr3&#xA;N/dzNcCZ2dTbSFlC12UCvOijYVGDBlw5PVIes8+IfgU72OjyY4iMYnhCRW2peY4HAjedipBCupeh&#xA;U1H2gelMtyaXBLmB8NvuQIz7iyPR/NXmS3kDtpSyk9ZPT9NjXuWIqfvzWarsvDMUMhHldtkMEz/B&#xA;9jNLLzrcfViXsjA/dZGWlfH4eWaf+STE1xWPc5MOzzPeXpTby5BH5qh1JdVRZ9MtRFcOisEUyxNz&#xA;SMsezAENv0+eZ2nx/lZXD6pWCfIuB2vGGEQGM+u0F5D8g+U9a1CxsNee2vtQt7G8e8W2uSeE090h&#xA;hjDRPu0KJIaf5e9ds7XSjDOBA5Eih1oDu+bpdbrs8ZGYvn3fPp7nq3lL8svKXlW6lu9Lt3N1ICon&#xA;ncyMiE1KpXZR9FffMrFpoQNjm6vVdo5c44ZHZlWXuCw781vIKedvKU2lo4iv4HFzp0zfZEyAji1P&#xA;2XVip8OvbCDTdp83hzEnxxqum6rouoT6Zqds9re27cJreUUZT2I8QRuCNiNxlj1MtdGWEmJ8vm9F&#xA;8kfmJoWjeX7XTrzT5Hki5tJOgRuRdy/RuPQNT6M18+0oRkYmN06nP7NZ858SOQR4gNje23lbJU/N&#xA;TyS5DNazqV+yWhirv4Uc4jtTD3H5D9bin2U1w5ZIf6aX/ErZfzZ8nLUJZ3DkdCIogD97/wAMT2ri&#xA;/mn7P1rH2T1nXJAf50v+JQVx+c0JIi07SXkc/DH6kgHy+BFav35A9rDlGLdH2OI3yZQO/b9JIef+&#xA;cvN2peZJo49RiSE2bOI0RSrKTQMDyJ/lFcz9Pnyj1SoeTmaXsrR4gRGUie/9W1Uyz8idM8pX3maK&#xA;01Ly7c6xck8lu+Xq2tvTo80ARV49uTuw8FrmTk1U5Dua9dghCNwn8P2vrHMV0TsVdirsVdiq2WKK&#xA;WNopUWSNwVdGAZSD1BB64qxfUPy40K4LPbGSzc9FQ8o6/wCq1T9AYZMZCxMAln/KrWDho9V403B9&#xA;DcH5iQZLxUcCveflsNQs2s9RvY7qBt/ityrAjoyssvwsOxG+JyWKIbME54pCUDUg8y85fltrXlQN&#xA;eQM2paGoq90B+9gHf1kX9n/ixdv5gOp12XTdYvedldvRy1DJ6Z/YWLpcQuoYMKEVzCp6UTBelfkf&#xA;qWptqWoachL6UsXrEGvGOUsFXj4cxy29szNKTy6PH+1GLHwxn/Hde8fs/S9hzNeNdirC/M/5U+Wd&#xA;Zid7WP8ARWoMard2wIWtd+UQZUavtQ++YWfQY5jYUXcaPtrNhPqPHHuP62DXX5NedYVYQXtpeRIf&#xA;3aySTLIe3RlZR/wWamfY8+Yr8fB6HD7TYOsZD8e/9CET8pPPzOqmGzjBNC7TEge54qT9wyodk5bc&#xA;g+02nA6/JHQfkp5udwLjUbCFO7RerIfuZE/Xlw7Gn1I/HwceftViraMvs/WUv86/l5p3k+xstX1n&#xA;X5ZrBryK3ureCFYJpI5gVJg3m5PH/eEU3VW70zNwdjQ3Ejf4+LgZPamZ5REfeb+4B5x5lvPJ1pHo&#xA;82n6td3EuszTNcrGY5hZ2plVIOSvHVpkiBZ0FKseoFK58OycNbjl9vyah25nlxS24a/FW9jl/IXU&#xA;4tKvdJ07zfcwaZfMGuLWa2SXkVOw5h42A6V40B7jMI9mQMhLqPJwz2vxSEpxuQ80H5b/AOcaNLsr&#xA;6O61jV5L5ImDrbW8f1cEqajlJzdqf6vE++WjRD+I2Fy9sSIqMa+17Vmc6Z2KuxVj/m3yF5T8226Q&#xA;67p6XTRf3FwKpNH1+zIhDU3rxPwnuMINLfc8x/MDyHHocIuJIotV0+UOqzzwRC5hdF5BS8YVH5qG&#xA;4/AtKb12w+FHLsQL9zjwlmwH93knEd1lg0mmeUlSUPpMcwiCl5Y5XiBV9lbZqKD8x49MoGjxGriN&#xA;/NvHbOtHLKfiIn9CmYPKYNINJhjbhzLSsz0UUNeLkePUinbH8riAsRCD2vrTzyy+FD7nqvkX8rzN&#xA;pFrqF/cfUo7xBOljaW8VvIsb7osktGJqlGICqwJIrtl0KiKAAaZ45ZjxZJSl7yT97N0/L/yOqgNo&#xA;NhMw6yz28c8rHxeWUPI592YnElyoTlAVEkBOrWztLOBbe0gjt4E+xDEqog+SqABgQSTuVXFDsVdi&#xA;rsVdirsVdirsVdiriK7HpirCdR/J3yNe3r3a2slm0h5SRWsrRRMxNSfT3Va/5IGQljieYdrh7a1O&#xA;OPCJbee7JtD8v6PodkLLSrZbaCvJgCWZm/md2LMx92OSAA5ODqNTkzS4pniKYYWh2KuxV2KuxV2K&#xA;sS/Mb8vLLztplrazXcljdWU3r2l1GqycSVKMrI1Aysp8QcnCZibDGUbb8qflr5b0DQbDS5beLVZb&#xA;CV7mO9vIY5JBcStzaWOoPpmtKcfAYJTJNpEaZZkUuxV2KuxV2KuxVD6hp1hqVnJZX8CXNpMAJYZB&#xA;yVgDUVB9xiggEUWLXP5WeXJD+4lubOMABIbcxBEVRQBQ8b0GCmn8vFAy/kr5Ynmje4vL6aJWVpbd&#xA;ntxHKFIJSThCr8WpQ8WBphSMEWf4tzsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSrzPb+YrjR5YvL11FZ6m&#xA;SvpzzrzUKDVhuHAJHcqf44Y1e7KNXuxCDy9+dLD/AEjzTZxnv6dtFJ394Eyzih3NnFDuTK38s/mK&#xA;CDcec6/5CadbfrP9MjxR7mPFHuRGuQ69pHl/U9Tl1+eV7G1nuEAgtEUtHGWUGsbdSPHBYPRjxDuS&#xA;/wAmz+YvNHlDTtYTzBcWtxdI3rKkFo6iSORo3ADRVpVdt/pxFDbmvEO5F3Plfz64Ih86SID/ADaf&#xA;ak0+a8MPFHuZCUe5Kp/KH5sD+483xuabc7dU3+hXyXFHuZccO5lvlWw16w0aO212/XUb9WYm4ReP&#xA;wk/CpJpyI8aD+OQkRezXIgnZN8ixdirsVdirsVdirsVdirsVS/Vk15lQ6VJbqRXmlwrmvhRlP8MI&#xA;rqwnxfwpX+lvOVrvd6TBcRjq9vME/Byxw0GvjyDmFOb8xNDtIHl1FJ7MxrVlKepU9gvpc61wjGSd&#xA;kxzAmuSjZfmn5PvLU3EM09QaeibabmfuUr+OSOGQLKWWI5qcv5kxvtYaFql4TXiwtyqmngRyP4Yf&#xA;B7yGHj9wKrYebPN17OqJ5UlhiJAaW4uVh4g9yrR1+7E44j+JRkkf4WW5S3uxV2KuxV2KuxV2KvEv&#xA;zDuPM+i6PeaLf3s08Mt+l1pl6War2pV/UhJrX9zJ6ex8fCmYHa0pDCDDY2HpPZ2GOeo9QH0Hn37f&#xA;otlXkH8y7nzAdP0yPTZ7ieOEDVdSJAhjdQQGJoeRk41ptufbMvAScYMtp1uOrq+0NLHHklwG4X6f&#xA;x5PQ8sde7FUJqmradpdqbq/nWCEdC3UnwVRux9hlmPFKZqIssZTERZeZ+cfzEg1zSL7RdPtXSC8j&#xA;MMl3IwVgrfa4oOXUeJ+jNrj7KreZ+Thz1ncEl8mecL7yho8ekRRJeWqSPIvqFlkAc1Kgjalanplp&#xA;7LgeRLAayXc9F8u/mRoerypbS1sbxzRIpSCjE9lkFBX5gZgajs+eMWPUHJx6mMtuRZZmA5DsVdiq&#xA;jcX1lbFFubiOFpDSMSOqFj7VIrigkBVZlVSzEKqirMdgAO5xSxTW/wAwtLs2aGyZbqYfakFTEPpX&#xA;7X0ffmDrcmqiKw4jM95oD7SCfxuuLNp79eQD7UBoPnTU77VYITJHLDK4R41UCgPfx29853B2lr4a&#xA;mGPPGhI1XDXyPl73anFpp4jLFK68/vZ3nYOqQ99qFpYW5nupBHGDSu5JJ7ADc5j6rV48EOPIai2Y&#xA;sUshqIst2V7a3tutxbOJIm6NuNx1BBw6bU488BOBuJXJilA8Mhu1fwXk8HC0uvqktf70Ishp4Ubb&#xA;MgNMgTyNMd1LR0tLZrrWPMN4tutA3BxEGP8AKFUNyJ7ACuWY4mZqI3cXOY448WSdRYhLr3lyO7db&#xA;bRZL9YwKXF7csjMT4RhZBTbvTNlDs6R+qVfB5/L2/gifTAy95r9bE9W/PPWtNklh0XSdMtBGSjM0&#xA;UjEGtDQo8e9fEZkYuzcJlwyMj8m/H2zMixCI/HwSry/+c81nplnomrabavDZxLDFNLEZQVXYE8WD&#xA;D/Y1zA7S7I1e+TTShkif4SKPzuj8eF3XZ/aWjmBDOJRP84bj5VY+1mWm+ZfL1wVl9GfT1k3W606c&#xA;sm/fg9dvk2clHt2UJmGaBjIc/L4F6Ofs7CcePBOweXn8WcWFj5lkto7rRvMCX1q/2TcLWvsSRI1f&#xA;Hoc3mLPDJHijuHR5dNmxS4Sd/NOrbUNRsdOubzzCbe3htl9Rp4C5XgAeTMCCRT2yYjZoI4zEEz6J&#xA;sCCAQag7gjpTItqD0/VrHUHuBZyeqts/pSSAfBzpUhW709spw6iGS+E3wmm7Lp5464hXELRmXNLs&#xA;VdiqV+ZbjzDBpbN5ftIrvUiyrGk7BI1U/adviStPAHDGr3ZRq92K+YvJHmLWfKd2uqam11rojaW1&#xA;igVUtkcKawonw8+YJXm5qOop0NGp08M1A8gbczSaw4Z3ECvN4n5dsPPQg/TOg2d26JI1ubmwLM4Z&#xA;QrMrJGS9KOvUUOaXJ2ZlxSuBPve6j2rpNRARy8I/oy6fE7JjJ+an5jabO8NzfXME6/C8VzBHyUjs&#xA;VlTY4Dl1Q/i+wfqTHsjQZBcYAjykf0F0f5y/mRPKsUOp0ZjQE29tt7/3WZejGpzZI4xK5SPcP1OP&#xA;q+y9BgxyySh6Yj+dL/iurV/ruuareRzajeNdXL0QyyBQAqgn4UQKi9Ow989LGkGnwxhHc3ue98u1&#xA;mQZJGQHCOg3NfNCXmqS2FrK+zy8xFCOnJmUMK9egqT8sxcmUxBvc3QcCc+EWk8C3N6xmvZmmFdoy&#xA;aJX/AFBtTNbnyHkTf47nT6nVS5AotbeBfsxqPkoGYtOCZk8y+hPyt1261fynE90xkns5GtWlbcuE&#xA;VWUn34uB9GYuYUXs+ydQcuEE8xsy7KnZOxV4Z5012HV/Od5FBIJEiIso4idy6HhQA/8AFpNDmNg7&#xA;QxyxSyE1GPEf80dfjzatXo8omPSfVVGtt/NOvNepeYv8Pafp1qDPbQIqXckYZnf00AQsASSvUnbO&#xA;c7D9rcefNOObhxfzL+N2TtfL7XM1vZpEABcu95pc6rqHqMhdkA/ZIAP6s7cZuIWDY8nVDSQGximH&#xA;lvVvMEOq21xp8bTzxOCKL26EMRtxI61zE12vw4IGWWUQB3/o622YtDcgcYIPl+l7yPN2mJAz3HKK&#xA;RRURD4ix8FI/jTOU0ftdpssCZCUJDpzv3H9dO5PZ2S6G4YXruu3OrXAdxwgjr6MI7V7nxOcx2p2p&#xA;PVzs7RHIfjq7rS6WOIbc2aeTYjHoEBP+7Gd/+GI/hnbezkOHRx8yT9rpO0ZXmPwTvN44Lynz5qFx&#xA;deabi0kP7jT1jWCPtWWMSM9P5jyp8hnQdn4wMQl1k8J7RaiUs/B/DH9Itid9fR2NteXUhFIwOKnu&#xA;3EcR9JzMJp0cIGRAeUXjs9Gc1Z5FLHxJapyODmT/AET9zvoilLUUQ2rSMaenQg/Mgfxy3RZeGVHk&#xA;mAJNBGeRNfePVl0ypa3uQ1KmgV1UtUfMCmcx7aaXDmw+NEfvMdb94Jqvhz8t+97n2U1OXFm8In0T&#xA;6dxAu/jy+T2Ly35l1bRGlazdTFLTnDKCyEj9qgK0PbPONL2hk05PB16Hk9xrdHjzVxcx1CdXf5la&#xA;5cW0kEkNoI5VKP8Au2YFTsQQ7spBG24zO/0Q5+gj8j+t138h4Ttcvs/Uw2TUvzGtLh7zS/r2rWIs&#xA;pYJGaUskC8AEZYQF+H4QGdanqe2b3s7WZNTgn4u3nGO5+Pf8HUa3RY8Goh4VX3SkeEe8d3xtnP5K&#xA;eetE1Wym8vRgxa5Yqbi+h4SqG5MFZh6iIV41VaNvmxwdnDS4+GJuN8/f+xwc/aEtTkMpCjX4+16f&#xA;k2DsVdirsVdiqFsNL07TxMtjbR2y3EpnmSJQitIyqpfiNqkIK4pMieavPbwXELQ3EazQuKPHIoZW&#xA;HuDUHEhYyINjYsD8+flppF3pTXWhaZb22q25DKLeNYjLHvzSicVLb1BIrtTM/sjLjwZxKQABFX3N&#xA;mp1WfJj4JTlKN3RNvF5Flt7lRLGyvC5EsZFHU0KkEGm4JzstSDOIMd97dLMGkr10ySKtwFYQxyEs&#xA;D2BQLzIHuM1epwSEOMiql9lAX83D1OImCHs730hxPxRncEds12TFxbh02XFxe9MY54pBVGB9u/3Z&#xA;iygRzcSUCOb3r8ndPmtPJwklFBeXElxGO/Cixj7/AE65h5j6nr+xcZjgs/xG/wBH6GcZS7ZpmVVL&#xA;MQqqKknYADFXx3e6TrEHndpXdjHc3sAsyCeJPrIdqinU8j+OchmxSwabgmOE8Er89vte1Osw58IM&#xA;CJcIHw6fC93rEWt2DH93ccKnYGq/rpnFy08uocCGvwS/iCcWyTTr8N0wbutT/XMDNKMDvAU5EiB0&#xA;Vzpl6w/vyfmT/XKRq8Y/hYeLHuSzVUbTIfXuq+lWhdQWAPv4ZnabIMx4Y80ZNVCEbKTWeo6vrt19&#xA;R8vWTTykgPcMP3UQP7Tt9lfv3zpNF2FPIfXsO7r+x1ubtQnaArzP6ntPl7SpNJ0W00+SdrmWBKSz&#xA;t1Z2JZiPbkdvbO/02AYsYgOQdTKRkbKY5exYH+ZHk3VNR46tofFtQjUR3NqTx9eMH4SrbUdPfqPl&#xA;Q7HRavg9MuToe1+yfH9cfrH2vAtek1Se7e0ukMEkLfvLZwyurU/bVviB+YzbEE+55yGLwtiCCkOo&#xA;RehErTOiUZSOTAVoe1euWYdjv3H7m/HcjsCUi1fUkuitvbVaMGpalOZ6Cg60yh2ul05huebOPJP5&#xA;ZeZ7KEeatVsZLLTIAnotOAjH6wwiWQo3xcB6la0985ztrJPUYzgwi+LmeQ23+Pw2ep7IjDBPxsp+&#xA;nkOZ32+Hxe9ab+Usa0bUb5mPeK3HEf8ABvX/AIjnNYfZ8f5SXy/X+x32bt4/wR+f6v2sp07yd5b0&#xA;+jQWMbSD/dsv71q+IL1p9GbbD2bgx8oi/Pd1WbtHPk5yNeWycMiMhRlBQihUioIO1KZnOEo2VnDZ&#xA;WsdrBy9KIEIGJYgE1pU4oApXxS7FXYq7FXYq7FXYql+q67YaWU+uLOEcEiSK3mmQU7M0SOF+nKsm&#xA;UQ538iW/DppZPpr4kD7ywq3byp5x1Br/AFyazREBjsNLMqR3IT/flwyssnI/soDRfc5XptdIyEuO&#xA;hE2I317yO/u7nYajSSww4YxJJHqnX+xie7vPX3MX8zfl8bSV3tLKZYbp47fS1iuIZxJcSM+zep6L&#xA;KvBVPem9TTN1P2k1MIkcMSTtE+bhabs7DMi5EcO8tv4RX9nyS64/J+1Rx6n123FPi/0Cdt/lYyXK&#xA;n55bHtfBQ48Ur8uv+l2dfk7JhM3Ew+dffTeiflt5Mi1WVdc1lre0txG6iYSWQl5cuSl7jgy8eHxb&#xA;V36jMbN2tiNiMTH+sf0V+lh/of2Bri8hv91vdrAWQsbdbEo1ksarbGIhk9MCi8SKginTMLivdyeD&#xA;g9NVSviqR+dU1N/Ld2mmxNNcMADEmzslfjC/MZKPNqzA8Jp5roP5a63q9hcX90E0/UhI31H6xGz8&#xA;FdAjcfiXiSqgc+Dd6Zru1ezxquEGRqN7dJcuZ57V+tOhyTxxkOXFX2X+tL7r8rfP1vIUjtLe9UU/&#xA;ewTqin6JvTb8M0eTsA36b+z9jLgCU6nrOp+S7y2svMapaG4XnDF6yzShK8edIfU4rUHdqDbrmJl9&#xA;lcmQHh3Pwr73YaTXHF6ZG4vQlvLq3EYuh+7lUPBcIQyOjCqsrLVWBB6jOI7Q7GyYJVKPCfxyLuYc&#xA;GQXA2rv9Vu7d45AJopAVdTQqQexGaqJnikCPTIMZQ6FmPl36kNKiS0t47aOOqtDCgRA3U0VQBvWu&#xA;e1dhdoDV6WOQACXKQH84fr5/F0OpxcE66Jlm4aHYqlOs6tJYX2nK8kdvYTtJ9aupa8QVUcE5bKpc&#xA;k7nwzD1OoOOcLIEDdk/YPj+hy9PgGSEqBMxVAfafh+lL9Wn8k62I1vNPg14xV9JfqYvAtevFmRkX&#xA;78nHtKI+gyP9Wz92zE9nzP1gR/rED792Fz/k55bu9bs72x8qW1pp8UM8dzBeTMokdzGYZPTiaXeP&#xA;i/cV5e2ZMe0tRKJAjR6cVfHlbSdDgjIXKx14b/TSq/knSdJ872EDi00qy1HSL6KX9HW8Vov7iS3B&#xA;V5G5seSTNV68vxyMpZZYicmSqkDtt399/oZR8IZAMeO7BG+/d3UnWqadpN55S1Ly55dhuLw3dm9p&#xA;DPzkeCN/T4RMZpW4fAaH4K9MxNPqoRneMSyG9z0+ZPD8nJz6aco1kMYCth1+Q3+bLtKOsG2U6osK&#xA;T0WqwMzCtN6swXv4DMnGZm+IAdzi5BAVwklG5Y1uxV2KuxV2KuxV2KuxV2KuxV2KqF1YWN2vG6t4&#xA;rhfCVFcf8MDkZQB5i2cMko/SSEok8ieU2kWSPTktZEPJJLRntWVqUqpgaOhptlB0mPur3bfc5Q7R&#xA;zgUZWPP1ffaL07Q/qNx6qahezx8Sv1e4m9ZN/wBqrgyVH+tlkMXCeZ+Jtqy6jjFGMQe8Cv2fYmeW&#xA;uO7FXYq7FXYq7FXjv5vfkjrPnHzNb63pGoW8BMCW15Dd+oAqxsxDxGNXqfj+yafPMrT6k472YmL0&#xA;3RfLtnpvlvT9Ck/0u3sLaK1DygEt6SBOVO1adumYOfFDKCJgSB72yE5QNg0UvufIunO5e1mktif2&#xA;Qeaj5Vo345zep9lNPM+kmPlzH27/AGuxh2pMCpASTvTNOh060W2iLMASzOxqzMepObvQaHHpcQxw&#xA;5feXCz5jklxFFZmtLsVcQCCCKg7EHFUq1qwvJp7G6tkWc2UjSG0dzGrll4qwYBhyTtUZianFKRjK&#xA;O/CeXL8U5emyxiJRltxDnz/FrTF5muvtzQabEe0INxN/wbhEH/AHBw558zGA8vUftofYU8WCHISm&#xA;fP0j7LP2hyeVNGNzHd3kR1G8hr6VzeH1mTlSvAH4ErT9lRk4aWI53L+sb+zl9jCeqkeVR/qivt5/&#xA;am4AAoNgOgzJcZ2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:DC0B9E8DC96CE91183158642932CA4DA</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:DC0B9E8DC96CE91183158642932CA4DA</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:9234e693-cfb4-5345-8cac-a9d91dc65991</stRef:instanceID>
            <stRef:documentID>xmp.did:27e8cea6-a52c-b84d-b2e1-cb4913ec6d84</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1dbe94a2-f620-9849-95bc-f55a54f5fd99</stEvt:instanceID>
                  <stEvt:when>2019-03-22T20:23:25+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5a0c243d-a153-b946-a2f2-5d65f4842361</stEvt:instanceID>
                  <stEvt:when>2019-03-26T10:16:36+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:44ce098d-7bb5-9044-95a0-cc4d945f24a9</stEvt:instanceID>
                  <stEvt:when>2019-03-26T14:42:42+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:27e8cea6-a52c-b84d-b2e1-cb4913ec6d84</stEvt:instanceID>
                  <stEvt:when>2019-03-26T15:32:06+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9234e693-cfb4-5345-8cac-a9d91dc65991</stEvt:instanceID>
                  <stEvt:when>2019-04-23T20:18:20+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:DC0B9E8DC96CE91183158642932CA4DA</stEvt:instanceID>
                  <stEvt:when>2019-05-02T14:00:53+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>700.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
700 500 li
700 0 li
cp
clp
700 500 mo
0 500 li
0 0 li
700 0 li
700 500 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
300.531 64.4927 mo
292.021 64.6567 283.466 67.9048 277.41 73.9605 cv
268.251 83.1196 260.837 76.1411 253.641 83.3374 cv
246.444 90.5337 266.507 107.98 288.314 112.341 cv
307.282 116.135 362.196 110.524 383.86 106.703 cv
388.665 105.855 392.341 101.875 392.685 97.0082 cv
392.884 94.1918 392.54 89.0733 391.05 87.5831 cv
390.203 86.737 388.888 86.9207 387.564 87.1043 cv
386.575 87.2416 385.581 87.3788 384.774 87.0865 cv
380.253 85.4487 375.661 83.9961 371.07 82.565 cv
358.768 78.7304 346.374 75.1845 333.938 71.8115 cv
324.767 69.3242 315.34 66.1161 305.939 64.8106 cv
304.155 64.563 302.344 64.458 300.531 64.4927 cv
.937255 .941176 .662745 rgb
f
384.774 87.0865 mo
380.253 85.4487 375.661 83.9961 371.07 82.565 cv
369.262 82.0014 367.451 81.4457 365.64 80.8941 cv
369.587 85.5894 379.457 98.9112 368.754 103.564 cv
355.67 109.253 294.103 111.614 268.188 103.564 cv
266.552 103.056 264.983 102.369 263.481 101.528 cv
270.152 106.298 279.076 110.493 288.314 112.341 cv
307.282 116.134 362.196 110.524 383.86 106.703 cv
388.665 105.855 392.341 101.875 392.685 97.0082 cv
392.884 94.1918 392.54 89.0733 391.05 87.5831 cv
390.203 86.737 388.888 86.9207 387.564 87.1043 cv
386.575 87.2416 385.581 87.3788 384.774 87.0865 cv
.811765 .760784 .572549 rgb
f
313.498 108.669 mo
340.638 108.669 378.263 104.842 389.704 103.606 cv
391.187 102.085 392.217 100.134 392.571 97.9605 cv
392.223 98.0635 li
387.557 98.5859 313.06 106.808 291.516 101.867 cv
269.917 96.9141 259.108 84.2597 259.002 84.1323 cv
254.98 87.482 li
255.457 88.0552 266.928 101.598 290.346 106.968 cv
295.701 108.196 303.946 108.669 313.498 108.669 cv
.6 .411765 .513726 rgb
f
392.571 97.9605 mo
392.223 98.0635 li
389.548 98.3628 363.929 101.192 338.49 102.622 cv
335.622 104.794 332.595 106.652 329.461 108.315 cv
353.704 107.337 380.387 104.613 389.704 103.606 cv
391.187 102.085 392.217 100.134 392.571 97.9605 cv
.501961 .25098 .384314 rgb
f
357.732 80.2999 mo
356.692 79.583 356.994 77.9785 358.225 77.6943 cv
360.268 77.2222 363.294 76.1392 367.111 73.6806 cv
374.561 68.8828 382.024 57.9765 389.778 57.9765 cv
397.532 57.9765 407.219 60.2485 411.416 64.4458 cv
414.725 67.7544 411.38 74.5498 407.563 74.332 cv
400.016 73.9004 393.221 81.9478 391.05 87.5831 cv
390.652 88.6158 389.611 89.248 388.515 89.0977 cv
382.387 88.2569 365.31 85.5225 357.732 80.2999 cv
.0352941 .568627 .615686 rgb
f
391.069 87.5326 mo
391.072 87.5251 391.075 87.5171 391.078 87.5095 cv
391.075 87.5171 391.072 87.5251 391.069 87.5326 cv
391.083 87.4973 mo
391.095 87.4669 391.107 87.4367 391.119 87.4061 cv
391.107 87.4367 391.095 87.4669 391.083 87.4973 cv
391.119 87.4053 mo
393.304 81.929 399.741 74.3201 406.972 74.3153 cv
399.742 74.321 393.304 81.9294 391.119 87.4053 cv
407.743 74.3371 mo
407.743 74.3371 li
407.743 74.3371 li
407.743 74.3371 li
407.75 74.3371 mo
411.477 74.3284 414.652 67.7386 411.444 64.4741 cv
414.652 67.7388 411.477 74.3292 407.75 74.3371 cv
406.979 74.3153 mo
406.979 74.3153 li
406.979 74.3153 li
406.979 74.3153 li
.756863 .890196 .901961 rgb
f
388.836 89.1197 mo
388.836 89.1197 388.836 89.1197 388.835 89.1197 cv
388.836 89.1197 388.836 89.1197 388.836 89.1197 cv
388.836 89.1197 li
388.842 89.1197 mo
389.797 89.1173 390.662 88.5331 391.031 87.6312 cv
390.661 88.5332 389.797 89.1174 388.842 89.1197 cv
388.535 89.1004 mo
388.535 89.1004 388.534 89.1003 388.534 89.1002 cv
388.534 89.1003 388.535 89.1004 388.535 89.1004 cv
388.491 89.0944 mo
388.488 89.094 388.484 89.0935 388.481 89.0931 cv
388.485 89.0935 388.488 89.0939 388.491 89.0944 cv
388.466 89.0909 mo
388.462 89.0904 388.458 89.0899 388.454 89.0894 cv
388.458 89.0899 388.462 89.0904 388.466 89.0909 cv
.615686 .678431 .517647 rgb
f
388.836 89.1197 mo
388.836 89.1197 388.836 89.1197 388.835 89.1197 cv
388.736 89.1196 388.636 89.1133 388.535 89.1004 cv
388.535 89.1004 388.534 89.1003 388.534 89.1002 cv
388.528 89.0994 388.521 89.0985 388.515 89.0977 cv
388.515 89.0977 li
388.515 89.0977 li
388.507 89.0966 388.499 89.0955 388.491 89.0944 cv
388.488 89.0939 388.485 89.0935 388.481 89.0931 cv
388.476 89.0924 388.471 89.0916 388.466 89.0909 cv
388.462 89.0904 388.458 89.0899 388.454 89.0894 cv
383.564 88.4163 371.902 86.5615 363.506 83.2363 cv
376.857 78.4663 390.338 60.3799 388.128 58.1416 cv
388.677 58.0371 389.227 57.9765 389.778 57.9765 cv
397.532 57.9765 407.219 60.2485 411.416 64.4458 cv
411.426 64.4552 411.435 64.4645 411.444 64.4741 cv
414.652 67.7386 411.477 74.3284 407.75 74.3371 cv
407.748 74.3371 407.745 74.3371 407.743 74.3371 cv
407.743 74.3371 li
407.683 74.3371 407.623 74.3354 407.563 74.332 cv
407.563 74.332 li
407.563 74.332 li
407.368 74.3208 407.174 74.3153 406.979 74.3153 cv
406.979 74.3153 li
406.979 74.3153 li
406.979 74.3153 li
406.977 74.3153 406.974 74.3153 406.972 74.3153 cv
399.741 74.3201 393.304 81.929 391.119 87.4053 cv
391.119 87.4056 391.119 87.4058 391.119 87.4061 cv
391.107 87.4367 391.095 87.4669 391.083 87.4973 cv
391.081 87.5014 391.08 87.5054 391.078 87.5095 cv
391.075 87.5171 391.072 87.5251 391.069 87.5326 cv
391.063 87.5495 391.056 87.5662 391.05 87.5831 cv
391.05 87.5831 li
391.05 87.5831 li
391.043 87.5992 391.037 87.6153 391.031 87.6312 cv
390.662 88.5331 389.797 89.1173 388.842 89.1197 cv
388.84 89.1197 388.838 89.1197 388.836 89.1197 cv
.027451 .505882 .556863 rgb
f
408.615 69.3174 mo
400.008 68.7852 394.063 79.23 388.136 85.1567 cv
386.719 86.5742 385.332 87.6436 384.079 88.4258 cv
385.849 88.7178 387.374 88.9409 388.515 89.0977 cv
389.611 89.248 390.652 88.6157 391.05 87.583 cv
393.221 81.9478 400.016 73.9004 407.563 74.332 cv
410.558 74.5029 413.26 70.3584 412.688 66.9663 cv
411.599 68.4409 410.141 69.4116 408.615 69.3174 cv
cp
.027451 .470588 .509804 rgb
f
308.812 92.1216 mo
310.864 90.0702 317.413 77.1557 314.482 76.5503 cv
310.147 75.6543 297.708 70.9268 289.268 66.5556 cv
284.109 67.1753 279.768 70.1163 276.18 73.7046 cv
275.571 74.313 275.073 74.8004 274.626 75.2637 cv
272.59 77.3774 272.661 80.7578 274.825 82.7392 cv
276.932 84.6675 280.135 86.6314 284.825 88.8916 cv
298.993 95.7208 306.761 94.1729 308.812 92.1216 cv
.0352941 .533333 .639216 rgb
f
308.812 92.1216 mo
310.864 90.0702 317.413 77.1557 314.482 76.5503 cv
310.147 75.6543 297.708 70.9268 289.268 66.5556 cv
284.109 67.1753 279.768 70.1163 276.18 73.7046 cv
275.571 74.313 275.073 74.8004 274.626 75.2637 cv
272.59 77.3774 272.661 80.7578 274.825 82.7392 cv
276.932 84.6675 280.135 86.6314 284.825 88.8916 cv
298.993 95.7208 306.761 94.1729 308.812 92.1216 cv
f
329.359 89.6172 mo
325.71 89.1362 li
323.114 88.7944 321.27 86.3901 321.612 83.7944 cv
322.093 80.1455 li
322.435 77.5498 324.839 75.7056 327.435 76.0479 cv
331.083 76.5283 li
333.68 76.8706 335.523 79.2744 335.182 81.8701 cv
334.701 85.519 li
334.358 88.1152 331.955 89.959 329.359 89.6172 cv
cp
.027451 .423529 .509804 rgb
f
345.369 91.584 mo
342.381 91.1899 li
340.255 90.9102 338.745 88.9414 339.024 86.8154 cv
339.418 83.8271 li
339.698 81.7012 341.667 80.1909 343.793 80.4712 cv
346.781 80.8652 li
348.907 81.145 350.417 83.1138 350.137 85.2397 cv
349.744 88.228 li
349.463 90.354 347.495 91.8638 345.369 91.584 cv
cp
f
359.651 93.7275 mo
357.133 93.3955 li
355.341 93.1597 354.068 91.5005 354.304 89.7085 cv
354.636 87.1899 li
354.872 85.3979 356.531 84.1255 358.323 84.3613 cv
360.842 84.6934 li
362.634 84.9292 363.906 86.5884 363.67 88.3804 cv
363.339 90.8989 li
363.103 92.6909 361.443 93.9634 359.651 93.7275 cv
cp
f
372.303 94.9136 mo
370.568 94.6851 li
369.335 94.5225 368.459 93.3804 368.621 92.147 cv
368.85 90.4131 li
369.013 89.1792 370.154 88.3032 371.388 88.4658 cv
373.122 88.6943 li
374.355 88.8569 375.232 89.999 375.069 91.2324 cv
374.841 92.9663 li
374.678 94.1997 373.536 95.0757 372.303 94.9136 cv
cp
f
334.316 81.7563 mo
333.836 85.4053 li
333.582 87.332 331.924 88.7856 329.98 88.7856 cv
329.812 88.7856 329.641 88.7744 329.473 88.7524 cv
325.824 88.2715 li
324.799 88.1362 323.886 87.6064 323.251 86.7798 cv
322.617 85.9526 322.342 84.9326 322.477 83.9087 cv
322.958 80.2593 li
323.211 78.3325 324.87 76.8789 326.814 76.8789 cv
326.982 76.8789 327.152 76.8901 327.321 76.9121 cv
330.97 77.3931 li
331.994 77.5283 332.908 78.0581 333.542 78.8848 cv
334.177 79.7119 334.452 80.7319 334.316 81.7563 cv
cp
331.083 76.5283 mo
327.435 76.0479 li
327.226 76.02 327.019 76.0068 326.813 76.0068 cv
324.466 76.0068 322.407 77.7583 322.093 80.1455 cv
321.612 83.7944 li
321.27 86.3901 323.114 88.7944 325.71 89.1362 cv
329.359 89.6172 li
329.567 89.6445 329.775 89.6577 329.98 89.6577 cv
332.328 89.6577 334.386 87.9063 334.701 85.519 cv
335.182 81.8701 li
335.523 79.2744 333.68 76.8706 331.083 76.5283 cv
cp
.156863 .627451 .717647 rgb
f
349.272 85.1255 mo
348.879 88.1138 li
348.681 89.6143 347.391 90.7451 345.878 90.7451 cv
345.747 90.7451 345.614 90.7363 345.483 90.7192 cv
342.495 90.3252 li
341.698 90.2202 340.986 89.8081 340.492 89.1641 cv
339.999 88.5205 339.785 87.7266 339.89 86.9297 cv
340.283 83.9409 li
340.481 82.4409 341.771 81.3101 343.285 81.3101 cv
343.416 81.3101 343.548 81.3188 343.679 81.3359 cv
346.667 81.7295 li
347.465 81.835 348.176 82.2471 348.67 82.8911 cv
349.164 83.5352 349.378 84.3286 349.272 85.1255 cv
cp
346.781 80.8652 mo
343.793 80.4712 li
343.622 80.4487 343.453 80.4375 343.285 80.4375 cv
341.362 80.438 339.676 81.8721 339.418 83.8271 cv
339.024 86.8154 li
338.745 88.9414 340.255 90.9102 342.381 91.1899 cv
345.369 91.584 li
345.54 91.6064 345.709 91.6172 345.878 91.6172 cv
347.8 91.6172 349.486 90.1831 349.744 88.228 cv
350.137 85.2397 li
350.417 83.1138 348.907 81.145 346.781 80.8652 cv
cp
f
362.806 88.2666 mo
362.474 90.7852 li
362.316 91.9814 361.287 92.8833 360.08 92.8833 cv
359.976 92.8833 359.869 92.8765 359.765 92.8628 cv
357.246 92.5308 li
355.927 92.3569 354.995 91.1421 355.169 89.8228 cv
355.501 87.3037 li
355.658 86.1079 356.688 85.2056 357.895 85.2056 cv
357.999 85.2056 358.104 85.2124 358.209 85.2261 cv
360.728 85.5581 li
362.047 85.7319 362.979 86.9468 362.806 88.2666 cv
cp
360.842 84.6934 mo
358.323 84.3613 li
358.179 84.3423 358.036 84.333 357.895 84.333 cv
356.273 84.3335 354.853 85.542 354.636 87.1899 cv
354.304 89.7085 li
354.068 91.5005 355.341 93.1597 357.133 93.3955 cv
359.651 93.7275 li
359.795 93.7466 359.938 93.7559 360.08 93.7559 cv
361.7 93.7559 363.121 92.5469 363.339 90.8989 cv
363.67 88.3804 li
363.906 86.5884 362.634 84.9292 360.842 84.6934 cv
cp
f
374.204 91.1187 mo
373.976 92.8525 li
373.885 93.541 373.293 94.0605 372.598 94.0605 cv
372.417 94.0483 li
370.683 93.8203 li
370.317 93.772 369.99 93.5825 369.764 93.2866 cv
369.536 92.9907 369.438 92.626 369.486 92.2607 cv
369.715 90.5269 li
369.806 89.8384 370.398 89.3188 371.094 89.3184 cv
371.274 89.3306 li
373.008 89.5591 li
373.374 89.6074 373.7 89.7964 373.927 90.0928 cv
374.154 90.3887 374.253 90.7529 374.204 91.1187 cv
cp
373.122 88.6943 mo
371.388 88.4658 li
371.289 88.4526 371.19 88.4463 371.094 88.4463 cv
369.978 88.4463 368.999 89.2788 368.85 90.4131 cv
368.621 92.147 li
368.459 93.3804 369.335 94.5225 370.568 94.6851 cv
372.303 94.9136 li
372.401 94.9268 372.5 94.9331 372.598 94.9331 cv
373.713 94.9331 374.691 94.1006 374.841 92.9663 cv
375.069 91.2324 li
375.232 89.999 374.355 88.8569 373.122 88.6943 cv
cp
f
331.377 108.024 mo
334.101 107.855 336.59 111.769 336.943 116.786 cv
337.296 121.803 335.378 126.026 332.658 126.24 cv
333.142 126.223 333.629 126.2 334.122 126.166 cv
344.874 125.41 353.303 120.706 352.948 115.66 cv
352.594 110.614 343.589 107.137 332.836 107.893 cv
332.344 107.927 331.858 107.973 331.377 108.024 cv
cp
.627451 .823529 .827451 rgb
f
332.836 107.893 mo
332.344 107.927 331.858 107.973 331.377 108.024 cv
334.099 107.855 336.586 111.763 336.942 116.774 cv
340.595 118.422 344.542 120.753 345.744 123.485 cv
350.314 121.488 353.157 118.634 352.948 115.66 cv
352.594 110.614 343.589 107.137 332.836 107.893 cv
cp
.501961 .658824 .658824 rgb
f
336.943 116.786 mo
336.59 111.769 334.101 107.855 331.377 108.024 cv
331.303 108.032 li
328.597 108.273 326.694 112.482 327.045 117.481 cv
327.397 122.481 329.871 126.382 332.583 126.243 cv
332.658 126.24 li
335.378 126.026 337.296 121.803 336.943 116.786 cv
cp
.627451 .823529 .827451 rgb
f
331.345 122.17 mo
330.993 117.17 332.896 112.962 335.602 112.72 cv
335.676 112.712 li
335.825 112.703 335.974 112.711 336.122 112.726 cv
335.102 109.825 333.299 107.905 331.377 108.024 cv
331.303 108.032 li
328.597 108.273 326.694 112.482 327.045 117.481 cv
327.379 122.222 329.62 125.968 332.164 126.226 cv
331.74 125.018 331.448 123.644 331.345 122.17 cv
cp
.513726 .678431 .678431 rgb
f
336.943 116.786 mo
336.693 113.229 335.367 110.235 333.647 108.849 cv
331.944 110.339 330.906 113.679 331.173 117.481 cv
331.423 121.041 332.751 124.034 334.473 125.418 cv
336.174 123.927 337.21 120.586 336.943 116.786 cv
cp
.372549 .486275 .490196 rgb
f
335.375 124.162 mo
334.868 123.471 334.496 122.705 334.138 121.743 cv
336.801 120.35 li
336.904 119.694 336.966 119.004 336.98 118.288 cv
333.627 120.041 li
333.458 119.321 333.335 118.561 333.266 117.768 cv
336.968 117.282 li
336.961 117.117 336.955 116.952 336.943 116.786 cv
336.914 116.363 336.867 115.949 336.809 115.543 cv
333.206 116.016 li
333.225 114.928 333.352 113.899 333.571 112.962 cv
336.695 114.864 li
336.528 113.982 336.292 113.155 336.003 112.4 cv
334.114 111.25 li
334.3 110.804 334.505 110.386 334.737 110.019 cv
334.365 109.513 333.989 109.125 333.647 108.849 cv
331.944 110.339 330.906 113.679 331.173 117.481 cv
331.423 121.041 332.682 123.948 334.404 125.332 cv
334.766 125.014 335.112 124.58 335.375 124.162 cv
cp
.243137 .317647 .321569 rgb
f
332.344 123.912 mo
330.46 123.912 328.721 120.982 328.468 117.381 cv
328.198 113.549 329.66 110.353 331.644 110.353 cv
333.528 110.353 335.267 113.284 335.521 116.885 cv
335.782 120.609 334.402 123.912 332.344 123.912 cv
cp
336.943 116.786 mo
336.598 111.873 334.203 108.019 331.546 108.019 cv
328.723 108.019 326.682 112.319 327.045 117.481 cv
327.391 122.395 329.785 126.247 332.442 126.247 cv
335.295 126.247 337.303 121.9 336.943 116.786 cv
cp
.6 .301961 .462745 rgb
f
372.203 100.136 mo
372.203 100.136 390.121 109.925 398.226 108.628 cv
406.331 107.333 391.912 94.8657 391.912 94.8657 cv
391.912 94.8657 368.714 92.3945 372.203 100.136 cv
cp
.0352941 .568627 .615686 rgb
f
398.226 108.628 mo
401.742 108.066 401.019 105.402 399.072 102.565 cv
399.744 103.855 400.204 105.78 397.717 106.678 cv
394.187 107.953 377.074 98.1138 373.67 96.123 cv
372.084 96.98 371.355 98.2563 372.203 100.136 cv
372.203 100.136 390.121 109.925 398.226 108.628 cv
cp
.027451 .470588 .509804 rgb
f
313.901 97.4395 mo
313.028 92.642 li
329.456 99.7656 li
329.456 99.7656 371.472 122.009 375.252 122.009 cv
379.031 122.009 382.076 120.918 382.076 120.918 cv
382.076 120.918 383.002 122.642 383.002 125.428 cv
383.002 128.214 379.177 131.022 365.074 126.516 cv
352.549 122.513 322.245 103.828 315.627 99.7011 cv
314.795 99.1821 314.183 98.379 313.901 97.4395 cv
f
313.028 92.642 mo
313.028 92.642 344.431 117.066 366.528 122.736 cv
388.626 128.406 384.265 121.043 375.106 113.603 cv
367.048 107.056 352.04 97.2665 348.55 95.0083 cv
348.052 94.6865 347.51 94.4482 346.936 94.2973 cv
341.928 92.9804 316.949 86.7607 313.028 92.642 cv
.0352941 .568627 .615686 rgb
f
368.52 119.986 mo
378.558 116.637 li
378.325 116.412 378.085 116.185 377.838 115.957 cv
368.684 119.012 li
358.814 111.403 li
368.722 108.742 li
368.42 108.523 368.116 108.303 367.811 108.083 cv
363.671 109.195 li
358.15 105.026 li
362.346 104.231 li
362.008 103.997 361.671 103.765 361.336 103.534 cv
352.402 105.227 li
346.441 100.663 li
353.858 98.4892 li
353.531 98.2719 353.215 98.0625 352.907 97.8594 cv
344.545 100.31 li
352.182 106.157 li
356.993 105.245 li
362.604 109.482 li
356.887 111.018 li
368.52 119.986 li
.027451 .470588 .509804 rgb
f
349.273 108.019 mo
341.132 108.019 324.413 94.4971 324.413 94.4971 cv
324.038 93.371 325.329 92.9534 327.452 92.9534 cv
332.348 92.9534 341.663 95.1745 345.149 96.0508 cv
346.063 96.2808 346.877 96.7885 347.49 97.5049 cv
347.86 97.9362 348.304 98.4717 348.772 99.071 cv
344.545 100.31 li
352.182 106.157 li
352.283 106.138 li
352.187 107.263 351.349 108.019 349.273 108.019 cv
352.189 105.064 mo
346.441 100.663 li
349.338 99.814 li
350.575 101.479 351.827 103.464 352.189 105.064 cv
.0470588 .647059 .694118 rgb
f
352.182 106.157 mo
344.545 100.31 li
348.772 99.071 li
348.958 99.3093 349.148 99.5581 349.338 99.814 cv
346.441 100.663 li
352.189 105.064 li
352.275 105.447 352.311 105.808 352.283 106.138 cv
352.182 106.157 li
.0392157 .568627 .607843 rgb
f
266.7 79.2021 mo
262.074 79.7573 257.82 79.1577 253.641 83.3374 cv
250.008 86.9702 253.324 93.2144 260.301 99.0688 cv
260.624 98.9214 260.948 98.7686 261.273 98.6025 cv
269.917 94.1904 268.801 85.3179 266.7 79.2021 cv
cp
.6 .301961 .462745 rgb
f
264.943 79.3706 mo
260.987 79.6821 257.286 79.6924 253.641 83.3374 cv
251.905 85.0732 251.759 87.4058 252.837 90.0063 cv
255.192 90.9868 257.715 91.3081 260.17 90.2856 cv
265.824 87.9312 265.7 82.6987 264.943 79.3706 cv
cp
.6 .411765 .513726 rgb
f
318.448 73.1293 mo
316.802 73.1292 314.923 72.9828 313.028 72.69 cv
306.441 71.6729 301.734 68.1836 301.734 68.1836 cv
298.852 66.5568 299.701 65.943 302.284 65.943 cv
307.781 65.943 321.131 68.7227 323.104 70.437 cv
325.171 72.2318 322.523 73.1293 318.448 73.1293 cv
.956863 .964706 .8 rgb
f
308.821 92.1128 mo
308.822 92.1118 308.823 92.1107 308.824 92.1096 cv
308.823 92.1107 308.822 92.1117 308.821 92.1128 cv
308.827 92.1072 mo
308.828 92.106 308.829 92.1049 308.83 92.1037 cv
308.829 92.1049 308.828 92.106 308.827 92.1072 cv
308.833 92.1011 mo
308.834 92.0999 308.835 92.0987 308.836 92.0975 cv
308.835 92.0987 308.834 92.0999 308.833 92.1011 cv
308.839 92.0943 mo
308.84 92.0933 308.841 92.0925 308.842 92.0916 cv
308.841 92.0925 308.84 92.0933 308.839 92.0943 cv
308.845 92.0881 mo
308.846 92.0872 308.847 92.0863 308.848 92.0853 cv
308.847 92.0863 308.846 92.0872 308.845 92.0881 cv
308.851 92.0818 mo
308.852 92.081 308.853 92.0798 308.854 92.079 cv
308.853 92.0799 308.852 92.0809 308.851 92.0818 cv
308.857 92.0758 mo
308.858 92.0747 308.859 92.0739 308.86 92.0728 cv
308.859 92.0738 308.858 92.0748 308.857 92.0758 cv
308.864 92.0683 mo
308.865 92.0679 308.865 92.0674 308.866 92.0669 cv
308.865 92.0673 308.865 92.0679 308.864 92.0683 cv
308.87 92.0622 mo
308.871 92.0617 308.871 92.061 308.872 92.0604 cv
308.871 92.0611 308.871 92.0616 308.87 92.0622 cv
308.877 92.0554 mo
308.877 92.055 308.877 92.0547 308.878 92.0543 cv
308.877 92.0546 308.877 92.055 308.877 92.0554 cv
308.883 92.049 mo
308.883 92.0486 308.883 92.0482 308.884 92.0478 cv
308.883 92.0482 308.883 92.0486 308.883 92.049 cv
274.807 82.7227 mo
274.807 82.7226 274.807 82.7226 274.807 82.7225 cv
274.807 82.7226 274.807 82.7226 274.807 82.7227 cv
.6 .831372 .752941 rgb
f
302.498 93.8675 mo
298.464 93.8674 292.61 92.6442 284.825 88.8916 cv
280.135 86.6314 276.932 84.6675 274.825 82.7392 cv
274.825 82.7392 li
274.819 82.7337 274.813 82.7282 274.807 82.7227 cv
274.807 82.7226 274.807 82.7226 274.807 82.7225 cv
274.43 82.3737 274.12 81.9811 273.872 81.5616 cv
276.221 79.2738 280.38 76.625 287.341 76.0069 cv
287.961 75.9518 288.588 75.9257 289.221 75.9257 cv
298.316 75.9257 308.509 81.3371 313.321 84.2383 cv
311.846 87.5799 309.89 90.9744 308.884 92.0478 cv
308.883 92.0482 308.883 92.0486 308.883 92.049 cv
308.881 92.0508 308.879 92.0525 308.878 92.0543 cv
308.877 92.0547 308.877 92.055 308.877 92.0554 cv
308.875 92.0571 308.873 92.0588 308.872 92.0604 cv
308.871 92.061 308.871 92.0617 308.87 92.0622 cv
308.869 92.0638 308.867 92.0654 308.866 92.0669 cv
308.865 92.0674 308.865 92.0679 308.864 92.0683 cv
308.863 92.0698 308.862 92.0713 308.86 92.0728 cv
308.859 92.0739 308.858 92.0747 308.857 92.0758 cv
308.856 92.0769 308.855 92.0779 308.854 92.079 cv
308.853 92.0798 308.852 92.081 308.851 92.0818 cv
308.85 92.0829 308.849 92.0842 308.848 92.0853 cv
308.847 92.0863 308.846 92.0872 308.845 92.0881 cv
308.844 92.0893 308.843 92.0904 308.842 92.0916 cv
308.841 92.0925 308.84 92.0933 308.839 92.0943 cv
308.838 92.0953 308.837 92.0965 308.836 92.0975 cv
308.835 92.0987 308.834 92.0999 308.833 92.1011 cv
308.832 92.1019 308.831 92.1028 308.83 92.1037 cv
308.829 92.1049 308.828 92.106 308.827 92.1072 cv
308.826 92.108 308.825 92.1088 308.824 92.1096 cv
308.823 92.1107 308.822 92.1118 308.821 92.1128 cv
308.818 92.1157 308.815 92.1187 308.812 92.1216 cv
308.812 92.1216 li
307.888 93.0457 305.805 93.8676 302.498 93.8675 cv
.176471 .643137 .741176 rgb
f
614.484 355.468 mo
614.484 355.468 614.354 356.377 614.862 358.558 cv
615.371 360.739 622.527 363.458 622.527 363.458 cv
623.803 361.066 li
614.484 355.468 li
cp
.0980392 .239216 .439216 rgb
f
614.685 355.984 mo
614.655 355.95 li
613.578 354.717 617.896 353.79 619.59 354.162 cv
637.244 361.057 li
637.244 361.057 628.017 360.276 628.615 363.607 cv
625.531 362.361 616.411 357.938 614.685 355.984 cv
cp
f
617.163 357.315 mo
617.163 358.4 616.254 359.28 615.132 359.28 cv
614.01 359.28 613.1 358.4 613.1 357.315 cv
613.1 356.231 614.01 355.351 615.132 355.351 cv
616.254 355.351 617.163 356.231 617.163 357.315 cv
cp
.639216 .219608 .0784314 rgb
f
620.527 366.079 mo
621.068 367.353 620.823 368.678 619.978 369.038 cv
619.131 369.397 618.006 368.656 617.464 367.38 cv
616.922 366.106 615.229 358.014 615.229 358.014 cv
615.229 358.014 619.984 364.803 620.527 366.079 cv
cp
.0784314 .462745 .580392 rgb
f
620.527 366.079 mo
621.068 367.353 620.823 368.678 619.978 369.038 cv
619.131 369.397 618.006 368.656 617.464 367.38 cv
616.922 366.106 615.229 358.014 615.229 358.014 cv
615.229 358.014 619.984 364.803 620.527 366.079 cv
cp
f
609.068 348.085 mo
608.526 346.81 608.772 345.485 609.618 345.125 cv
610.464 344.766 611.589 345.508 612.131 346.783 cv
612.674 348.057 614.365 356.15 614.365 356.15 cv
614.365 356.15 609.61 349.36 609.068 348.085 cv
cp
f
624.285 352.041 mo
625.601 351.607 626.9 351.962 627.188 352.835 cv
627.477 353.708 626.644 354.767 625.327 355.201 cv
624.012 355.635 615.807 356.645 615.807 356.645 cv
615.807 356.645 622.97 352.474 624.285 352.041 cv
cp
f
605.398 361.957 mo
604.083 362.39 602.783 362.035 602.495 361.162 cv
602.207 360.289 603.04 359.23 604.356 358.795 cv
605.672 358.362 613.877 357.351 613.877 357.351 cv
613.877 357.351 606.715 361.523 605.398 361.957 cv
cp
f
615.117 355.352 mo
614.002 355.36 613.1 356.235 613.1 357.315 cv
613.1 358.243 613.767 359.015 614.659 359.221 cv
615.775 359.213 616.677 358.338 616.677 357.258 cv
616.677 356.331 616.011 355.559 615.117 355.352 cv
cp
.639216 .219608 .0784314 rgb
f
615.662 357.315 mo
615.662 357.929 615.147 358.426 614.513 358.426 cv
613.879 358.426 613.364 357.929 613.364 357.315 cv
613.364 356.702 613.879 356.204 614.513 356.204 cv
615.147 356.204 615.662 356.702 615.662 357.315 cv
cp
.807843 .337255 .219608 rgb
f
470.611 408.562 mo
470.27 405.612 471.822 402.335 475.393 401.117 cv
476.168 400.852 476.999 401.339 477.125 402.15 cv
477.224 402.791 476.832 403.389 476.219 403.599 cv
473.871 404.402 472.998 406.423 473.211 408.261 cv
473.518 410.917 476.015 413.424 480.896 413.052 cv
491.37 412.246 553.391 395.861 554.056 395.685 cv
558.686 397.174 li
555.961 397.895 491.808 414.837 481.098 415.661 cv
474.574 416.165 471.054 412.39 470.611 408.562 cv
cp
.929412 .501961 .137255 rgb
f
545.961 398.564 mo
543.796 373.53 li
546.403 373.304 li
548.568 398.338 li
545.961 398.564 li
cp
.0980392 .239216 .439216 rgb
f
514.837 407.019 mo
514.278 380.083 li
516.894 380.03 li
517.452 406.965 li
514.837 407.019 li
cp
f
493.245 423.867 mo
492.634 420.96 493.878 417.555 497.321 416.013 cv
498.07 415.678 498.941 416.087 499.142 416.882 cv
499.299 417.511 498.964 418.143 498.372 418.409 cv
496.108 419.423 495.425 421.517 495.807 423.329 cv
496.356 425.944 499.074 428.211 503.9 427.391 cv
514.256 425.625 574.505 403.602 575.151 403.366 cv
579.898 404.422 li
577.251 405.391 514.93 428.165 504.342 429.97 cv
497.876 431.075 494.036 427.624 493.245 423.867 cv
cp
.929412 .501961 .137255 rgb
f
567.356 406.977 mo
562.896 382.249 li
565.472 381.785 li
569.932 406.513 li
567.356 406.977 li
cp
.0980392 .239216 .439216 rgb
f
537.142 418.261 mo
534.106 391.491 li
536.706 391.197 li
539.741 417.966 li
537.142 418.261 li
cp
f
523.222 336.285 mo
524.56 336.145 536.362 336.141 537.756 336.209 cv
555.558 337.08 573.402 342.957 582.741 358.142 cv
582.741 358.142 588.163 358.218 589.877 358.228 cv
612.913 358.353 606.728 357.979 629.764 357.979 cv
629.764 357.979 637.614 343.292 644.156 343.292 cv
637.614 364.812 li
536.497 394.671 li
523.222 336.285 li
cp
.929412 .501961 .137255 rgb
f
527.836 336.948 mo
526.131 336.948 li
526.131 325.393 li
527.836 325.393 li
527.836 336.948 li
cp
.0196078 .188235 .419608 rgb
f
525.995 325.552 mo
525.995 325.552 526.221 325.507 526.645 325.423 cv
533.535 324.071 592.829 312.607 589.83 319.293 cv
586.646 326.391 526.674 326.995 526.674 326.995 cv
525.995 325.552 li
cp
.384314 .541176 .631373 rgb
f
536.497 327.822 mo
517.795 327.822 li
517.795 326.167 li
536.497 326.167 li
536.497 327.822 li
cp
.368627 .341176 .54902 rgb
f
622.527 363.458 mo
622.527 363.458 638.786 371.376 641.448 371.376 cv
644.111 371.376 646.254 371.035 646.254 371.035 cv
647.011 369.165 li
637.244 361.057 li
637.244 361.057 621.623 358.535 622.527 363.458 cv
cp
.0352941 .32549 .729412 rgb
f
641.34 369.467 mo
643.211 369.678 645.317 369.457 647.012 369.166 cv
637.244 361.057 li
637.244 361.057 628.114 359.583 624.219 361.088 cv
627.693 363.129 638.083 369.098 641.34 369.467 cv
cp
.243137 .52549 .827451 rgb
f
622.527 363.458 mo
622.527 363.458 638.786 371.376 641.448 371.376 cv
644.111 371.376 646.254 371.035 646.254 371.035 cv
647.011 369.165 li
637.244 361.057 li
637.244 361.057 621.623 358.535 622.527 363.458 cv
cp
.0509804 .145098 .258824 rgb
f
641.34 369.467 mo
643.211 369.678 645.317 369.457 647.012 369.166 cv
637.244 361.057 li
637.244 361.057 628.114 359.583 624.219 361.088 cv
627.693 363.129 638.083 369.098 641.34 369.467 cv
cp
.0980392 .239216 .439216 rgb
f
523.222 336.285 mo
520.846 336.872 518.758 337.665 517.106 338.719 cv
504.537 346.742 496.535 343.463 476.994 351.823 cv
458.927 359.551 466.832 375.622 474.854 383.644 cv
495.244 404.033 533.424 396.189 541.445 393.248 cv
544.936 391.968 551.792 386.659 557.415 381.528 cv
562.294 377.077 564.098 370.118 561.87 363.901 cv
560.548 360.212 558.508 356.793 555.62 353.906 cv
546.356 344.642 534.765 340.908 523.222 336.285 cv
.0352941 .32549 .729412 rgb
f
562.638 366.367 mo
563.998 371.464 562.385 376.89 558.533 380.496 cv
552.731 385.926 545.171 391.884 541.445 393.248 cv
533.016 396.335 495.093 403.883 474.855 383.646 cv
466.83 375.621 476.507 349.669 489.072 341.649 cv
490.726 340.593 520.388 336.47 523.223 336.286 cv
534.764 340.909 546.356 344.642 555.62 353.906 cv
557.748 356.034 559.419 358.455 560.68 361.058 cv
561.502 362.757 562.149 364.538 562.638 366.367 cv
f
541.445 393.248 mo
546.934 391.181 551.136 389.446 554.365 387.567 cv
561.131 383.633 564.654 375.764 563.051 368.104 cv
562.54 365.663 561.76 363.292 560.68 361.058 cv
560.68 361.058 516.229 385.505 488.556 392.631 cv
508.925 401.072 534.703 395.787 541.445 393.248 cv
cp
.0980392 .239216 .439216 rgb
f
540.162 366.276 mo
540.162 380.991 523.407 392.92 502.738 392.92 cv
482.07 392.92 465.315 380.991 465.315 366.276 cv
465.315 351.561 482.07 339.631 502.738 339.631 cv
523.407 339.631 540.162 351.561 540.162 366.276 cv
.137255 .682353 .847059 rgb
f
534.908 379.891 mo
521.627 375.335 495.203 372.66 495.203 372.66 cv
495.203 372.66 482.338 373.897 477.545 375.895 cv
474.431 377.194 471.966 378.617 470.617 379.948 cv
477.155 387.717 489.092 392.92 502.738 392.92 cv
515.211 392.92 529.016 388.135 534.908 379.891 cv
.113725 .572549 .709804 rgb
f
540.163 366.275 mo
540.163 371.25 538.24 375.905 534.908 379.891 cv
526.83 385.504 521.802 386.372 516.315 387.052 cv
512.769 387.493 499.357 386.076 488.847 383.833 cv
488.559 383.773 488.271 383.707 487.987 383.646 cv
481.498 382.211 476.286 380.462 475.514 378.657 cv
473.482 373.899 494.342 373.894 498.193 370.043 cv
502.049 366.192 504.884 345.912 509.097 343.002 cv
510.278 342.187 511.615 341.371 512.962 340.638 cv
529.007 343.72 540.163 354.093 540.163 366.275 cv
.0941176 .47451 .588235 rgb
f
489.78 341.274 mo
489.512 341.344 489.279 341.391 489.027 341.477 cv
487.793 346.802 487.026 356.016 487.026 366.276 cv
487.026 370.084 487.139 373.724 487.342 377.07 cv
488.377 377.517 489.412 377.991 490.467 378.431 cv
490.206 374.722 490.061 370.609 490.061 366.276 cv
490.061 355.358 490.981 345.819 492.351 340.671 cv
491.472 340.842 490.622 341.052 489.78 341.274 cv
f
492.438 386.928 mo
492.316 387.517 491.31 387.807 490.191 387.575 cv
489.072 387.342 488.264 386.676 488.387 386.086 cv
488.509 385.497 489.515 385.208 490.634 385.44 cv
491.753 385.671 492.561 386.338 492.438 386.928 cv
cp
f
496.85 390.214 mo
496.85 390.696 496.167 391.086 495.323 391.086 cv
494.48 391.086 493.797 390.696 493.797 390.214 cv
493.797 389.733 494.48 389.342 495.323 389.342 cv
496.167 389.342 496.85 389.733 496.85 390.214 cv
cp
f
497.504 387.801 mo
497.504 388.17 496.918 388.47 496.195 388.47 cv
495.474 388.47 494.887 388.17 494.887 387.801 cv
494.887 387.432 495.474 387.132 496.195 387.132 cv
496.918 387.132 497.504 387.432 497.504 387.801 cv
cp
f
501.834 388.135 mo
501.834 388.32 501.305 388.47 500.65 388.47 cv
499.997 388.47 499.467 388.32 499.467 388.135 cv
499.467 387.951 499.997 387.801 500.65 387.801 cv
501.305 387.801 501.834 387.951 501.834 388.135 cv
cp
f
479.514 383.286 mo
479.514 383.559 478.977 383.782 478.313 383.782 cv
477.651 383.782 477.114 383.559 477.114 383.286 cv
477.114 383.012 477.651 382.79 478.313 382.79 cv
478.977 382.79 479.514 383.012 479.514 383.286 cv
cp
f
483.875 385.09 mo
483.875 385.331 483.68 385.526 483.438 385.526 cv
483.197 385.526 483.002 385.331 483.002 385.09 cv
483.002 384.849 483.197 384.654 483.438 384.654 cv
483.68 384.654 483.875 384.849 483.875 385.09 cv
cp
f
489.545 375.163 mo
488.847 383.833 li
488.559 383.773 488.271 383.707 487.987 383.646 cv
488.672 375.093 li
489.545 375.163 li
.0862745 .443137 .54902 rgb
f
490.363 378.658 mo
489.668 378.658 li
489.882 375.2 li
489.905 374.821 489.617 374.495 489.239 374.471 cv
489.011 374.458 li
488.633 374.434 488.307 374.722 488.283 375.1 cv
487.962 380.292 li
489.56 380.39 li
489.601 379.748 li
490.363 379.748 li
490.664 379.748 490.907 379.503 490.907 379.203 cv
490.907 378.902 490.664 378.658 490.363 378.658 cv
.0745098 .388235 .478431 rgb
f
521.896 368.57 mo
521.896 358.559 522.798 349.639 524.063 344.271 cv
523.121 343.707 522.085 343.257 521.024 342.944 cv
519.576 348.112 518.657 357.711 518.657 368.57 cv
518.657 376.924 519.232 384.529 520.157 389.919 cv
521.48 389.446 522.241 389.153 523.222 388.696 cv
522.418 383.422 521.896 376.286 521.896 368.57 cv
cp
.0352941 .32549 .729412 rgb
f
gsave
474.309 377.413 mo
469.604 372.564 468.191 364.845 471.328 357.978 cv
473.809 352.546 481.262 346.689 488.544 343.895 cv
487.596 349.363 487.026 357.431 487.026 366.276 cv
487.026 368.776 487.075 371.203 487.165 373.522 cv
483.452 374.236 479.728 374.928 477.487 375.919 cv
476.329 376.404 475.262 376.906 474.309 377.413 cv
490.178 372.925 mo
490.101 370.788 490.061 368.562 490.061 366.276 cv
490.061 356.746 490.762 348.266 491.851 342.841 cv
493.437 342.445 494.975 342.227 496.409 342.227 cv
497.972 342.227 499.41 342.486 500.65 343.052 cv
508.914 346.827 501.52 359.106 497.504 367.899 cv
496.952 369.108 496.358 370.299 495.723 371.444 cv
494.21 372.017 492.264 372.489 490.178 372.925 cv
clp
468.191 342.227 mo
508.914 342.227 li
508.914 377.413 li
468.191 377.413 li
cp
.219608 .831372 .937255 rgb
f
grestore
475.446 378.474 mo
475.048 378.138 474.669 377.784 474.309 377.413 cv
475.262 376.906 476.329 376.404 477.487 375.919 cv
475.955 376.597 475.116 377.414 475.446 378.474 cv
.196078 .776471 .882353 rgb
f
483.215 381.708 mo
481.881 381.708 480.481 381.403 479.017 380.734 cv
477.7 380.133 476.507 379.369 475.446 378.474 cv
475.116 377.414 475.955 376.597 477.487 375.919 cv
479.728 374.928 483.452 374.236 487.165 373.522 cv
487.213 374.736 487.272 375.92 487.342 377.07 cv
487.608 377.185 487.874 377.301 488.14 377.419 cv
487.962 380.292 li
488.075 380.298 li
486.566 381.195 484.945 381.708 483.215 381.708 cv
490.282 378.658 mo
489.668 378.658 li
489.702 378.105 li
489.956 378.215 490.211 378.324 490.467 378.431 cv
490.344 376.679 490.246 374.837 490.178 372.925 cv
492.264 372.489 494.21 372.017 495.723 371.444 cv
494.157 374.267 492.341 376.809 490.282 378.658 cv
.180392 .72549 .831372 rgb
f
490.467 378.431 mo
490.211 378.324 489.956 378.215 489.702 378.105 cv
489.882 375.2 li
489.905 374.821 489.617 374.495 489.239 374.471 cv
489.011 374.458 li
488.996 374.457 488.982 374.456 488.968 374.456 cv
488.608 374.456 488.306 374.737 488.283 375.1 cv
488.14 377.419 li
487.874 377.301 487.608 377.185 487.342 377.07 cv
487.272 375.92 487.213 374.736 487.165 373.522 cv
487.075 371.203 487.026 368.776 487.026 366.276 cv
487.026 357.431 487.596 349.363 488.544 343.895 cv
489.657 343.468 490.765 343.113 491.851 342.841 cv
490.762 348.266 490.061 356.746 490.061 366.276 cv
490.061 368.562 490.101 370.788 490.178 372.925 cv
490.246 374.837 490.344 376.679 490.467 378.431 cv
f
488.075 380.298 mo
487.962 380.292 li
488.14 377.419 li
488.283 375.1 li
488.306 374.737 488.608 374.456 488.968 374.456 cv
488.982 374.456 488.996 374.457 489.011 374.458 cv
489.239 374.471 li
489.617 374.495 489.905 374.821 489.882 375.2 cv
489.702 378.105 li
489.668 378.658 li
490.282 378.658 li
489.575 379.292 488.839 379.844 488.075 380.298 cv
.160784 .678431 .784314 rgb
f
582.225 361.058 mo
582.225 361.058 572.315 365.392 578.299 371.376 cv
584.284 377.361 628.295 365.148 619.137 361.953 cv
603.39 356.459 582.225 361.058 582.225 361.058 cv
cp
.929412 .560784 .137255 rgb
f
634.666 366.505 mo
634.666 367.589 633.757 368.469 632.634 368.469 cv
631.512 368.469 630.603 367.589 630.603 366.505 cv
630.603 365.42 631.512 364.541 632.634 364.541 cv
633.757 364.541 634.666 365.42 634.666 366.505 cv
cp
.505882 .141176 .0745098 rgb
f
638.029 375.268 mo
638.571 376.542 638.325 377.868 637.479 378.227 cv
636.634 378.587 635.509 377.845 634.967 376.571 cv
634.424 375.295 632.732 367.204 632.732 367.204 cv
632.732 367.204 637.487 373.993 638.029 375.268 cv
cp
f
638.029 375.268 mo
638.571 376.542 638.325 377.868 637.479 378.227 cv
636.634 378.587 635.509 377.845 634.967 376.571 cv
634.424 375.295 632.732 367.204 632.732 367.204 cv
632.732 367.204 637.487 373.993 638.029 375.268 cv
cp
.584314 .760784 .772549 rgb
f
626.57 357.275 mo
626.028 356 626.274 354.674 627.121 354.315 cv
627.966 353.956 629.092 354.698 629.634 355.972 cv
630.176 357.248 631.867 365.339 631.867 365.339 cv
631.867 365.339 627.113 358.549 626.57 357.275 cv
cp
f
641.787 361.23 mo
643.104 360.796 644.403 361.152 644.691 362.025 cv
644.979 362.898 644.146 363.958 642.83 364.391 cv
641.514 364.825 633.31 365.834 633.31 365.834 cv
633.31 365.834 640.472 361.664 641.787 361.23 cv
cp
f
622.901 371.146 mo
621.585 371.58 620.285 371.224 619.998 370.351 cv
619.71 369.478 620.543 368.419 621.859 367.986 cv
623.175 367.551 631.379 366.542 631.379 366.542 cv
631.379 366.542 624.217 370.712 622.901 371.146 cv
cp
f
632.619 364.542 mo
631.504 364.549 630.603 365.424 630.603 366.505 cv
630.603 367.432 631.269 368.204 632.162 368.411 cv
633.277 368.403 634.18 367.528 634.18 366.448 cv
634.18 365.521 633.513 364.749 632.619 364.542 cv
cp
.807843 .141176 .0352941 rgb
f
633.165 366.505 mo
633.165 367.119 632.65 367.616 632.016 367.616 cv
631.381 367.616 630.866 367.119 630.866 366.505 cv
630.866 365.891 631.381 365.394 632.016 365.394 cv
632.65 365.394 633.165 365.891 633.165 366.505 cv
cp
.807843 .337255 .219608 rgb
f
520.715 326.009 mo
520.715 326.009 520.492 325.956 520.072 325.853 cv
513.249 324.194 464.125 319.94 469.65 315.125 cv
475.516 310.015 524.944 324.415 524.944 324.415 cv
520.715 326.009 li
cp
.521569 .686275 .686275 rgb
f
526.286 325.022 mo
526.286 325.022 443.866 332.997 451.236 337.176 cv
451.803 337.499 452.686 337.716 453.83 337.843 cv
468.473 339.468 526.396 326.273 526.396 326.273 cv
526.286 325.022 li
cp
f
601.493 339.304 mo
588.32 332.708 529.412 325.022 529.412 325.022 cv
526.396 326.273 li
526.396 326.273 594 345.872 600.597 341.749 cv
601.469 341.204 602.523 339.82 601.493 339.304 cv
cp
f
534.523 326.468 mo
534.312 323.619 531.134 321.354 527.233 321.354 cv
523.333 321.354 520.155 323.619 519.943 326.468 cv
534.523 326.468 li
cp
.368627 .341176 .54902 rgb
f
594.673 87.4043 mo
594.549 91.3428 597.641 94.6362 601.578 94.7612 cv
605.517 94.8857 608.81 91.7944 608.935 87.856 cv
609.06 83.918 605.969 80.6245 602.03 80.4995 cv
598.092 80.375 594.798 83.4663 594.673 87.4043 cv
cp
.709804 .145098 .133333 rgb
f
595.604 87.4341 mo
595.495 90.8584 598.184 93.7227 601.607 93.8311 cv
605.032 93.9395 607.896 91.2515 608.005 87.8267 cv
608.113 84.4023 605.425 81.5381 602 81.4297 cv
598.576 81.3213 595.712 84.0093 595.604 87.4341 cv
cp
.184314 .223529 .341176 rgb
f
601.612 93.6763 mo
598.279 93.5703 595.652 90.7725 595.759 87.439 cv
595.811 85.8242 596.486 84.3257 597.664 83.2202 cv
598.843 82.1143 600.381 81.5366 601.996 81.5845 cv
603.61 81.6362 605.108 82.313 606.215 83.4912 cv
607.32 84.6689 607.901 86.207 607.85 87.8218 cv
607.744 91.1558 604.939 93.7788 601.612 93.6763 cv
cp
602.006 81.2749 mo
600.308 81.2173 598.69 81.8315 597.452 82.9937 cv
596.214 84.1563 595.503 85.7314 595.448 87.4292 cv
595.338 90.9336 598.098 93.875 601.603 93.9858 cv
601.807 93.9893 li
605.221 93.9893 608.051 91.2681 608.16 87.8315 cv
608.271 84.3271 605.51 81.3857 602.006 81.2749 cv
cp
.807843 .141176 .0352941 rgb
f
597.771 92.7993 mo
605.902 82.6606 li
605.177 82.0781 li
597.045 92.2168 li
597.771 92.7993 li
cp
.709804 .145098 .133333 rgb
f
606.798 92.0781 mo
607.413 91.3804 li
597.5 82.6357 li
596.885 83.3335 li
606.798 92.0781 li
cp
f
595.283 89.5317 mo
608.56 86.7969 li
608.372 85.8857 li
595.096 88.6201 li
595.283 89.5317 li
cp
f
602.11 94.145 mo
603.03 94.145 li
601.551 80.7803 li
600.626 80.8833 li
602.11 94.145 li
cp
f
599.944 87.5713 mo
599.911 88.5986 600.718 89.458 601.745 89.4907 cv
602.772 89.5229 603.632 88.7168 603.664 87.6895 cv
603.697 86.6616 602.891 85.8027 601.863 85.77 cv
600.836 85.7378 599.977 86.5439 599.944 87.5713 cv
cp
.807843 .141176 .0352941 rgb
f
600.736 87.5967 mo
600.718 88.186 601.181 88.6792 601.771 88.6978 cv
602.359 88.7168 602.854 88.2539 602.872 87.6641 cv
602.891 87.0747 602.428 86.5815 601.838 86.563 cv
601.248 86.5439 600.755 87.0068 600.736 87.5967 cv
cp
1 .176471 .0431373 rgb
f
609.651 80.5547 mo
609.526 84.4927 612.617 87.7861 616.556 87.9111 cv
620.494 88.0356 623.788 84.9443 623.912 81.0063 cv
624.037 77.0679 620.946 73.7744 617.008 73.6494 cv
613.069 73.5249 609.775 76.6162 609.651 80.5547 cv
cp
.709804 .145098 .133333 rgb
f
610.581 80.584 mo
610.473 84.0083 613.161 86.8726 616.586 86.981 cv
620.01 87.0894 622.874 84.4014 622.982 80.9771 cv
623.091 77.5522 620.402 74.688 616.979 74.5796 cv
613.554 74.4712 610.689 77.1592 610.581 80.584 cv
cp
.184314 .223529 .341176 rgb
f
616.59 86.8262 mo
613.257 86.7202 610.631 83.9224 610.736 80.5884 cv
610.787 78.9741 611.464 77.4756 612.643 76.3701 cv
613.82 75.2646 615.359 74.6865 616.973 74.7349 cv
618.588 74.7861 620.087 75.4629 621.191 76.6411 cv
622.298 77.8188 622.879 79.3569 622.827 80.9717 cv
622.722 84.3057 619.918 86.9287 616.59 86.8262 cv
cp
616.982 74.4248 mo
615.285 74.3672 613.668 74.9814 612.43 76.144 cv
611.191 77.3062 610.48 78.8813 610.426 80.5791 cv
610.315 84.0835 613.076 87.0249 616.58 87.1357 cv
616.784 87.1392 li
620.198 87.1392 623.029 84.418 623.138 80.9814 cv
623.249 77.4771 620.488 74.5356 616.982 74.4248 cv
cp
.807843 .141176 .0352941 rgb
f
612.749 85.9497 mo
620.881 75.8105 li
620.154 75.228 li
612.023 85.3672 li
612.749 85.9497 li
cp
.709804 .145098 .133333 rgb
f
621.775 85.228 mo
622.391 84.5303 li
612.478 75.7856 li
611.862 76.4834 li
621.775 85.228 li
cp
f
610.261 82.6816 mo
623.537 79.9468 li
623.35 79.0356 li
610.073 81.77 li
610.261 82.6816 li
cp
f
617.089 87.3442 mo
618.009 87.3442 li
616.528 73.9307 li
615.604 74.0332 li
617.089 87.3442 li
cp
f
614.922 80.7212 mo
614.889 81.749 615.695 82.6079 616.723 82.6406 cv
617.75 82.6733 618.609 81.8667 618.642 80.8394 cv
618.675 79.812 617.868 78.9526 616.841 78.9199 cv
615.813 78.8877 614.954 79.6938 614.922 80.7212 cv
cp
.807843 .141176 .0352941 rgb
f
615.714 80.7466 mo
615.695 81.3359 616.158 81.8296 616.748 81.8477 cv
617.338 81.8667 617.831 81.4038 617.85 80.814 cv
617.868 80.2246 617.405 79.7314 616.815 79.7129 cv
616.227 79.6938 615.732 80.1567 615.714 80.7466 cv
cp
1 .176471 .0431373 rgb
f
485.513 114.61 mo
485.386 118.609 488.526 121.955 492.525 122.081 cv
496.524 122.208 499.869 119.068 499.996 115.069 cv
500.123 111.07 496.983 107.725 492.983 107.598 cv
488.984 107.471 485.64 110.611 485.513 114.61 cv
cp
.709804 .145098 .133333 rgb
f
486.458 114.64 mo
486.348 118.118 489.077 121.026 492.556 121.136 cv
496.033 121.247 498.941 118.517 499.052 115.039 cv
499.162 111.561 496.432 108.653 492.954 108.542 cv
489.477 108.433 486.567 111.163 486.458 114.64 cv
cp
.184314 .223529 .341176 rgb
f
492.56 120.979 mo
489.175 120.872 486.508 118.03 486.615 114.645 cv
486.667 113.005 487.354 111.483 488.551 110.361 cv
489.747 109.238 491.31 108.651 492.949 108.7 cv
494.589 108.752 496.11 109.439 497.233 110.636 cv
498.356 111.832 498.946 113.394 498.895 115.034 cv
498.787 118.419 495.938 121.083 492.56 120.979 cv
cp
492.959 108.385 mo
491.234 108.327 489.593 108.951 488.335 110.131 cv
487.077 111.312 486.354 112.911 486.3 114.635 cv
486.188 118.194 488.991 121.181 492.55 121.294 cv
492.757 121.297 li
496.225 121.297 499.099 118.534 499.209 115.044 cv
499.322 111.485 496.518 108.498 492.959 108.385 cv
cp
.807843 .141176 .0352941 rgb
f
488.659 120.089 mo
496.917 109.792 li
496.18 109.201 li
487.922 119.498 li
488.659 120.089 li
cp
.709804 .145098 .133333 rgb
f
497.825 119.356 mo
498.451 118.648 li
488.384 109.767 li
487.759 110.476 li
497.825 119.356 li
cp
f
486.133 116.771 mo
499.614 113.993 li
499.424 113.067 li
485.942 115.845 li
486.133 116.771 li
cp
f
493.075 121.711 mo
494.029 121.547 li
492.497 107.883 li
491.559 107.988 li
493.075 121.711 li
cp
f
490.865 114.78 mo
490.832 115.823 491.651 116.695 492.694 116.729 cv
493.738 116.762 494.61 115.943 494.644 114.899 cv
494.677 113.856 493.857 112.983 492.814 112.951 cv
491.771 112.917 490.898 113.736 490.865 114.78 cv
cp
.807843 .141176 .0352941 rgb
f
491.67 114.805 mo
491.651 115.404 492.121 115.905 492.72 115.924 cv
493.319 115.943 493.82 115.473 493.839 114.874 cv
493.857 114.275 493.388 113.774 492.789 113.755 cv
492.19 113.736 491.689 114.207 491.67 114.805 cv
cp
1 .176471 .0431373 rgb
f
505.864 111.921 mo
505.739 115.859 508.83 119.152 512.769 119.277 cv
516.707 119.402 520.001 116.311 520.125 112.373 cv
520.25 108.434 517.158 105.141 513.221 105.016 cv
509.282 104.891 505.988 107.982 505.864 111.921 cv
cp
.709804 .145098 .133333 rgb
f
506.794 111.95 mo
506.686 115.375 509.373 118.239 512.799 118.347 cv
516.223 118.456 519.087 115.768 519.195 112.343 cv
519.304 108.918 516.615 106.054 513.191 105.946 cv
509.767 105.837 506.902 108.525 506.794 111.95 cv
cp
.184314 .223529 .341176 rgb
f
512.803 118.192 mo
509.47 118.086 506.843 115.289 506.949 111.955 cv
507 110.34 507.677 108.842 508.855 107.736 cv
510.033 106.63 511.571 106.053 513.186 106.101 cv
514.801 106.152 516.299 106.829 517.404 108.007 cv
518.511 109.185 519.092 110.723 519.04 112.338 cv
518.935 115.672 516.13 118.295 512.803 118.192 cv
cp
513.195 105.791 mo
511.498 105.733 509.881 106.348 508.643 107.51 cv
507.404 108.672 506.692 110.248 506.639 111.945 cv
506.528 115.45 509.289 118.391 512.793 118.502 cv
512.997 118.505 li
516.411 118.505 519.241 115.784 519.351 112.348 cv
519.461 108.843 516.7 105.902 513.195 105.791 cv
cp
.807843 .141176 .0352941 rgb
f
508.962 117.316 mo
517.094 107.177 li
516.367 106.594 li
508.236 116.733 li
508.962 117.316 li
cp
.709804 .145098 .133333 rgb
f
517.988 116.594 mo
518.604 115.896 li
508.69 107.152 li
508.075 107.85 li
517.988 116.594 li
cp
f
506.474 114.048 mo
519.75 111.313 li
519.563 110.402 li
506.286 113.137 li
506.474 114.048 li
cp
f
513.301 118.726 mo
514.221 118.505 li
512.741 105.297 li
511.816 105.399 li
513.301 118.726 li
cp
f
511.135 112.088 mo
511.102 113.115 511.908 113.974 512.936 114.007 cv
513.963 114.039 514.822 113.233 514.854 112.206 cv
514.887 111.178 514.081 110.319 513.054 110.286 cv
512.026 110.254 511.167 111.06 511.135 112.088 cv
cp
.807843 .141176 .0352941 rgb
f
511.927 112.113 mo
511.908 112.702 512.371 113.196 512.961 113.214 cv
513.551 113.233 514.043 112.77 514.063 112.18 cv
514.081 111.591 513.618 111.098 513.028 111.079 cv
512.438 111.06 511.945 111.523 511.927 112.113 cv
cp
1 .176471 .0431373 rgb
f
573.703 72.6089 mo
635.103 57.835 li
635.103 57.835 635.596 58.6519 635.895 59.2124 cv
640.571 67.9546 569.061 95.2749 569.061 95.2749 cv
573.703 72.6089 li
cp
.682353 .686275 .619608 rgb
f
573.703 72.6089 mo
573.703 72.6089 628.775 51.0078 634.952 57.6494 cv
641.129 64.291 568.284 93.9878 568.284 93.9878 cv
573.703 72.6089 li
cp
.796078 .8 .745098 rgb
f
528.562 85.043 mo
468.355 104.107 li
468.355 104.107 468.355 105.061 468.389 105.696 cv
468.9 115.597 544.244 102.053 544.244 102.053 cv
528.562 85.043 li
.682353 .686275 .619608 rgb
f
528.562 85.043 mo
528.562 85.043 470.247 94.9932 468.389 103.871 cv
466.53 112.748 544.244 100.549 544.244 100.549 cv
528.562 85.043 li
.796078 .8 .745098 rgb
f
547.737 48.6831 mo
556.336 65.8823 li
543.106 67.6099 li
544.813 49.2319 li
544.958 47.6826 547.042 47.2915 547.737 48.6831 cv
cp
f
516.121 70.8022 mo
516.121 70.8022 516.547 72.5737 520.196 73.5586 cv
523.845 74.5439 542.18 74.7075 542.18 74.7075 cv
542.18 74.7075 561.947 70.5513 562.328 70.3838 cv
565.336 69.0605 578.866 63.0581 581.505 60.9854 cv
584.478 58.6504 584.176 56.8545 584.176 56.8545 cv
560.814 61.71 li
537.26 66.5776 li
516.121 70.8022 li
cp
.709804 .145098 .133333 rgb
f
547.352 63.6348 mo
553.271 62.0199 559.435 61.2661 565.14 63.523 cv
568.824 64.9804 572.63 67.4844 575.379 71.7667 cv
582.709 83.186 589.517 81.9921 590.019 89.2442 cv
590.52 96.4957 589.866 114.506 569.588 122.881 cv
549.312 131.255 531.026 118.502 526.361 111.235 cv
521.697 103.968 520.549 99.3892 525.471 91.8326 cv
530.393 84.2753 524.873 88.1309 532.871 72.9122 cv
534.869 69.1094 539.887 65.6719 547.352 63.6348 cv
.913725 .917647 .854902 rgb
f
569.588 122.88 mo
589.865 114.506 590.52 96.4957 590.019 89.2442 cv
589.786 85.8912 588.205 84.3433 585.849 82.5199 cv
581.705 87.3604 li
569.27 101.888 549.122 107.167 531.16 100.605 cv
522.731 97.5259 li
521.453 102.12 522.984 105.974 526.361 111.235 cv
531.026 118.502 549.312 131.255 569.588 122.88 cv
.352941 .415686 .611765 rgb
f
531.16 100.605 mo
522.731 97.5259 li
522.283 99.1372 522.179 100.658 522.381 102.18 cv
531.16 105.388 li
549.122 111.95 569.271 106.67 581.705 92.1431 cv
588.167 84.5947 li
587.527 83.8672 586.744 83.2129 585.849 82.52 cv
581.705 87.3604 li
569.271 101.888 549.122 107.167 531.16 100.605 cv
cp
.709804 .145098 .133333 rgb
f
555.936 125.63 mo
555.933 125.63 555.931 125.63 555.929 125.63 cv
555.931 125.63 555.933 125.63 555.936 125.63 cv
555.936 125.63 li
555.936 125.63 mo
560.228 125.63 564.767 124.845 569.413 122.952 cv
564.766 124.845 560.229 125.631 555.936 125.63 cv
569.498 122.918 mo
569.528 122.906 569.558 122.893 569.588 122.881 cv
569.608 122.873 569.626 122.865 569.646 122.857 cv
569.627 122.865 569.607 122.873 569.588 122.881 cv
569.558 122.893 569.528 122.906 569.498 122.918 cv
569.667 122.848 mo
569.68 122.843 569.692 122.838 569.704 122.833 cv
569.691 122.838 569.68 122.843 569.667 122.848 cv
569.733 122.82 mo
569.743 122.816 569.752 122.813 569.762 122.809 cv
569.752 122.813 569.743 122.816 569.733 122.82 cv
569.796 122.794 mo
569.804 122.791 569.81 122.788 569.819 122.785 cv
569.811 122.788 569.804 122.791 569.796 122.794 cv
569.854 122.77 mo
569.862 122.767 569.87 122.763 569.877 122.76 cv
569.87 122.763 569.862 122.767 569.854 122.77 cv
569.913 122.745 mo
569.92 122.742 569.926 122.739 569.934 122.736 cv
569.927 122.739 569.92 122.742 569.913 122.745 cv
569.972 122.72 mo
569.978 122.718 569.985 122.714 569.991 122.712 cv
569.985 122.714 569.978 122.718 569.972 122.72 cv
570.029 122.696 mo
570.035 122.693 570.042 122.69 570.048 122.688 cv
570.042 122.69 570.035 122.693 570.029 122.696 cv
570.088 122.671 mo
570.093 122.668 570.1 122.666 570.105 122.664 cv
570.1 122.666 570.093 122.669 570.088 122.671 cv
570.143 122.647 mo
570.15 122.644 570.156 122.641 570.162 122.639 cv
570.155 122.642 570.15 122.644 570.143 122.647 cv
570.201 122.622 mo
570.207 122.619 570.213 122.617 570.219 122.614 cv
570.213 122.617 570.207 122.62 570.201 122.622 cv
570.257 122.598 mo
570.263 122.595 570.269 122.593 570.276 122.59 cv
570.27 122.592 570.263 122.595 570.257 122.598 cv
570.317 122.572 mo
570.32 122.57 570.327 122.568 570.33 122.566 cv
570.326 122.568 570.322 122.57 570.317 122.572 cv
570.372 122.548 mo
570.377 122.546 570.383 122.543 570.387 122.541 cv
570.383 122.543 570.377 122.546 570.372 122.548 cv
570.43 122.523 mo
570.434 122.521 570.439 122.519 570.443 122.517 cv
570.438 122.519 570.435 122.52 570.43 122.523 cv
570.486 122.498 mo
570.49 122.496 570.494 122.494 570.499 122.492 cv
570.494 122.494 570.49 122.496 570.486 122.498 cv
570.545 122.472 mo
570.547 122.471 570.549 122.47 570.551 122.469 cv
570.549 122.47 570.547 122.471 570.545 122.472 cv
570.6 122.448 mo
570.603 122.447 570.605 122.446 570.607 122.444 cv
570.605 122.445 570.603 122.447 570.6 122.448 cv
570.657 122.422 mo
570.658 122.422 570.66 122.421 570.661 122.421 cv
570.66 122.421 570.658 122.422 570.657 122.422 cv
570.712 122.398 mo
570.714 122.397 570.715 122.396 570.718 122.395 cv
570.715 122.396 570.714 122.397 570.712 122.398 cv
570.824 122.348 mo
570.825 122.347 li
570.824 122.348 li
575.739 119.701 mo
575.74 119.7 575.741 119.7 575.742 119.699 cv
575.741 119.7 575.74 119.7 575.739 119.701 cv
575.785 119.671 mo
575.787 119.67 li
575.786 119.671 575.786 119.671 575.785 119.671 cv
575.827 119.644 mo
575.829 119.643 575.832 119.641 575.834 119.64 cv
575.831 119.642 575.83 119.642 575.827 119.644 cv
575.871 119.616 mo
575.874 119.614 575.877 119.612 575.88 119.61 cv
575.877 119.612 575.874 119.614 575.871 119.616 cv
575.916 119.587 mo
575.919 119.585 575.921 119.583 575.925 119.581 cv
575.922 119.583 575.918 119.585 575.916 119.587 cv
575.962 119.557 mo
575.964 119.555 575.968 119.553 575.971 119.551 cv
575.968 119.553 575.964 119.555 575.962 119.557 cv
576.005 119.529 mo
576.009 119.527 576.013 119.523 576.017 119.521 cv
576.013 119.524 576.009 119.526 576.005 119.529 cv
576.05 119.499 mo
576.054 119.497 576.059 119.494 576.063 119.491 cv
576.059 119.494 576.054 119.497 576.05 119.499 cv
576.094 119.47 mo
576.099 119.467 576.104 119.464 576.109 119.461 cv
576.104 119.464 576.099 119.467 576.094 119.47 cv
576.141 119.44 mo
576.144 119.437 576.149 119.434 576.153 119.432 cv
576.149 119.434 576.144 119.437 576.141 119.44 cv
576.185 119.411 mo
576.19 119.408 576.194 119.405 576.198 119.402 cv
576.194 119.405 576.189 119.408 576.185 119.411 cv
576.231 119.38 mo
576.234 119.378 576.239 119.375 576.243 119.372 cv
576.238 119.375 576.235 119.377 576.231 119.38 cv
576.275 119.351 mo
576.28 119.348 576.282 119.346 576.287 119.343 cv
576.283 119.346 576.28 119.348 576.275 119.351 cv
576.321 119.32 mo
576.325 119.318 576.327 119.316 576.331 119.313 cv
576.328 119.315 576.324 119.318 576.321 119.32 cv
576.364 119.291 mo
576.369 119.288 576.373 119.285 576.378 119.282 cv
576.374 119.285 576.369 119.288 576.364 119.291 cv
576.409 119.261 mo
576.414 119.258 576.419 119.254 576.423 119.251 cv
576.419 119.254 576.413 119.258 576.409 119.261 cv
576.452 119.232 mo
576.458 119.228 576.463 119.225 576.468 119.221 cv
576.464 119.224 576.457 119.229 576.452 119.232 cv
576.498 119.201 mo
576.501 119.199 576.506 119.195 576.509 119.193 cv
576.505 119.196 576.502 119.198 576.498 119.201 cv
576.542 119.171 mo
576.546 119.168 576.55 119.165 576.554 119.163 cv
576.549 119.166 576.547 119.168 576.542 119.171 cv
576.587 119.14 mo
576.589 119.139 576.591 119.138 576.593 119.137 cv
576.591 119.138 576.589 119.139 576.587 119.14 cv
576.631 119.111 mo
576.633 119.109 576.637 119.106 576.64 119.104 cv
576.637 119.106 576.633 119.109 576.631 119.111 cv
576.783 119.005 mo
576.792 119 576.798 118.995 576.806 118.989 cv
576.799 118.994 576.79 119 576.783 119.005 cv
576.825 118.976 mo
576.834 118.97 576.841 118.965 576.849 118.959 cv
576.841 118.965 576.833 118.971 576.825 118.976 cv
576.872 118.944 mo
576.879 118.939 576.886 118.934 576.894 118.928 cv
576.887 118.933 576.879 118.939 576.872 118.944 cv
576.916 118.913 mo
576.924 118.908 576.93 118.903 576.937 118.898 cv
576.93 118.903 576.923 118.908 576.916 118.913 cv
576.959 118.883 mo
576.967 118.877 576.973 118.873 576.982 118.867 cv
576.974 118.872 576.967 118.877 576.959 118.883 cv
577.002 118.852 mo
577.01 118.847 577.017 118.842 577.024 118.837 cv
577.016 118.842 577.01 118.847 577.002 118.852 cv
577.047 118.821 mo
577.054 118.816 577.061 118.811 577.069 118.805 cv
577.062 118.81 577.054 118.816 577.047 118.821 cv
577.088 118.792 mo
577.096 118.786 577.105 118.78 577.113 118.774 cv
577.104 118.78 577.097 118.785 577.088 118.792 cv
577.129 118.762 mo
577.139 118.756 577.148 118.749 577.158 118.742 cv
577.148 118.749 577.139 118.755 577.129 118.762 cv
577.172 118.732 mo
577.181 118.725 577.191 118.718 577.2 118.712 cv
577.19 118.719 577.182 118.725 577.172 118.732 cv
577.216 118.7 mo
577.225 118.694 577.236 118.686 577.245 118.68 cv
577.236 118.686 577.225 118.694 577.216 118.7 cv
577.258 118.67 mo
577.268 118.663 577.278 118.656 577.288 118.649 cv
577.278 118.656 577.268 118.663 577.258 118.67 cv
577.301 118.639 mo
577.311 118.632 577.322 118.624 577.332 118.617 cv
577.322 118.624 577.311 118.632 577.301 118.639 cv
577.344 118.608 mo
577.354 118.601 577.364 118.594 577.374 118.586 cv
577.364 118.594 577.355 118.601 577.344 118.608 cv
577.388 118.576 mo
577.399 118.569 577.408 118.562 577.419 118.554 cv
577.409 118.561 577.398 118.569 577.388 118.576 cv
577.43 118.546 mo
577.44 118.538 577.452 118.53 577.463 118.522 cv
577.452 118.529 577.44 118.539 577.43 118.546 cv
577.471 118.516 mo
577.484 118.506 577.496 118.498 577.508 118.489 cv
577.496 118.498 577.484 118.507 577.471 118.516 cv
577.513 118.485 mo
577.525 118.476 577.538 118.467 577.549 118.459 cv
577.538 118.467 577.525 118.477 577.513 118.485 cv
577.558 118.452 mo
577.569 118.444 577.581 118.435 577.593 118.426 cv
577.582 118.435 577.569 118.444 577.558 118.452 cv
577.6 118.421 mo
577.611 118.413 577.624 118.403 577.636 118.395 cv
577.624 118.403 577.612 118.412 577.6 118.421 cv
577.642 118.39 mo
577.654 118.381 577.668 118.371 577.68 118.362 cv
577.667 118.372 577.655 118.38 577.642 118.39 cv
577.685 118.358 mo
577.697 118.35 577.71 118.34 577.722 118.331 cv
577.71 118.34 577.697 118.349 577.685 118.358 cv
577.728 118.326 mo
582.004 115.137 584.842 111.395 586.71 107.611 cv
584.842 111.394 582.004 115.137 577.728 118.326 cv
526.339 111.2 mo
526.339 111.2 526.338 111.199 526.338 111.199 cv
526.338 111.2 li
526.339 111.2 526.339 111.2 526.339 111.2 cv
586.71 107.61 mo
586.735 107.56 586.758 107.511 586.783 107.462 cv
586.759 107.511 586.734 107.56 586.71 107.61 cv
586.784 107.458 mo
586.79 107.446 586.796 107.435 586.801 107.423 cv
586.796 107.435 586.79 107.446 586.784 107.458 cv
586.803 107.42 mo
586.808 107.41 586.813 107.399 586.818 107.389 cv
586.813 107.4 586.808 107.41 586.803 107.42 cv
586.821 107.382 mo
586.827 107.37 586.832 107.36 586.838 107.348 cv
586.832 107.36 586.827 107.371 586.821 107.382 cv
586.839 107.345 mo
586.843 107.337 586.846 107.33 586.85 107.322 cv
586.846 107.33 586.843 107.337 586.839 107.345 cv
586.872 107.276 mo
586.873 107.273 586.874 107.273 586.875 107.27 cv
586.874 107.272 586.873 107.274 586.872 107.276 cv
586.907 107.202 mo
586.908 107.2 586.909 107.199 586.91 107.197 cv
586.909 107.198 586.908 107.201 586.907 107.202 cv
.827451 .831372 .772549 rgb
f
555.936 125.63 mo
555.933 125.63 555.931 125.63 555.929 125.63 cv
550.764 125.629 545.956 124.491 541.75 122.774 cv
545.958 124.492 550.768 125.63 555.935 125.63 cv
560.282 125.63 564.88 124.825 569.588 122.88 cv
582.281 117.638 587.285 108.62 589.13 100.829 cv
588.641 102.896 587.929 105.05 586.91 107.197 cv
586.909 107.199 586.908 107.2 586.907 107.202 cv
586.896 107.225 586.886 107.247 586.875 107.27 cv
586.874 107.273 586.873 107.273 586.872 107.276 cv
586.865 107.292 586.858 107.306 586.85 107.322 cv
586.846 107.33 586.843 107.337 586.839 107.345 cv
586.839 107.346 586.838 107.348 586.838 107.348 cv
586.832 107.36 586.827 107.37 586.821 107.382 cv
586.82 107.384 586.819 107.387 586.818 107.389 cv
586.813 107.399 586.808 107.41 586.803 107.42 cv
586.802 107.421 586.802 107.423 586.801 107.423 cv
586.796 107.435 586.79 107.446 586.784 107.458 cv
586.784 107.459 586.783 107.46 586.783 107.462 cv
586.758 107.511 586.735 107.56 586.71 107.61 cv
586.71 107.611 li
584.842 111.395 582.004 115.137 577.728 118.326 cv
577.726 118.328 577.723 118.33 577.722 118.331 cv
577.71 118.34 577.697 118.35 577.685 118.358 cv
577.683 118.359 577.681 118.361 577.68 118.362 cv
577.668 118.371 577.654 118.381 577.642 118.39 cv
577.641 118.391 577.638 118.393 577.636 118.395 cv
577.624 118.403 577.611 118.413 577.6 118.421 cv
577.597 118.423 577.596 118.424 577.593 118.426 cv
577.581 118.435 577.569 118.444 577.558 118.452 cv
577.554 118.455 577.553 118.456 577.549 118.459 cv
577.538 118.467 577.525 118.476 577.513 118.485 cv
577.512 118.486 577.51 118.487 577.508 118.489 cv
577.496 118.498 577.484 118.506 577.471 118.516 cv
577.468 118.518 577.466 118.519 577.463 118.522 cv
577.452 118.53 577.44 118.538 577.43 118.546 cv
577.425 118.549 577.423 118.551 577.419 118.554 cv
577.408 118.562 577.399 118.569 577.388 118.576 cv
577.384 118.58 577.378 118.583 577.374 118.586 cv
577.364 118.594 577.354 118.601 577.344 118.608 cv
577.34 118.611 577.336 118.614 577.332 118.617 cv
577.322 118.624 577.311 118.632 577.301 118.639 cv
577.297 118.642 577.293 118.645 577.288 118.649 cv
577.278 118.656 577.268 118.663 577.258 118.67 cv
577.253 118.674 577.249 118.677 577.245 118.68 cv
577.236 118.686 577.225 118.694 577.216 118.7 cv
577.211 118.704 577.205 118.708 577.2 118.712 cv
577.191 118.718 577.181 118.725 577.172 118.732 cv
577.168 118.735 577.162 118.739 577.158 118.742 cv
577.148 118.749 577.139 118.756 577.129 118.762 cv
577.124 118.766 577.118 118.77 577.113 118.774 cv
577.105 118.78 577.096 118.786 577.088 118.792 cv
577.082 118.796 577.075 118.801 577.069 118.805 cv
577.061 118.811 577.054 118.816 577.047 118.821 cv
577.04 118.826 577.031 118.832 577.024 118.837 cv
577.017 118.842 577.01 118.847 577.002 118.852 cv
576.996 118.857 576.988 118.862 576.982 118.867 cv
576.973 118.873 576.967 118.877 576.959 118.883 cv
576.951 118.888 576.944 118.893 576.937 118.898 cv
576.93 118.903 576.924 118.908 576.916 118.913 cv
576.909 118.918 576.901 118.923 576.894 118.928 cv
576.886 118.934 576.879 118.939 576.872 118.944 cv
576.864 118.949 576.858 118.954 576.849 118.959 cv
576.841 118.965 576.834 118.97 576.825 118.976 cv
576.819 118.981 576.813 118.985 576.806 118.989 cv
576.798 118.995 576.792 119 576.783 119.005 cv
576.735 119.039 576.688 119.071 576.64 119.104 cv
576.637 119.106 576.633 119.109 576.631 119.111 cv
576.618 119.119 576.605 119.128 576.593 119.137 cv
576.591 119.138 576.589 119.139 576.587 119.14 cv
576.576 119.148 576.565 119.155 576.554 119.163 cv
576.55 119.165 576.546 119.168 576.542 119.171 cv
576.531 119.178 576.52 119.186 576.509 119.193 cv
576.506 119.195 576.501 119.199 576.498 119.201 cv
576.488 119.207 576.479 119.214 576.468 119.221 cv
576.463 119.225 576.458 119.228 576.452 119.232 cv
576.442 119.239 576.434 119.244 576.423 119.251 cv
576.419 119.254 576.414 119.258 576.409 119.261 cv
576.399 119.268 576.388 119.275 576.378 119.282 cv
576.373 119.285 576.369 119.288 576.364 119.291 cv
576.352 119.299 576.343 119.305 576.331 119.313 cv
576.327 119.316 576.325 119.318 576.321 119.32 cv
576.31 119.327 576.298 119.335 576.287 119.343 cv
576.282 119.346 576.28 119.348 576.275 119.351 cv
576.265 119.358 576.253 119.366 576.243 119.372 cv
576.239 119.375 576.234 119.378 576.231 119.38 cv
576.22 119.387 576.209 119.395 576.198 119.402 cv
576.194 119.405 576.19 119.408 576.185 119.411 cv
576.174 119.418 576.164 119.424 576.153 119.432 cv
576.149 119.434 576.144 119.437 576.141 119.44 cv
576.129 119.447 576.12 119.454 576.109 119.461 cv
576.104 119.464 576.099 119.467 576.094 119.47 cv
576.084 119.477 576.073 119.485 576.063 119.491 cv
576.059 119.494 576.054 119.497 576.05 119.499 cv
576.039 119.507 576.029 119.514 576.017 119.521 cv
576.013 119.523 576.009 119.527 576.005 119.529 cv
575.994 119.536 575.982 119.544 575.971 119.551 cv
575.968 119.553 575.964 119.555 575.962 119.557 cv
575.949 119.565 575.938 119.573 575.925 119.581 cv
575.921 119.583 575.919 119.585 575.916 119.587 cv
575.903 119.595 575.892 119.602 575.88 119.61 cv
575.877 119.612 575.874 119.614 575.871 119.616 cv
575.859 119.624 575.846 119.632 575.834 119.64 cv
575.832 119.641 575.829 119.643 575.827 119.644 cv
575.814 119.653 575.8 119.662 575.787 119.67 cv
575.785 119.671 li
575.771 119.681 575.756 119.69 575.742 119.699 cv
575.741 119.7 575.74 119.7 575.739 119.701 cv
574.255 120.651 572.622 121.538 570.825 122.347 cv
570.824 122.348 li
570.788 122.364 570.753 122.379 570.718 122.395 cv
570.715 122.396 570.714 122.397 570.712 122.398 cv
570.696 122.405 570.677 122.413 570.661 122.421 cv
570.66 122.421 570.658 122.422 570.657 122.422 cv
570.64 122.43 570.625 122.437 570.607 122.444 cv
570.605 122.446 570.603 122.447 570.6 122.448 cv
570.584 122.455 570.567 122.462 570.551 122.469 cv
570.549 122.47 570.547 122.471 570.545 122.472 cv
570.53 122.479 570.514 122.486 570.499 122.492 cv
570.494 122.494 570.49 122.496 570.486 122.498 cv
570.472 122.504 570.456 122.511 570.443 122.517 cv
570.439 122.519 570.434 122.521 570.43 122.523 cv
570.416 122.529 570.401 122.535 570.387 122.541 cv
570.383 122.543 570.377 122.546 570.372 122.548 cv
570.359 122.554 570.344 122.56 570.33 122.566 cv
570.327 122.568 570.32 122.57 570.317 122.572 cv
570.303 122.578 570.29 122.584 570.276 122.59 cv
570.269 122.593 570.263 122.595 570.257 122.598 cv
570.244 122.603 570.232 122.609 570.219 122.614 cv
570.213 122.617 570.207 122.619 570.201 122.622 cv
570.188 122.628 570.175 122.633 570.162 122.639 cv
570.156 122.641 570.15 122.644 570.143 122.647 cv
570.131 122.652 570.118 122.658 570.105 122.664 cv
570.1 122.666 570.093 122.668 570.088 122.671 cv
570.074 122.677 570.062 122.682 570.048 122.688 cv
570.042 122.69 570.035 122.693 570.029 122.696 cv
570.016 122.701 570.004 122.706 569.991 122.712 cv
569.985 122.714 569.978 122.718 569.972 122.72 cv
569.959 122.726 569.947 122.731 569.934 122.736 cv
569.926 122.739 569.92 122.742 569.913 122.745 cv
569.901 122.75 569.889 122.755 569.877 122.76 cv
569.87 122.763 569.862 122.767 569.854 122.77 cv
569.843 122.775 569.831 122.78 569.819 122.785 cv
569.81 122.788 569.804 122.791 569.796 122.794 cv
569.785 122.799 569.772 122.804 569.762 122.809 cv
569.752 122.813 569.743 122.816 569.733 122.82 cv
569.724 122.824 569.714 122.829 569.704 122.833 cv
569.692 122.838 569.68 122.843 569.667 122.848 cv
569.66 122.851 569.653 122.854 569.646 122.857 cv
569.626 122.865 569.608 122.873 569.588 122.881 cv
569.558 122.893 569.528 122.906 569.498 122.918 cv
569.47 122.929 569.442 122.941 569.413 122.952 cv
564.767 124.845 560.228 125.63 555.936 125.63 cv
555.936 125.63 li
526.646 111.661 mo
526.605 111.602 526.566 111.545 526.526 111.486 cv
526.526 111.486 li
526.566 111.545 526.605 111.602 526.646 111.661 cv
526.338 111.2 mo
526.338 111.199 li
526.338 111.199 526.337 111.198 526.337 111.198 cv
526.338 111.198 526.338 111.199 526.338 111.2 cv
589.13 100.829 mo
589.133 100.818 589.135 100.808 589.138 100.797 cv
589.135 100.807 589.132 100.819 589.13 100.829 cv
589.141 100.781 mo
589.143 100.775 589.144 100.769 589.145 100.763 cv
589.144 100.769 589.143 100.775 589.141 100.781 cv
589.151 100.738 mo
589.152 100.735 589.152 100.734 589.153 100.732 cv
589.152 100.734 589.152 100.736 589.151 100.738 cv
589.161 100.699 mo
589.161 100.698 589.161 100.699 589.161 100.698 cv
589.161 100.699 li
.756863 .764706 .658823 rgb
f
555.935 125.63 mo
550.768 125.63 545.958 124.492 541.75 122.774 cv
534.542 119.832 529.097 115.191 526.646 111.661 cv
526.605 111.602 526.566 111.545 526.526 111.486 cv
526.47 111.402 526.414 111.318 526.361 111.235 cv
526.361 111.235 li
526.354 111.224 526.346 111.212 526.339 111.2 cv
526.339 111.2 526.339 111.2 526.338 111.2 cv
526.338 111.199 526.338 111.198 526.337 111.198 cv
524.399 108.174 523.075 105.615 522.544 103.111 cv
526.834 111.591 534.931 119.914 550.189 119.914 cv
550.911 119.914 551.649 119.895 552.403 119.857 cv
576.318 118.649 586.041 102.442 590.065 90.0454 cv
590.199 92.7226 590.13 96.5298 589.161 100.698 cv
589.161 100.699 589.161 100.698 589.161 100.699 cv
589.158 100.71 589.155 100.721 589.153 100.732 cv
589.152 100.734 589.152 100.735 589.151 100.738 cv
589.149 100.747 589.148 100.755 589.145 100.763 cv
589.144 100.769 589.143 100.775 589.141 100.781 cv
589.14 100.786 589.139 100.792 589.138 100.797 cv
589.135 100.808 589.133 100.818 589.13 100.829 cv
589.13 100.83 589.13 100.828 589.13 100.829 cv
587.285 108.62 582.281 117.638 569.588 122.88 cv
564.88 124.825 560.282 125.63 555.935 125.63 cv
.290196 .345098 .47451 rgb
f
564.877 69.7979 mo
569.015 68.5498 570.299 71.2075 572.677 74.6011 cv
574.801 77.6294 576.317 79.7856 575.925 82.3301 cv
575.138 87.439 549.614 94.9878 536.836 93.0972 cv
533.768 92.6431 534.199 88.7085 534.229 85.5 cv
534.262 81.9219 534.354 76.6714 536.247 75.749 cv
538.466 74.6675 555.673 72.5737 564.877 69.7979 cv
cp
.356863 .32549 .541176 rgb
f
557.194 84.1899 mo
565.024 84.1899 571.896 82.5947 575.814 80.1914 cv
575.386 78.4668 574.188 76.7544 572.677 74.6006 cv
570.299 71.2075 569.015 68.5498 564.877 69.7979 cv
555.673 72.5737 538.466 74.6675 536.247 75.749 cv
535.879 75.9287 535.579 76.2739 535.334 76.7378 cv
536.8 80.9463 546.025 84.1899 557.194 84.1899 cv
cp
.415686 .380392 .631373 rgb
f
580.942 83.1831 mo
576.414 81.9268 570.733 81.4282 564.357 81.9204 cv
548.177 83.1685 533.267 90.3364 529.507 98.3574 cv
548.349 95.2109 567.944 91.3262 580.942 83.1831 cv
cp
.913725 .917647 .854902 rgb
f
544.03 103.617 mo
542.251 111.776 547.422 119.832 555.581 121.611 cv
563.739 123.391 571.795 118.219 573.574 110.061 cv
575.354 101.902 570.183 93.8457 562.023 92.0664 cv
553.865 90.2871 545.81 95.459 544.03 103.617 cv
cp
.709804 .145098 .133333 rgb
f
552.998 106.134 mo
551.873 110.28 554.32 114.553 558.466 115.679 cv
562.611 116.805 566.885 114.357 568.01 110.211 cv
569.137 106.066 566.688 101.793 562.543 100.667 cv
558.397 99.541 554.124 101.989 552.998 106.134 cv
cp
.929412 .290196 .184314 rgb
f
544.244 89.5317 mo
550.645 90.8892 li
560.504 88.6987 li
565.474 83.6768 li
565.474 83.6768 555.18 82.2861 544.244 89.5317 cv
cp
.996078 1 .933333 rgb
f
507.373 92.4282 mo
507.373 92.4282 471.773 99.917 477.879 101.926 cv
483.984 103.935 508.639 99.5586 508.639 99.5586 cv
516.659 90.605 li
507.373 92.4282 li
cp
.913725 .917647 .854902 rgb
f
79.6231 184.586 mo
79.6231 184.586 76.1758 189.395 78.2939 194.013 cv
80.7241 199.313 104.105 219.923 104.105 219.923 cv
109.193 213.962 li
79.6231 184.586 li
.607843 .0705882 .278431 rgb
f
110.127 218.091 mo
144.789 204.137 li
144.789 204.137 120.572 186.623 107.145 179.387 cv
93.7168 172.152 78.4106 179.841 78.1083 189.537 cv
77.8062 199.233 110.127 218.091 110.127 218.091 cv
.898039 .266667 .321569 rgb
f
153.712 239.213 mo
152.054 243.449 li
152.054 243.449 125.121 255.338 89.6807 250.125 cv
54.2402 244.911 52.8535 227.788 52.8535 227.788 cv
94.6157 228.088 li
153.712 239.213 li
cp
.607843 .643137 .701961 rgb
f
91.7006 203.457 mo
111.565 193.737 164.662 183.273 175.941 186.91 cv
187.219 190.546 188.983 195.301 196.449 197.502 cv
199.682 198.455 202.607 199.626 204.885 200.648 cv
210.606 203.215 212.218 210.691 207.954 215.289 cv
199.633 224.261 177.49 233.382 152.054 243.449 cv
115.057 258.092 104.808 237.663 104.808 237.663 cv
94.9531 235.454 55.3623 236.018 52.8534 227.788 cv
49.9708 218.332 75.7724 211.251 91.7006 203.457 cv
.807843 .854902 .929412 rgb
f
159.737 227.871 mo
141.852 229.06 119.38 234.351 105.082 238.14 cv
106.923 241.128 118.463 256.745 152.054 243.449 cv
177.49 233.382 199.633 224.261 207.954 215.289 cv
208.208 215.015 208.439 214.731 208.651 214.439 cv
197.35 219.417 178.161 226.646 159.737 227.871 cv
cp
.745098 .792157 .858824 rgb
f
52.8535 227.788 mo
53.8408 234.537 60.6943 240.083 66.7158 243.231 cv
88.3584 254.612 126.572 253.026 150.575 243.899 cv
173.512 234.771 196.764 225.926 207.954 215.289 cv
196.07 226.755 170.925 236.034 150.673 244.153 cv
121.25 255.428 67.6831 254.809 54.7192 232.794 cv
53.8359 231.242 53.1001 229.567 52.8535 227.788 cv
cp
.470588 .52549 .588235 rgb
f
165.804 216.583 mo
168.47 215.862 li
170.214 215.391 171.246 213.595 170.774 211.851 cv
167.842 201.007 li
167.371 199.263 165.575 198.231 163.831 198.703 cv
161.165 199.424 li
159.42 199.896 158.389 201.691 158.86 203.436 cv
161.792 214.279 li
162.264 216.023 164.06 217.055 165.804 216.583 cv
cp
.85098 .886275 1 rgb
f
165.893 216.063 mo
168.132 215.457 li
169.738 215.023 170.688 213.369 170.253 211.763 cv
167.44 201.358 li
167.006 199.752 165.352 198.803 163.746 199.237 cv
161.507 199.842 li
159.9 200.276 158.951 201.931 159.385 203.537 cv
162.198 213.941 li
162.632 215.547 164.287 216.497 165.893 216.063 cv
cp
.807843 .854902 .929412 rgb
f
61.4668 225.002 mo
54.8848 221.672 li
42.5435 191.782 li
44.8135 190.89 li
61.4668 225.002 li
cp
.607843 .643137 .701961 rgb
f
93.7935 216.071 mo
93.7935 216.071 80.4385 196.485 72.1811 193.338 cv
63.9243 190.191 44.8135 190.89 44.8135 190.89 cv
61.4667 225.002 li
61.4667 225.002 85.8663 222.696 93.7935 216.071 cv
.807843 .854902 .929412 rgb
f
49.4917 200.472 mo
67.3277 198.58 li
67.9267 198.516 68.3604 197.979 68.297 197.38 cv
68.2333 196.782 67.6987 196.347 67.0976 196.412 cv
48.4735 198.387 li
49.4917 200.472 li
.807843 .141176 .0352941 rgb
f
51.8379 205.278 mo
73.3242 202.776 li
73.9224 202.707 74.3505 202.165 74.2813 201.567 cv
74.2114 200.969 73.6718 200.54 73.0718 200.61 cv
50.8237 203.201 li
51.8379 205.278 li
f
54.3277 210.378 mo
79.7012 207.3 li
80.2988 207.228 80.7246 206.685 80.6523 206.087 cv
80.5795 205.489 80.0381 205.062 79.4384 205.136 cv
53.3154 208.305 li
54.3277 210.378 li
f
gsave
92.2859 213.936 mo
91.635 213.033 90.7983 211.893 89.8256 210.613 cv
92.4225 210.538 96.3934 208.947 97.8711 208.558 cv
104.595 206.786 111.252 204.756 117.915 202.767 cv
130.03 199.151 141.939 194.498 154.512 192.675 cv
157.565 192.233 160.984 191.898 164.444 191.898 cv
170.443 191.898 176.57 192.903 181.16 196.093 cv
180.227 195.445 178.052 195.4 176.274 195.4 cv
176.132 195.4 175.993 195.401 175.857 195.401 cv
175.722 195.401 175.59 195.401 175.463 195.401 cv
175.024 195.401 174.635 195.398 174.327 195.38 cv
172.905 195.298 171.481 195.258 170.059 195.258 cv
162.525 195.258 155.015 196.394 147.774 198.487 cv
139.241 200.954 131.116 204.644 122.565 207.055 cv
115.627 209.011 108.616 210.709 101.552 212.144 cv
98.7411 212.715 95.4821 213.638 92.2859 213.936 cv
clp
89.8256 191.898 mo
181.16 191.898 li
181.16 213.936 li
89.8256 213.936 li
cp
.870588 .901961 .952941 rgb
f
grestore
90.331 214.032 mo
87.7931 214.032 85.3647 213.495 83.3125 211.911 cv
81.6508 210.627 80.305 209.004 78.9481 207.392 cv
79.7012 207.3 li
80.2988 207.228 80.7246 206.685 80.6523 206.087 cv
80.585 205.534 80.1168 205.127 79.5724 205.127 cv
79.5282 205.127 79.4835 205.13 79.4384 205.136 cv
77.2197 205.405 li
76.2274 204.329 75.166 203.319 74.0456 202.379 cv
74.2236 202.159 74.3164 201.87 74.2813 201.567 cv
74.2164 201.012 73.7467 200.602 73.1998 200.602 cv
73.1575 200.602 73.1149 200.605 73.0718 200.61 cv
71.9365 200.742 li
70.6716 199.835 69.347 199.011 67.9742 198.276 cv
68.2047 198.051 68.3335 197.726 68.297 197.38 cv
68.2375 196.821 67.7673 196.405 67.2158 196.405 cv
67.1768 196.405 67.1374 196.407 67.0976 196.412 cv
64.5743 196.679 li
61.6824 195.502 58.6369 194.705 55.5356 194.338 cv
55.9696 194.33 56.4101 194.326 56.8542 194.326 cv
62.3506 194.326 68.5414 194.966 73.3853 197.512 cv
79.7153 200.839 84.9316 208.146 88.0259 210.243 cv
88.4172 210.508 88.9782 210.616 89.6395 210.616 cv
89.7006 210.616 89.7628 210.615 89.8256 210.613 cv
90.7983 211.893 91.635 213.033 92.2859 213.936 cv
91.6303 213.997 90.9768 214.032 90.331 214.032 cv
.870588 .901961 .952941 rgb
f
67.9742 198.276 mo
66.8696 197.685 65.7345 197.152 64.5743 196.679 cv
67.0976 196.412 li
67.1374 196.407 67.1768 196.405 67.2158 196.405 cv
67.7673 196.405 68.2375 196.821 68.297 197.38 cv
68.3335 197.726 68.2047 198.051 67.9742 198.276 cv
.870588 .427451 .384314 rgb
f
74.0456 202.379 mo
73.3637 201.807 72.6599 201.261 71.9365 200.742 cv
73.0718 200.61 li
73.1149 200.605 73.1575 200.602 73.1998 200.602 cv
73.7467 200.602 74.2164 201.012 74.2813 201.567 cv
74.3164 201.87 74.2236 202.159 74.0456 202.379 cv
f
78.9481 207.392 mo
78.4612 206.813 77.9731 206.236 77.4682 205.677 cv
77.386 205.586 77.3029 205.495 77.2197 205.405 cv
79.4384 205.136 li
79.4835 205.13 79.5282 205.127 79.5724 205.127 cv
80.1168 205.127 80.585 205.534 80.6523 206.087 cv
80.7246 206.685 80.2988 207.228 79.7012 207.3 cv
78.9481 207.392 li
f
190.466 210.541 mo
195.179 209.493 197.246 203.68 197.645 197.868 cv
197.251 197.743 196.853 197.621 196.449 197.502 cv
190.669 195.798 188.348 192.522 182.285 189.494 cv
182.298 191.886 182.346 194.996 181.296 197.302 cv
180.075 199.984 179.363 202.883 180.703 205.507 cv
182.298 208.632 185.229 211.706 190.466 210.541 cv
cp
.466667 .498039 .568627 rgb
f
134.597 238.856 mo
122.635 236.866 li
123.111 240.674 li
123.111 240.674 154.244 264.055 158.293 266.406 cv
167.435 271.712 177.848 268.808 183.86 262.796 cv
184.417 262.24 186.329 259.879 186.329 259.879 cv
134.597 238.856 li
cp
.607843 .0705882 .278431 rgb
f
158.044 223.408 mo
122.635 236.866 li
122.635 236.866 146.059 255.669 159.166 263.533 cv
172.273 271.397 187.982 263.875 188.753 253.851 cv
189.524 243.829 158.044 223.408 158.044 223.408 cv
cp
.898039 .266667 .321569 rgb
f
106.716 222.481 mo
106.64 225.571 109.082 228.137 112.17 228.213 cv
115.259 228.29 117.826 225.848 117.902 222.759 cv
117.979 219.67 115.537 217.104 112.448 217.027 cv
109.359 216.951 106.793 219.393 106.716 222.481 cv
cp
.85098 .886275 1 rgb
f
107.896 222.511 mo
107.836 224.948 109.763 226.973 112.2 227.033 cv
114.637 227.094 116.662 225.167 116.722 222.73 cv
116.782 220.293 114.856 218.268 112.419 218.208 cv
109.982 218.147 107.957 220.074 107.896 222.511 cv
cp
.560784 .584314 .658824 rgb
f
112.898 217.594 mo
112.898 217.715 112.801 217.813 112.681 217.813 cv
112.56 217.813 112.462 217.715 112.462 217.594 cv
112.462 217.474 112.56 217.376 112.681 217.376 cv
112.801 217.376 112.898 217.474 112.898 217.594 cv
cp
f
109.282 218.812 mo
109.282 218.943 109.176 219.048 109.046 219.048 cv
108.916 219.048 108.81 218.943 108.81 218.812 cv
108.81 218.682 108.916 218.576 109.046 218.576 cv
109.176 218.576 109.282 218.682 109.282 218.812 cv
cp
f
107.583 221.751 mo
107.583 221.879 107.479 221.983 107.351 221.983 cv
107.224 221.983 107.12 221.879 107.12 221.751 cv
107.12 221.624 107.224 221.52 107.351 221.52 cv
107.479 221.52 107.583 221.624 107.583 221.751 cv
cp
f
108.155 225.082 mo
108.155 225.212 108.05 225.318 107.919 225.318 cv
107.789 225.318 107.683 225.212 107.683 225.082 cv
107.683 224.951 107.789 224.845 107.919 224.845 cv
108.05 224.845 108.155 224.951 108.155 225.082 cv
cp
f
110.373 227.189 mo
110.373 227.32 110.267 227.426 110.136 227.426 cv
110.006 227.426 109.9 227.32 109.9 227.189 cv
109.9 227.059 110.006 226.953 110.136 226.953 cv
110.267 226.953 110.373 227.059 110.373 227.189 cv
cp
f
113.344 227.648 mo
113.344 227.771 113.244 227.871 113.121 227.871 cv
112.998 227.871 112.898 227.771 112.898 227.648 cv
112.898 227.525 112.998 227.426 113.121 227.426 cv
113.244 227.426 113.344 227.525 113.344 227.648 cv
cp
f
115.852 226.331 mo
115.852 226.469 115.74 226.581 115.602 226.581 cv
115.464 226.581 115.352 226.469 115.352 226.331 cv
115.352 226.193 115.464 226.081 115.602 226.081 cv
115.74 226.081 115.852 226.193 115.852 226.331 cv
cp
f
117.323 224.096 mo
117.323 224.224 117.22 224.327 117.092 224.327 cv
116.964 224.327 116.86 224.224 116.86 224.096 cv
116.86 223.968 116.964 223.864 117.092 223.864 cv
117.22 223.864 117.323 223.968 117.323 224.096 cv
cp
f
117.206 220.811 mo
117.206 220.906 117.128 220.984 117.033 220.984 cv
116.938 220.984 116.86 220.906 116.86 220.811 cv
116.86 220.716 116.938 220.638 117.033 220.638 cv
117.128 220.638 117.206 220.716 117.206 220.811 cv
cp
f
115.088 218.371 mo
115.088 218.469 115.009 218.548 114.911 218.548 cv
114.813 218.548 114.734 218.469 114.734 218.371 cv
114.734 218.273 114.813 218.194 114.911 218.194 cv
115.009 218.194 115.088 218.273 115.088 218.371 cv
cp
f
123.849 217.07 mo
123.772 220.159 126.214 222.725 129.303 222.801 cv
132.392 222.878 134.958 220.436 135.035 217.347 cv
135.111 214.258 132.669 211.692 129.581 211.616 cv
126.492 211.539 123.925 213.98 123.849 217.07 cv
cp
.85098 .886275 1 rgb
f
125.029 217.099 mo
124.968 219.536 126.895 221.561 129.332 221.621 cv
131.769 221.682 133.794 219.755 133.854 217.318 cv
133.915 214.881 131.988 212.856 129.551 212.796 cv
127.114 212.735 125.089 214.662 125.029 217.099 cv
cp
.560784 .584314 .658824 rgb
f
130.031 212.182 mo
130.031 212.303 129.933 212.4 129.813 212.4 cv
129.692 212.4 129.595 212.303 129.595 212.182 cv
129.595 212.062 129.692 211.964 129.813 211.964 cv
129.933 211.964 130.031 212.062 130.031 212.182 cv
cp
f
126.415 213.4 mo
126.415 213.53 126.309 213.636 126.178 213.636 cv
126.048 213.636 125.942 213.53 125.942 213.4 cv
125.942 213.27 126.048 213.164 126.178 213.164 cv
126.309 213.164 126.415 213.27 126.415 213.4 cv
cp
f
124.715 216.339 mo
124.715 216.467 124.611 216.571 124.483 216.571 cv
124.355 216.571 124.252 216.467 124.252 216.339 cv
124.252 216.211 124.355 216.108 124.483 216.108 cv
124.611 216.108 124.715 216.211 124.715 216.339 cv
cp
f
125.288 219.669 mo
125.288 219.8 125.182 219.906 125.052 219.906 cv
124.921 219.906 124.815 219.8 124.815 219.669 cv
124.815 219.539 124.921 219.433 125.052 219.433 cv
125.182 219.433 125.288 219.539 125.288 219.669 cv
cp
f
127.505 221.777 mo
127.505 221.908 127.399 222.014 127.269 222.014 cv
127.138 222.014 127.032 221.908 127.032 221.777 cv
127.032 221.647 127.138 221.542 127.269 221.542 cv
127.399 221.542 127.505 221.647 127.505 221.777 cv
cp
f
130.476 222.236 mo
130.476 222.359 130.376 222.459 130.253 222.459 cv
130.13 222.459 130.031 222.359 130.031 222.236 cv
130.031 222.114 130.13 222.014 130.253 222.014 cv
130.376 222.014 130.476 222.114 130.476 222.236 cv
cp
f
132.984 220.919 mo
132.984 221.057 132.872 221.169 132.734 221.169 cv
132.596 221.169 132.484 221.057 132.484 220.919 cv
132.484 220.781 132.596 220.669 132.734 220.669 cv
132.872 220.669 132.984 220.781 132.984 220.919 cv
cp
f
134.456 218.684 mo
134.456 218.812 134.352 218.916 134.224 218.916 cv
134.096 218.916 133.992 218.812 133.992 218.684 cv
133.992 218.556 134.096 218.452 134.224 218.452 cv
134.352 218.452 134.456 218.556 134.456 218.684 cv
cp
f
134.338 215.399 mo
134.338 215.495 134.26 215.572 134.165 215.572 cv
134.07 215.572 133.992 215.495 133.992 215.399 cv
133.992 215.304 134.07 215.227 134.165 215.227 cv
134.26 215.227 134.338 215.304 134.338 215.399 cv
cp
f
132.221 212.959 mo
132.221 213.057 132.141 213.136 132.043 213.136 cv
131.945 213.136 131.866 213.057 131.866 212.959 cv
131.866 212.862 131.945 212.782 132.043 212.782 cv
132.141 212.782 132.221 212.862 132.221 212.959 cv
cp
f
139.882 210.374 mo
139.806 213.463 142.248 216.029 145.336 216.106 cv
148.425 216.183 150.992 213.741 151.068 210.652 cv
151.145 207.563 148.703 204.997 145.614 204.92 cv
142.525 204.843 139.959 207.285 139.882 210.374 cv
cp
.85098 .886275 1 rgb
f
141.063 210.404 mo
141.002 212.84 142.929 214.865 145.366 214.926 cv
147.803 214.986 149.828 213.06 149.888 210.623 cv
149.949 208.186 148.022 206.161 145.585 206.1 cv
143.148 206.04 141.123 207.966 141.063 210.404 cv
cp
.560784 .584314 .658824 rgb
f
146.064 205.487 mo
146.064 205.607 145.967 205.705 145.846 205.705 cv
145.726 205.705 145.628 205.607 145.628 205.487 cv
145.628 205.367 145.726 205.269 145.846 205.269 cv
145.967 205.269 146.064 205.367 146.064 205.487 cv
cp
f
142.448 206.705 mo
142.448 206.835 142.342 206.941 142.212 206.941 cv
142.081 206.941 141.976 206.835 141.976 206.705 cv
141.976 206.574 142.081 206.468 142.212 206.468 cv
142.342 206.468 142.448 206.574 142.448 206.705 cv
cp
f
140.749 209.644 mo
140.749 209.772 140.645 209.875 140.517 209.875 cv
140.389 209.875 140.286 209.772 140.286 209.644 cv
140.286 209.516 140.389 209.412 140.517 209.412 cv
140.645 209.412 140.749 209.516 140.749 209.644 cv
cp
f
141.321 212.974 mo
141.321 213.104 141.216 213.21 141.085 213.21 cv
140.955 213.21 140.849 213.104 140.849 212.974 cv
140.849 212.844 140.955 212.738 141.085 212.738 cv
141.216 212.738 141.321 212.844 141.321 212.974 cv
cp
f
143.538 215.082 mo
143.538 215.212 143.433 215.318 143.302 215.318 cv
143.172 215.318 143.066 215.212 143.066 215.082 cv
143.066 214.952 143.172 214.846 143.302 214.846 cv
143.433 214.846 143.538 214.952 143.538 215.082 cv
cp
f
146.51 215.541 mo
146.51 215.664 146.41 215.764 146.287 215.764 cv
146.164 215.764 146.064 215.664 146.064 215.541 cv
146.064 215.418 146.164 215.318 146.287 215.318 cv
146.41 215.318 146.51 215.418 146.51 215.541 cv
cp
f
149.018 214.223 mo
149.018 214.361 148.905 214.474 148.768 214.474 cv
148.629 214.474 148.518 214.361 148.518 214.223 cv
148.518 214.085 148.629 213.974 148.768 213.974 cv
148.905 213.974 149.018 214.085 149.018 214.223 cv
cp
f
150.489 211.988 mo
150.489 212.116 150.386 212.22 150.258 212.22 cv
150.13 212.22 150.026 212.116 150.026 211.988 cv
150.026 211.86 150.13 211.756 150.258 211.756 cv
150.386 211.756 150.489 211.86 150.489 211.988 cv
cp
f
150.371 208.704 mo
150.371 208.799 150.294 208.876 150.199 208.876 cv
150.104 208.876 150.026 208.799 150.026 208.704 cv
150.026 208.608 150.104 208.531 150.199 208.531 cv
150.294 208.531 150.371 208.608 150.371 208.704 cv
cp
f
148.254 206.264 mo
148.254 206.362 148.175 206.441 148.077 206.441 cv
147.979 206.441 147.9 206.362 147.9 206.264 cv
147.9 206.166 147.979 206.086 148.077 206.086 cv
148.175 206.086 148.254 206.166 148.254 206.264 cv
cp
f
159.976 206.86 mo
159.737 206.021 li
168.206 203.618 li
168.444 204.458 li
159.976 206.86 li
cp
.85098 .886275 1 rgb
f
161.759 213.397 mo
161.515 212.56 li
169.983 210.094 li
170.228 210.932 li
161.759 213.397 li
cp
f
167.598 258.992 mo
179.81 260.518 181.593 249.481 177.219 245.107 cv
172.845 240.733 158.221 228.461 158.221 228.461 cv
135.323 238.565 li
135.323 238.565 155.386 257.465 167.598 258.992 cv
cp
.988235 .294118 .352941 rgb
f
93.5986 179.566 mo
93.5986 179.566 85.0625 179.566 84.0464 184.839 cv
83.0303 190.111 96.0376 198.229 96.0376 198.229 cv
113.517 190.976 li
113.517 190.976 99.4927 179.566 93.5986 179.566 cv
cp
f
346.386 419.339 mo
344.181 418.904 li
347.485 402.758 li
349.69 403.194 li
346.386 419.339 li
cp
.305882 .317647 .101961 rgb
f
317.19 362.969 mo
317.19 362.969 336.228 336.721 357.854 334.647 cv
379.481 332.575 360.396 363.855 360.396 363.855 cv
317.19 362.969 li
.952941 .705882 .0901961 rgb
f
294.424 358.784 mo
300.633 358.551 305.985 368.086 306.38 380.084 cv
306.774 392.082 302.061 401.999 295.852 402.237 cv
315.845 409.792 329.247 412.277 365.411 404.831 cv
377.459 402.351 389.494 398.901 400.611 393.555 cv
406.816 390.573 419.954 384.335 419.674 375.792 cv
419.53 371.439 414.412 369.967 410.927 369.153 cv
407.458 368.342 403.622 368.708 399.798 369.074 cv
394.822 369.55 389.868 370.026 385.773 367.911 cv
375.095 362.392 368.922 359.516 362.182 357.485 cv
349.525 353.671 336.173 353.39 323.39 357.476 cv
312.227 361.043 305.827 360.236 301.038 359.428 cv
298.545 359.007 296.488 358.587 294.424 358.784 cv
f
387.361 368.588 mo
386.82 368.399 386.289 368.177 385.773 367.911 cv
375.095 362.392 368.922 359.516 362.182 357.485 cv
349.525 353.671 336.173 353.39 323.39 357.476 cv
312.227 361.043 305.827 360.236 301.038 359.428 cv
298.545 359.007 296.488 358.587 294.424 358.784 cv
298.61 358.627 302.405 362.915 304.556 369.4 cv
314.556 372.597 328.871 374.601 344.771 374.601 cv
361.978 374.601 377.326 372.254 387.361 368.588 cv
.996078 .870588 0 rgb
f
385.91 369.013 mo
387.361 367.755 401.682 359.041 407.352 349.895 cv
413.467 340.032 420.854 345.472 422.181 348.438 cv
423.507 351.404 419.208 374.37 419.208 374.37 cv
419.208 374.37 376.961 376.777 385.91 369.013 cv
cp
.952941 .705882 .0901961 rgb
f
419.674 375.792 mo
419.654 375.217 419.456 374.462 419.279 373.983 cv
398.336 395.116 332.746 393.727 305.944 387.577 cv
304.641 395.955 300.703 402.051 295.852 402.237 cv
315.845 409.792 329.247 412.277 365.411 404.831 cv
377.459 402.351 389.494 398.901 400.611 393.555 cv
406.816 390.573 419.954 384.335 419.674 375.792 cv
.501961 .647059 .054902 rgb
f
400.611 389.099 mo
389.494 394.444 377.459 397.894 365.411 400.374 cv
332.383 407.174 318.34 405.69 300.924 399.627 cv
299.431 401.226 296.688 402.006 294.831 402.078 cv
314.825 409.632 329.247 412.277 365.411 404.831 cv
377.459 402.351 389.494 398.901 400.611 393.555 cv
406.816 390.573 419.954 384.335 419.674 375.792 cv
419.654 375.217 419.537 374.463 419.279 373.983 cv
417.611 380.225 406.057 386.481 400.611 389.099 cv
.454902 .462745 .278431 rgb
f
306.38 380.084 mo
305.984 368.086 300.831 358.544 294.868 358.768 cv
294.653 358.789 294.439 358.81 294.224 358.832 cv
288.582 359.715 284.401 369.339 284.783 380.905 cv
285.164 392.47 289.968 401.753 295.655 402.206 cv
295.87 402.211 296.085 402.216 296.3 402.221 cv
302.263 401.992 306.775 392.082 306.38 380.084 cv
.996078 .870588 0 rgb
f
304.472 380.157 mo
304.143 370.195 299.855 362.273 294.893 362.458 cv
294.714 362.476 294.536 362.493 294.357 362.511 cv
289.661 363.246 286.182 371.237 286.499 380.839 cv
286.815 390.442 290.813 398.15 295.545 398.525 cv
295.724 398.529 295.903 398.534 296.082 398.538 cv
301.044 398.346 304.8 390.118 304.472 380.157 cv
.458824 .160784 .0705882 rgb
f
294.133 398.187 mo
298.284 396.514 301.23 389.025 300.937 380.157 cv
300.653 371.528 297.396 364.432 293.305 362.808 cv
289.153 364.48 286.207 371.969 286.499 380.838 cv
286.783 389.469 290.041 396.565 294.133 398.187 cv
.752941 .321569 .0666667 rgb
f
345.016 345.305 mo
330.261 344.909 318.04 352.617 317.719 362.52 cv
317.872 357.802 329.957 354.299 344.71 354.696 cv
359.465 355.092 371.301 359.237 371.147 363.954 cv
371.47 354.05 359.769 345.702 345.016 345.305 cv
.196078 .521569 .576471 rgb
f
344.71 354.696 mo
329.957 354.299 317.872 357.802 317.719 362.52 cv
317.565 367.237 329.402 371.381 344.156 371.778 cv
358.91 372.173 370.994 368.67 371.147 363.954 cv
371.301 359.237 359.465 355.092 344.71 354.696 cv
.27451 .227451 .27451 rgb
f
317.72 362.478 mo
317.721 362.46 317.722 362.441 317.724 362.423 cv
317.722 362.441 317.721 362.46 317.72 362.478 cv
352.05 355.221 mo
349.722 354.945 347.26 354.764 344.71 354.696 cv
343.948 354.675 343.19 354.665 342.443 354.665 cv
343.191 354.665 343.947 354.675 344.71 354.696 cv
347.26 354.764 349.722 354.945 352.05 355.221 cv
352.05 355.221 li
342.436 354.665 mo
342.439 354.665 342.44 354.665 342.443 354.665 cv
342.443 354.665 li
342.44 354.665 342.439 354.665 342.436 354.665 cv
.996078 .913725 .360784 rgb
f
371.147 363.954 mo
371.148 363.921 371.149 363.889 371.149 363.857 cv
371.141 359.994 363.104 356.531 352.05 355.221 cv
349.722 354.945 347.26 354.764 344.71 354.696 cv
343.947 354.675 343.191 354.665 342.443 354.665 cv
342.443 354.665 li
342.443 354.665 li
342.443 354.665 li
342.44 354.665 342.439 354.665 342.436 354.665 cv
341.813 354.665 341.195 354.672 340.585 354.686 cv
344.932 352.472 348.532 350.225 347.172 348.038 cv
346.244 346.546 344.2 346.041 341.919 346.041 cv
339.664 346.041 337.178 346.535 335.311 347.054 cv
334.589 347.255 333.959 347.46 333.472 347.642 cv
329.088 349.277 325.263 352.454 322.955 356.535 cv
322.705 356.976 322.476 357.448 322.273 357.939 cv
319.499 359.189 317.838 360.725 317.724 362.423 cv
317.722 362.441 317.721 362.46 317.72 362.478 cv
317.72 362.492 317.719 362.506 317.719 362.52 cv
318.032 352.861 329.665 345.29 343.928 345.29 cv
344.289 345.29 344.652 345.295 345.016 345.305 cv
359.568 345.696 371.149 353.823 371.154 363.548 cv
371.154 363.683 371.152 363.818 371.147 363.954 cv
.380392 .67451 .729412 rgb
f
346.419 371.808 mo
345.673 371.808 344.918 371.798 344.156 371.778 cv
329.503 371.384 317.727 367.293 317.717 362.617 cv
317.717 362.584 317.718 362.552 317.719 362.52 cv
317.719 362.52 li
317.719 362.506 317.72 362.492 317.72 362.478 cv
317.721 362.46 317.722 362.441 317.724 362.423 cv
317.838 360.725 319.499 359.189 322.273 357.939 cv
320.797 361.51 320.742 366.06 324.703 367 cv
325.197 367.117 325.653 367.172 326.074 367.172 cv
331.137 367.172 331.354 359.258 336.64 356.641 cv
337.948 355.994 339.299 355.341 340.585 354.686 cv
341.195 354.672 341.813 354.665 342.436 354.665 cv
342.439 354.665 342.44 354.665 342.443 354.665 cv
342.443 354.665 li
342.443 354.665 li
343.19 354.665 343.948 354.675 344.71 354.696 cv
347.26 354.764 349.722 354.945 352.05 355.221 cv
363.104 356.531 371.141 359.994 371.149 363.857 cv
371.149 363.889 371.148 363.921 371.147 363.954 cv
371.147 363.954 li
371.002 368.427 360.127 371.808 346.419 371.808 cv
.443137 .47451 .537255 rgb
f
326.458 390.513 mo
326.458 390.513 365.574 422.782 389.77 425.416 cv
397.301 426.236 402.998 418.75 400.204 411.752 cv
397.575 405.168 391.81 396.203 379.325 386.269 cv
379.325 386.269 320.902 378.09 326.458 390.513 cv
.952941 .705882 .0901961 rgb
f
379.325 386.269 mo
379.325 386.269 347.028 381.749 332.746 384.538 cv
341.128 391.17 373.109 415.503 393.985 417.776 cv
396.61 418.062 399.01 417.336 400.907 415.978 cv
400.98 414.597 400.769 413.166 400.204 411.752 cv
397.575 405.168 391.81 396.203 379.325 386.269 cv
.996078 .870588 0 rgb
f
352.86 418.783 mo
353.31 423.895 349.826 428.393 345.08 428.832 cv
340.334 429.27 336.123 425.481 335.673 420.37 cv
335.224 415.257 338.708 410.758 343.454 410.32 cv
348.2 409.881 352.411 413.67 352.86 418.783 cv
cp
.152941 .192157 .254902 rgb
f
350.712 418.62 mo
350.996 421.849 348.795 424.692 345.797 424.968 cv
342.799 425.246 340.139 422.852 339.855 419.623 cv
339.571 416.393 341.771 413.551 344.77 413.274 cv
347.768 412.998 350.429 415.391 350.712 418.62 cv
cp
.239216 .227451 .517647 rgb
f
303.376 348.614 mo
307.88 350.24 310.193 354.808 308.542 358.818 cv
306.89 362.827 298.574 378.022 294.07 376.397 cv
289.566 374.771 290.58 356.939 292.231 352.929 cv
293.883 348.92 298.873 346.989 303.376 348.614 cv
cp
.431373 .580392 .584314 rgb
f
296.306 350.544 mo
296.306 350.544 303.403 350.399 304.633 356.247 cv
305.863 362.095 297.402 369.603 297.402 369.603 cv
297.402 369.603 302.657 360.847 300.609 356.74 cv
298.562 352.631 293.885 351 296.306 350.544 cv
cp
.521569 .686275 .686275 rgb
f
284.722 413.094 mo
289.202 413.956 293.471 411.223 294.257 406.988 cv
295.042 402.754 296.367 385.679 291.887 384.817 cv
287.406 383.954 278.818 399.631 278.032 403.866 cv
277.246 408.1 280.241 412.231 284.722 413.094 cv
f
284.919 409.365 mo
282.264 409.365 280.052 407.926 280.052 407.926 cv
278.345 406.333 282.966 407.275 286.78 404.801 cv
290.594 402.327 290.983 392.258 290.983 392.258 cv
290.983 392.258 293.83 402.864 289.758 407.226 cv
288.237 408.854 286.5 409.365 284.919 409.365 cv
.270588 .470588 .470588 rgb
f
298.301 380.427 mo
298.968 374.65 297.083 369.699 294.091 369.367 cv
293.982 369.361 293.874 369.356 293.765 369.35 cv
290.885 369.359 288.106 373.663 287.463 379.231 cv
286.82 384.801 288.549 389.602 291.355 390.237 cv
291.462 390.255 291.569 390.273 291.676 390.292 cv
294.668 390.621 297.634 386.205 298.301 380.427 cv
cp
.878431 .27451 .0745098 rgb
f
291.355 390.237 mo
292.467 390.336 293.432 389.797 294.165 389.093 cv
294.908 388.377 295.46 387.478 295.929 386.551 cv
296.843 384.654 297.433 382.351 297.627 380.526 cv
297.891 378.441 297.876 376.311 297.467 374.262 cv
297.024 372.161 296.14 369.959 294.091 369.367 cv
296.376 369.424 297.809 371.827 298.457 374.01 cv
298.792 375.09 298.947 376.211 299.037 377.33 cv
299.101 378.452 299.043 379.574 298.924 380.687 cv
298.62 382.9 298.006 385.107 296.818 387.043 cv
296.231 388.006 295.502 388.91 294.571 389.586 cv
293.484 390.212 292.565 390.676 291.355 390.237 cv
cp
.427451 .14902 .0862745 rgb
f
295.984 380.171 mo
296.366 376.864 295.287 374.03 293.574 373.84 cv
293.388 373.831 li
291.739 373.835 290.148 376.299 289.78 379.487 cv
289.412 382.675 290.402 385.424 292.008 385.788 cv
292.191 385.818 li
293.905 386.007 295.603 383.479 295.984 380.171 cv
cp
.54902 .0196078 .0470588 rgb
f
322.273 357.939 mo
322.476 357.448 322.705 356.976 322.955 356.535 cv
325.263 352.454 329.088 349.277 333.472 347.642 cv
333.959 347.46 334.589 347.255 335.311 347.054 cv
337.178 346.535 339.664 346.041 341.919 346.041 cv
344.2 346.041 346.244 346.546 347.172 348.038 cv
348.532 350.225 344.932 352.472 340.585 354.686 cv
332.979 354.858 326.398 356.081 322.273 357.939 cv
.423529 .709804 .776471 rgb
f
326.074 367.172 mo
325.653 367.172 325.197 367.117 324.703 367 cv
320.742 366.06 320.797 361.51 322.273 357.939 cv
326.398 356.081 332.979 354.858 340.585 354.686 cv
339.299 355.341 337.948 355.994 336.64 356.641 cv
331.354 359.258 331.137 367.172 326.074 367.172 cv
.47451 .545098 .615686 rgb
f
367.21 398.187 mo
358.112 398.187 350.737 395.941 350.737 393.17 cv
350.737 390.399 358.112 388.153 367.21 388.153 cv
376.308 388.153 383.683 390.399 383.683 393.17 cv
383.683 395.941 376.308 398.187 367.21 398.187 cv
.996078 .917647 0 rgb
f
383.914 407.343 mo
379.642 407.343 376.179 405.88 376.179 404.077 cv
376.179 402.274 379.642 400.811 383.914 400.811 cv
388.188 400.811 391.65 402.274 391.65 404.077 cv
391.65 405.88 388.188 407.343 383.914 407.343 cv
f
509.243 246.141 mo
521.131 266.549 li
531.837 269.684 li
533.02 256.717 li
515.426 246.141 li
509.243 246.141 li
.611765 .788235 .709804 rgb
f
603.612 190.565 mo
593.57 184.25 li
593.57 184.25 586.732 176.315 603.484 174.81 cv
620.237 173.304 634.543 180.21 631.589 182.46 cv
628.635 184.711 622.204 190.415 603.612 190.565 cv
cp
.403922 .164706 .25098 rgb
f
471.863 212.387 mo
472.053 235.864 505.252 254.629 546.015 254.3 cv
586.777 253.97 619.669 234.671 619.479 211.194 cv
619.398 201.262 613.411 192.173 603.442 185.017 cv
589.848 175.257 568.847 169.09 545.327 169.28 cv
504.564 169.61 471.673 188.909 471.863 212.387 cv
.6 .831373 .827451 rgb
f
474.082 212.005 mo
474.272 235.482 505.252 254.629 546.015 254.3 cv
586.777 253.97 619.669 234.671 619.479 211.194 cv
619.398 201.262 613.411 192.173 603.442 185.017 cv
589.848 175.257 568.847 169.09 545.327 169.28 cv
504.564 169.61 473.893 188.527 474.082 212.005 cv
f
471.863 212.387 mo
472.014 230.964 505.18 245.758 545.942 245.428 cv
586.705 245.099 619.629 229.771 619.479 211.194 cv
619.415 203.334 613.443 196.153 603.486 190.507 cv
589.908 182.806 568.918 177.962 545.399 178.152 cv
504.636 178.482 471.713 193.809 471.863 212.387 cv
.807843 .141176 .0352941 rgb
f
471.863 212.387 mo
471.956 223.85 505.075 232.875 545.839 232.546 cv
586.601 232.216 619.571 222.657 619.479 211.194 cv
619.439 206.344 613.49 201.931 603.552 198.478 cv
589.997 193.769 569.021 190.844 545.503 191.035 cv
504.74 191.364 471.771 200.924 471.863 212.387 cv
.6 .831373 .827451 rgb
f
471.863 212.387 mo
471.896 216.598 504.97 219.745 545.732 219.415 cv
586.496 219.086 619.513 215.405 619.479 211.194 cv
619.465 209.412 613.537 207.821 603.617 206.603 cv
590.087 204.942 569.128 203.975 545.609 204.165 cv
504.847 204.494 471.829 208.175 471.863 212.387 cv
.74902 .152941 .137255 rgb
f
471.863 212.387 mo
471.751 198.524 483.178 186.121 500.943 178.217 cv
505.391 186.835 512.339 204.836 507.72 227.046 cv
506.098 234.846 503.666 240.988 500.84 245.792 cv
483.322 238.159 471.974 226.079 471.863 212.387 cv
.607843 .0862745 .282353 rgb
f
500.121 227.108 mo
504.26 207.208 499.113 190.692 494.799 181.272 cv
496.75 180.192 498.8 179.171 500.944 178.217 cv
505.391 186.835 512.339 204.836 507.72 227.046 cv
506.098 234.846 503.666 240.988 500.84 245.792 cv
498.752 244.883 496.755 243.908 494.851 242.876 cv
496.987 238.582 498.816 233.382 500.121 227.108 cv
.368627 .176471 .282353 rgb
f
476.734 227.362 mo
473.635 222.717 471.905 217.673 471.863 212.387 cv
471.824 207.625 473.167 203.041 475.641 198.746 cv
477.049 203.179 477.906 208.693 477.955 214.673 cv
477.992 219.263 477.548 223.585 476.734 227.362 cv
f
475.874 226.026 mo
475.87 226.021 475.868 226.017 475.865 226.012 cv
473.45 221.986 472.063 217.677 471.883 213.188 cv
471.883 213.189 471.883 213.189 471.883 213.19 cv
471.883 213.191 li
471.883 213.202 471.884 213.213 471.884 213.224 cv
471.884 213.225 471.884 213.227 471.884 213.228 cv
472.071 217.708 473.46 222.007 475.874 226.026 cv
.839216 .933333 .929412 rgb
f
475.932 226.117 mo
475.913 226.086 475.893 226.057 475.874 226.026 cv
473.46 222.007 472.071 217.708 471.884 213.228 cv
472.073 217.742 473.484 222.072 475.932 226.117 cv
471.884 213.224 mo
471.884 213.213 471.883 213.202 471.883 213.191 cv
471.883 213.191 471.883 213.19 471.883 213.191 cv
471.883 213.202 471.884 213.213 471.884 213.224 cv
.505882 .776471 .772549 rgb
f
545.499 253.563 mo
544.747 253.563 543.997 253.557 543.247 253.544 cv
542.36 253.487 541.474 253.392 540.591 253.254 cv
540.567 253.25 540.54 253.246 540.516 253.242 cv
540.516 253.242 li
525.932 250.918 525.424 246.55 525.424 246.55 cv
521.74 246.58 li
521.74 246.58 519.141 249.062 516.497 250.3 cv
511.404 249.088 506.158 247.442 501.117 245.315 cv
502.079 243.633 502.994 241.792 503.843 239.778 cv
515.463 243.353 529.489 245.433 544.607 245.434 cv
545.053 245.434 545.494 245.432 545.942 245.428 cv
586.705 245.099 619.629 229.771 619.479 211.194 cv
619.479 211.263 619.479 211.331 619.479 211.4 cv
619.478 221.583 613.253 230.971 602.87 238.352 cv
602.877 238.346 602.887 238.339 602.895 238.333 cv
594.342 243.932 584.455 247.87 574.028 250.338 cv
575.987 246.141 li
570.778 246.184 li
570.778 246.184 570.778 246.184 570.778 246.184 cv
570.687 246.238 559.613 252.837 547.445 253.549 cv
546.796 253.559 546.148 253.563 545.499 253.563 cv
f
544.607 245.434 mo
529.489 245.433 515.463 243.353 503.843 239.778 cv
504.914 237.239 505.881 234.426 506.711 231.313 cv
517.312 234.753 529.56 236.71 542.612 236.71 cv
542.964 236.71 543.314 236.708 543.667 236.706 cv
558.999 236.582 573.218 233.773 584.981 229.069 cv
605.759 225.23 619.538 218.611 619.479 211.194 cv
619.479 211.194 li
619.629 229.771 586.705 245.099 545.942 245.428 cv
545.494 245.432 545.053 245.434 544.607 245.434 cv
.678431 .133333 .0313725 rgb
f
584.981 229.069 mo
593.821 225.533 601.275 220.925 606.772 215.581 cv
614.803 214.295 619.491 212.782 619.479 211.194 cv
619.479 211.194 li
619.538 218.611 605.759 225.23 584.981 229.069 cv
.505882 .776471 .772549 rgb
f
471.882 213.186 mo
471.882 213.175 471.881 213.16 471.881 213.149 cv
471.881 213.15 471.881 213.151 471.881 213.152 cv
471.882 213.163 471.882 213.172 471.882 213.183 cv
471.882 213.184 471.882 213.185 471.882 213.186 cv
.839216 .933333 .929412 rgb
f
471.882 213.183 mo
471.882 213.172 471.882 213.163 471.881 213.152 cv
471.882 213.163 471.882 213.173 471.882 213.183 cv
.505882 .776471 .772549 rgb
f
471.881 213.146 mo
471.881 213.14 471.88 213.136 471.88 213.13 cv
471.88 213.131 471.88 213.131 471.88 213.131 cv
471.88 213.135 471.881 213.14 471.881 213.144 cv
471.881 213.145 471.881 213.145 471.881 213.146 cv
.839216 .933333 .929412 rgb
f
471.881 213.144 mo
471.881 213.14 471.88 213.135 471.88 213.131 cv
471.88 213.133 471.88 213.135 471.881 213.137 cv
471.881 213.139 471.881 213.142 471.881 213.144 cv
.505882 .776471 .772549 rgb
f
619.479 211.194 mo
619.471 210.283 619.414 209.379 619.309 208.482 cv
619.414 209.379 619.471 210.283 619.479 211.194 cv
619.309 208.48 mo
619.307 208.466 619.305 208.452 619.303 208.437 cv
619.305 208.452 619.307 208.466 619.309 208.48 cv
.839216 .933333 .929412 rgb
f
619.479 211.194 mo
619.45 207.684 618.244 204.31 616.03 201.146 cv
616.204 200.569 616.359 199.987 616.492 199.402 cv
617.971 202.294 618.931 205.317 619.303 208.437 cv
619.305 208.452 619.307 208.466 619.309 208.48 cv
619.309 208.481 619.309 208.482 619.309 208.482 cv
619.414 209.379 619.471 210.283 619.479 211.194 cv
619.479 211.194 li
.505882 .776471 .772549 rgb
f
619.479 211.194 mo
619.458 208.688 617.861 206.299 614.95 204.099 cv
615.369 203.127 615.729 202.143 616.03 201.146 cv
618.244 204.31 619.45 207.684 619.479 211.194 cv
619.479 211.194 li
.678431 .133333 .0313725 rgb
f
619.479 211.194 mo
619.47 210.069 617.104 209.02 612.864 208.093 cv
613.669 206.788 614.365 205.457 614.95 204.099 cv
617.861 206.299 619.458 208.688 619.479 211.194 cv
619.479 211.194 li
.505882 .776471 .772549 rgb
f
606.772 215.581 mo
609.201 213.219 611.248 210.714 612.864 208.093 cv
617.104 209.02 619.47 210.069 619.479 211.194 cv
619.479 211.194 li
619.479 211.194 li
619.491 212.782 614.803 214.295 606.772 215.581 cv
.631373 .141176 .129412 rgb
f
495.055 242.46 mo
487.746 238.623 481.233 233.631 476.745 227.31 cv
477.552 223.546 477.992 219.242 477.955 214.673 cv
477.954 214.549 477.953 214.424 477.951 214.299 cv
483.211 220.036 490.705 224.979 499.762 228.751 cv
498.534 234.101 496.916 238.633 495.055 242.46 cv
476.069 226.324 mo
476.023 226.256 475.977 226.185 475.932 226.117 cv
473.484 222.072 472.073 217.742 471.884 213.228 cv
471.884 213.227 471.884 213.225 471.884 213.224 cv
471.884 213.213 471.883 213.202 471.883 213.191 cv
472.069 217.795 473.535 222.208 476.069 226.324 cv
471.883 213.19 mo
471.883 213.189 471.883 213.189 471.883 213.188 cv
471.882 213.187 471.883 213.187 471.882 213.186 cv
471.882 213.185 471.882 213.184 471.882 213.183 cv
471.882 213.173 471.882 213.163 471.881 213.152 cv
471.881 213.151 471.881 213.15 471.881 213.149 cv
471.881 213.147 471.881 213.148 471.881 213.146 cv
471.881 213.145 471.881 213.145 471.881 213.144 cv
471.881 213.142 471.881 213.139 471.881 213.137 cv
471.881 213.154 471.882 213.172 471.883 213.19 cv
.509804 .0784314 .262745 rgb
f
501.117 245.315 mo
499.054 244.446 497.026 243.495 495.055 242.46 cv
496.916 238.633 498.534 234.101 499.762 228.751 cv
501.987 229.678 504.307 230.534 506.711 231.313 cv
505.881 234.426 504.914 237.239 503.843 239.778 cv
502.994 241.792 502.079 243.633 501.117 245.315 cv
.309804 .164706 .262745 rgb
f
471.88 213.124 mo
471.879 213.109 471.879 213.092 471.878 213.077 cv
471.878 213.078 471.878 213.078 471.878 213.079 cv
471.879 213.089 471.879 213.096 471.879 213.106 cv
471.879 213.107 471.879 213.109 471.88 213.11 cv
471.88 213.113 471.88 213.119 471.88 213.122 cv
471.88 213.123 471.88 213.123 471.88 213.124 cv
.839216 .933333 .929412 rgb
f
471.88 213.122 mo
471.88 213.119 471.88 213.113 471.88 213.11 cv
471.88 213.113 471.88 213.115 471.88 213.118 cv
471.88 213.119 471.88 213.121 471.88 213.122 cv
471.879 213.106 mo
471.879 213.096 471.879 213.089 471.878 213.079 cv
471.878 213.08 471.879 213.082 471.879 213.084 cv
471.879 213.091 471.879 213.099 471.879 213.106 cv
.505882 .776471 .772549 rgb
f
471.88 213.118 mo
471.88 213.115 471.88 213.113 471.88 213.11 cv
471.879 213.109 471.879 213.107 471.879 213.106 cv
471.879 213.099 471.879 213.091 471.879 213.084 cv
471.879 213.095 471.879 213.107 471.88 213.118 cv
.509804 .0784314 .262745 rgb
f
471.877 213.053 mo
471.877 213.044 471.877 213.036 471.877 213.027 cv
471.877 213.028 471.877 213.028 471.877 213.029 cv
471.877 213.036 471.877 213.043 471.877 213.05 cv
471.877 213.051 471.877 213.052 471.877 213.053 cv
.839216 .933333 .929412 rgb
f
471.877 213.05 mo
471.877 213.043 471.877 213.036 471.877 213.029 cv
471.877 213.032 471.877 213.038 471.877 213.041 cv
471.877 213.044 471.877 213.047 471.877 213.05 cv
.505882 .776471 .772549 rgb
f
471.877 213.026 mo
471.876 213.025 471.876 213.023 471.876 213.022 cv
471.876 213.022 471.876 213.023 471.876 213.023 cv
471.876 213.025 471.876 213.025 471.877 213.026 cv
.839216 .933333 .929412 rgb
f
471.877 213.041 mo
471.877 213.038 471.877 213.032 471.877 213.029 cv
471.877 213.028 471.877 213.028 471.877 213.027 cv
471.877 213.026 li
471.876 213.025 471.876 213.025 471.876 213.023 cv
471.877 213.029 471.877 213.035 471.877 213.041 cv
.509804 .0784314 .262745 rgb
f
471.875 212.976 mo
471.875 212.972 471.875 212.967 471.875 212.963 cv
471.875 212.963 471.875 212.964 471.875 212.964 cv
471.875 212.965 471.875 212.97 471.875 212.971 cv
471.875 212.973 471.875 212.975 471.875 212.976 cv
.839216 .933333 .929412 rgb
f
471.875 212.971 mo
471.875 212.97 471.875 212.965 471.875 212.964 cv
471.875 212.967 471.875 212.969 471.875 212.971 cv
.505882 .776471 .772549 rgb
f
471.864 212.496 mo
471.864 212.49 471.864 212.482 471.864 212.476 cv
471.864 212.476 li
471.864 212.482 471.864 212.49 471.864 212.496 cv
471.864 212.496 li
.839216 .933333 .929412 rgb
f
471.864 212.496 mo
471.864 212.49 471.864 212.482 471.864 212.476 cv
471.864 212.48 471.864 212.486 471.864 212.49 cv
471.864 212.492 471.864 212.494 471.864 212.496 cv
.505882 .776471 .772549 rgb
f
471.864 212.461 mo
471.864 212.46 471.864 212.458 471.864 212.456 cv
471.864 212.456 li
471.864 212.458 471.864 212.46 471.864 212.461 cv
471.864 212.461 li
.839216 .933333 .929412 rgb
f
471.864 212.461 mo
471.864 212.46 471.864 212.458 471.864 212.456 cv
471.864 212.458 471.864 212.459 471.864 212.46 cv
471.864 212.461 471.864 212.46 471.864 212.461 cv
.505882 .776471 .772549 rgb
f
471.864 212.49 mo
471.864 212.486 471.864 212.48 471.864 212.476 cv
471.864 212.476 li
471.864 212.47 471.864 212.467 471.864 212.461 cv
471.864 212.461 li
471.864 212.46 471.864 212.461 471.864 212.46 cv
471.864 212.47 471.864 212.48 471.864 212.49 cv
.509804 .0784314 .262745 rgb
f
471.864 212.424 mo
471.863 212.411 471.863 212.4 471.863 212.387 cv
471.863 212.387 li
471.863 212.387 li
471.863 212.387 li
471.863 212.387 li
471.863 212.4 471.863 212.411 471.864 212.424 cv
471.864 212.424 li
471.863 212.352 mo
471.862 212.184 471.862 212.017 471.865 211.849 cv
471.864 211.916 471.863 211.983 471.863 212.05 cv
471.863 212.052 471.863 212.054 471.863 212.056 cv
471.863 212.071 471.863 212.083 471.863 212.097 cv
471.863 212.104 471.862 212.11 471.862 212.117 cv
471.862 212.13 471.862 212.14 471.862 212.153 cv
471.862 212.16 471.862 212.168 471.862 212.175 cv
471.862 212.184 471.862 212.194 471.862 212.203 cv
471.862 212.214 471.862 212.226 471.862 212.237 cv
471.862 212.244 471.862 212.253 471.862 212.26 cv
471.862 212.261 471.862 212.261 471.862 212.262 cv
471.862 212.263 471.863 212.264 471.863 212.265 cv
471.863 212.271 471.863 212.277 471.863 212.282 cv
471.863 212.288 471.863 212.294 471.863 212.3 cv
471.863 212.303 471.863 212.306 471.863 212.309 cv
471.863 212.313 471.863 212.319 471.863 212.323 cv
471.863 212.329 471.863 212.335 471.863 212.341 cv
471.863 212.341 li
471.863 212.343 471.863 212.345 471.863 212.348 cv
471.863 212.349 471.863 212.351 471.863 212.352 cv
471.865 211.836 mo
471.865 211.834 471.865 211.832 471.865 211.83 cv
471.865 211.833 471.865 211.833 471.865 211.836 cv
.839216 .933333 .929412 rgb
f
471.864 212.424 mo
471.863 212.411 471.863 212.4 471.863 212.387 cv
471.863 212.387 li
471.863 212.399 471.863 212.411 471.864 212.424 cv
471.863 212.387 mo
471.863 212.387 li
471.863 212.375 471.863 212.364 471.863 212.352 cv
471.863 212.351 471.863 212.349 471.863 212.348 cv
471.863 212.36 471.863 212.374 471.863 212.387 cv
471.863 212.387 li
471.863 212.341 mo
471.863 212.341 li
471.863 212.341 li
471.863 212.341 li
471.863 212.323 mo
471.863 212.319 471.863 212.313 471.863 212.309 cv
471.863 212.311 471.863 212.312 471.863 212.315 cv
471.863 212.317 471.863 212.32 471.863 212.323 cv
471.863 212.3 mo
471.863 212.294 471.863 212.288 471.863 212.282 cv
471.863 212.286 471.863 212.291 471.863 212.295 cv
471.863 212.296 471.863 212.298 471.863 212.3 cv
471.862 212.26 mo
471.862 212.253 471.862 212.244 471.862 212.237 cv
471.862 212.245 471.862 212.252 471.862 212.26 cv
471.862 212.203 mo
471.862 212.194 471.862 212.184 471.862 212.175 cv
471.862 212.177 471.862 212.178 471.862 212.18 cv
471.862 212.183 471.862 212.188 471.862 212.191 cv
471.862 212.195 471.862 212.199 471.862 212.203 cv
471.862 212.153 mo
471.862 212.14 471.862 212.13 471.862 212.117 cv
471.862 212.123 471.862 212.129 471.862 212.135 cv
471.862 212.139 471.862 212.143 471.862 212.147 cv
471.862 212.149 471.862 212.151 471.862 212.153 cv
471.863 212.097 mo
471.863 212.083 471.863 212.071 471.863 212.056 cv
471.863 212.058 471.863 212.059 471.863 212.06 cv
471.863 212.066 471.863 212.071 471.863 212.077 cv
471.863 212.084 471.863 212.09 471.863 212.097 cv
471.863 212.05 mo
471.863 211.983 471.864 211.916 471.865 211.849 cv
471.865 211.845 471.865 211.841 471.865 211.836 cv
471.865 211.833 471.865 211.833 471.865 211.83 cv
471.865 211.827 471.865 211.824 471.865 211.82 cv
471.864 211.877 471.864 211.935 471.863 211.991 cv
471.863 211.996 471.863 212 471.863 212.005 cv
471.863 212.016 471.863 212.027 471.863 212.038 cv
471.863 212.042 471.863 212.046 471.863 212.05 cv
471.865 211.811 mo
471.865 211.802 471.865 211.793 471.866 211.784 cv
471.865 211.793 471.865 211.802 471.865 211.811 cv
.505882 .776471 .772549 rgb
f
471.864 212.438 mo
471.864 212.433 471.864 212.428 471.864 212.424 cv
471.864 212.424 li
471.863 212.411 471.863 212.399 471.863 212.387 cv
471.863 212.404 471.863 212.421 471.864 212.438 cv
471.863 212.387 mo
471.863 212.374 471.863 212.36 471.863 212.348 cv
471.863 212.345 471.863 212.343 471.863 212.341 cv
471.863 212.341 li
471.863 212.356 471.863 212.371 471.863 212.387 cv
471.863 212.315 mo
471.863 212.312 471.863 212.311 471.863 212.309 cv
471.863 212.306 471.863 212.303 471.863 212.3 cv
471.863 212.298 471.863 212.296 471.863 212.295 cv
471.863 212.302 471.863 212.308 471.863 212.315 cv
471.863 212.265 mo
471.863 212.264 471.862 212.263 471.862 212.262 cv
471.862 212.263 471.862 212.264 471.863 212.265 cv
471.862 212.191 mo
471.862 212.188 471.862 212.183 471.862 212.18 cv
471.862 212.184 471.862 212.187 471.862 212.191 cv
471.862 212.147 mo
471.862 212.143 471.862 212.139 471.862 212.135 cv
471.862 212.139 471.862 212.143 471.862 212.147 cv
471.863 212.077 mo
471.863 212.071 471.863 212.066 471.863 212.06 cv
471.863 212.066 471.863 212.071 471.863 212.077 cv
471.863 212.038 mo
471.863 212.027 471.863 212.016 471.863 212.005 cv
471.863 212.016 471.863 212.027 471.863 212.038 cv
471.863 211.991 mo
471.864 211.935 471.864 211.877 471.865 211.82 cv
471.865 211.817 471.865 211.814 471.865 211.811 cv
471.865 211.802 471.865 211.793 471.866 211.784 cv
471.868 211.651 471.871 211.519 471.875 211.386 cv
471.869 211.588 471.865 211.79 471.863 211.991 cv
471.875 211.384 mo
471.876 211.367 471.877 211.349 471.877 211.332 cv
471.877 211.349 471.876 211.367 471.875 211.384 cv
471.877 211.322 mo
471.878 211.309 471.878 211.296 471.879 211.283 cv
471.878 211.296 471.878 211.309 471.877 211.322 cv
471.88 211.241 mo
471.881 211.239 471.881 211.238 471.881 211.236 cv
471.881 211.238 471.881 211.239 471.88 211.241 cv
472.172 208.292 mo
472.263 207.719 472.373 207.149 472.503 206.582 cv
472.504 206.584 472.504 206.584 472.504 206.585 cv
472.374 207.151 472.263 207.72 472.172 208.292 cv
.509804 .0784314 .262745 rgb
f
476.745 227.31 mo
476.514 226.984 476.289 226.657 476.069 226.324 cv
473.535 222.208 472.069 217.795 471.883 213.191 cv
471.883 213.19 471.883 213.191 471.883 213.191 cv
471.883 213.19 li
471.882 213.172 471.881 213.154 471.881 213.137 cv
471.88 213.135 471.88 213.133 471.88 213.131 cv
471.88 213.131 471.88 213.131 471.88 213.13 cv
471.88 213.129 471.88 213.126 471.88 213.124 cv
471.88 213.123 471.88 213.123 471.88 213.122 cv
471.88 213.121 471.88 213.119 471.88 213.118 cv
471.879 213.107 471.879 213.095 471.879 213.084 cv
471.879 213.082 471.878 213.08 471.878 213.079 cv
471.878 213.078 471.878 213.078 471.878 213.077 cv
471.878 213.068 471.878 213.061 471.877 213.053 cv
471.877 213.052 471.877 213.051 471.877 213.05 cv
471.877 213.047 471.877 213.044 471.877 213.041 cv
471.877 213.035 471.877 213.029 471.876 213.023 cv
471.876 213.023 471.876 213.022 471.876 213.022 cv
471.876 213.006 471.875 212.992 471.875 212.976 cv
471.875 212.975 471.875 212.973 471.875 212.971 cv
471.875 212.969 471.875 212.967 471.875 212.964 cv
471.875 212.964 471.875 212.963 471.875 212.963 cv
471.87 212.807 471.866 212.652 471.864 212.496 cv
471.864 212.496 li
471.864 212.494 471.864 212.492 471.864 212.49 cv
471.864 212.48 471.864 212.47 471.864 212.46 cv
471.864 212.459 471.864 212.458 471.864 212.456 cv
471.864 212.456 li
471.864 212.45 471.864 212.443 471.864 212.438 cv
471.863 212.421 471.863 212.404 471.863 212.387 cv
471.863 212.387 li
471.863 212.387 li
471.863 212.387 li
471.863 212.387 li
471.863 212.371 471.863 212.356 471.863 212.341 cv
471.863 212.341 li
471.863 212.335 471.863 212.329 471.863 212.323 cv
471.863 212.32 471.863 212.317 471.863 212.315 cv
471.863 212.308 471.863 212.302 471.863 212.295 cv
471.863 212.291 471.863 212.286 471.863 212.282 cv
471.863 212.277 471.863 212.271 471.863 212.265 cv
471.862 212.264 471.862 212.263 471.862 212.262 cv
471.862 212.261 471.862 212.261 471.862 212.26 cv
471.862 212.252 471.862 212.245 471.862 212.237 cv
471.862 212.226 471.862 212.214 471.862 212.203 cv
471.862 212.199 471.862 212.195 471.862 212.191 cv
471.862 212.187 471.862 212.184 471.862 212.18 cv
471.862 212.178 471.862 212.177 471.862 212.175 cv
471.862 212.168 471.862 212.16 471.862 212.153 cv
471.862 212.151 471.862 212.149 471.862 212.147 cv
471.862 212.143 471.862 212.139 471.862 212.135 cv
471.862 212.129 471.862 212.123 471.862 212.117 cv
471.862 212.11 471.863 212.104 471.863 212.097 cv
471.863 212.09 471.863 212.084 471.863 212.077 cv
471.863 212.071 471.863 212.066 471.863 212.06 cv
471.863 212.059 471.863 212.058 471.863 212.056 cv
471.863 212.054 471.863 212.052 471.863 212.05 cv
471.863 212.046 471.863 212.042 471.863 212.038 cv
471.863 212.027 471.863 212.016 471.863 212.005 cv
471.863 212 471.863 211.996 471.863 211.991 cv
471.865 211.79 471.869 211.588 471.875 211.386 cv
471.875 211.386 471.875 211.385 471.875 211.384 cv
471.876 211.367 471.877 211.349 471.877 211.332 cv
471.877 211.329 471.877 211.325 471.877 211.322 cv
471.878 211.309 471.878 211.296 471.879 211.283 cv
471.879 211.269 471.88 211.255 471.88 211.241 cv
471.881 211.239 471.881 211.238 471.881 211.236 cv
471.919 210.246 472.017 209.265 472.172 208.292 cv
472.263 207.72 472.374 207.151 472.504 206.585 cv
473.883 209.28 475.716 211.862 477.951 214.299 cv
477.953 214.424 477.954 214.549 477.955 214.673 cv
477.992 219.242 477.552 223.546 476.745 227.31 cv
.309804 .164706 .262745 rgb
f
602.895 238.333 mo
563.659 266.809 493.178 256.497 475.862 226.009 cv
484.842 239.881 503.423 247.654 519.658 251.002 cv
546.623 256.502 579.681 253.529 602.895 238.333 cv
.109804 .239216 .231373 rgb
f
640.439 208.754 mo
640.498 215.955 630.059 224.098 610.706 229.874 cv
592.819 215.369 599.805 198.706 608.619 189.24 cv
628.387 194.733 640.381 201.485 640.439 208.754 cv
cp
.411765 .117647 .403922 rgb
f
638.478 214.366 mo
634.621 219.937 625.146 225.564 610.706 229.874 cv
594.206 216.493 598.871 201.276 606.612 191.567 cv
604.505 201.571 606.743 216.096 638.478 214.366 cv
cp
.333333 .12549 .407843 rgb
f
608.619 189.24 mo
609.814 189.573 610.98 189.91 612.119 190.251 cv
603.973 199.637 598.184 215.104 613.971 228.848 cv
612.911 229.197 611.825 229.54 610.706 229.874 cv
592.819 215.369 599.805 198.706 608.619 189.24 cv
cp
.254902 .168627 .337255 rgb
f
641.656 203.981 mo
640.434 208.73 li
640.434 208.73 642.291 208.671 644.287 207.478 cv
645.731 206.613 647.104 204.081 645.489 202.767 cv
644.17 201.693 642.063 202.402 641.656 203.981 cv
cp
.392157 .52549 .529412 rgb
f
641.649 214.497 mo
640.439 209.749 li
640.439 209.749 642.298 209.807 644.289 211 cv
645.731 211.864 647.098 214.397 645.479 215.711 cv
644.156 216.785 642.051 216.077 641.649 214.497 cv
cp
f
638.343 209.35 mo
638.353 210.508 639.23 211.441 640.302 211.432 cv
641.375 211.423 642.236 210.477 642.228 209.319 cv
642.218 208.161 641.341 207.229 640.269 207.237 cv
639.196 207.246 638.334 208.192 638.343 209.35 cv
cp
.431373 .580392 .584314 rgb
f
634.824 205.998 mo
639.275 208.056 li
639.275 208.056 639.552 206.218 638.737 204.041 cv
638.147 202.464 635.904 200.658 634.32 202.009 cv
633.027 203.113 633.344 205.313 634.824 205.998 cv
cp
f
636.655 214.604 mo
638.953 210.273 li
638.953 210.273 637.134 209.896 634.914 210.59 cv
633.308 211.092 631.381 213.234 632.645 214.889 cv
633.676 216.241 635.89 216.045 636.655 214.604 cv
cp
f
599.474 230.192 mo
594.981 233.431 li
593.915 234.199 593.235 235.344 593.04 236.644 cv
592.688 238.981 593.984 242.146 603.866 242.407 cv
619.675 242.824 632.689 235.494 629.784 233.557 cv
627.164 231.812 621.728 227.601 607.894 227.494 cv
604.873 227.471 601.924 228.426 599.474 230.192 cv
cp
.607843 .0862745 .282353 rgb
f
594.969 233.439 mo
595.162 233.3 li
607.388 238.796 621.534 236.665 630.168 234.403 cv
629.706 237.052 617.892 242.777 603.866 242.407 cv
593.589 242.135 592.505 238.723 593.004 236.368 cv
593.256 235.18 593.985 234.149 594.969 233.439 cv
cp
.403922 .164706 .25098 rgb
f
595.957 203.287 mo
595.957 203.287 622.712 201.202 625.879 207.717 cv
628.803 213.731 603.561 216.597 599.623 216.563 cv
599.623 216.563 595.448 216.949 591.924 215.622 cv
588.45 214.314 584.729 204.624 595.957 203.287 cv
cp
.8 .113725 .376471 rgb
f
521.74 246.58 mo
521.74 246.58 517.127 250.986 513.938 250.986 cv
523.354 255.147 li
526.988 255.147 li
521.74 246.58 li
.611765 .788235 .709804 rgb
f
575.987 246.141 mo
565.122 269.415 li
531.837 269.684 li
521.74 246.58 li
525.424 246.55 li
525.424 246.55 525.932 250.918 540.516 253.242 cv
555.099 255.564 570.778 246.184 570.778 246.184 cv
575.987 246.141 li
.517647 .670588 .6 rgb
f
570.778 246.184 mo
570.778 246.184 555.099 255.564 540.516 253.242 cv
525.932 250.918 525.424 246.55 525.424 246.55 cv
521.74 246.58 li
522.824 249.061 li
529.356 251.971 548.451 260.787 560.221 269.455 cv
565.122 269.415 li
575.987 246.141 li
570.778 246.184 li
.439216 .568627 .509804 rgb
f
536.633 258.695 mo
536.633 260.691 535.016 262.308 533.02 262.308 cv
531.023 262.308 529.406 260.691 529.406 258.695 cv
529.406 256.7 531.023 255.082 533.02 255.082 cv
535.016 255.082 536.633 256.7 536.633 258.695 cv
.109804 .239216 .231373 rgb
f
535.442 258.695 mo
535.442 260.034 534.357 261.119 533.02 261.119 cv
531.681 261.119 530.596 260.034 530.596 258.695 cv
530.596 257.357 531.681 256.272 533.02 256.272 cv
534.357 256.272 535.442 257.357 535.442 258.695 cv
.427451 .482353 .619608 rgb
f
530.596 258.714 mo
530.596 258.714 530.596 258.713 530.596 258.713 cv
530.596 258.713 530.596 258.714 530.596 258.714 cv
533.036 256.272 mo
533.036 256.272 533.036 256.272 533.035 256.272 cv
533.036 256.272 533.036 256.272 533.036 256.272 cv
.321569 .447059 .498039 rgb
f
531.829 259.994 mo
531.489 259.994 531.166 259.922 530.872 259.796 cv
530.705 259.47 530.599 259.105 530.596 258.714 cv
530.596 258.714 530.596 258.713 530.596 258.713 cv
530.596 258.707 530.596 258.701 530.596 258.695 cv
530.596 258.695 li
530.596 257.357 531.681 256.272 533.02 256.272 cv
533.025 256.272 533.03 256.272 533.035 256.272 cv
533.036 256.272 533.036 256.272 533.036 256.272 cv
533.37 256.274 533.687 256.345 533.977 256.469 cv
534.147 256.801 534.253 257.172 534.253 257.571 cv
534.253 258.909 533.168 259.994 531.829 259.994 cv
.564706 .623529 .752941 rgb
f
548.863 258.695 mo
548.863 260.691 547.246 262.308 545.25 262.308 cv
543.255 262.308 541.637 260.691 541.637 258.695 cv
541.637 256.7 543.255 255.082 545.25 255.082 cv
547.246 255.082 548.863 256.7 548.863 258.695 cv
.109804 .239216 .231373 rgb
f
547.674 258.695 mo
547.674 260.034 546.588 261.119 545.25 261.119 cv
543.912 261.119 542.827 260.034 542.827 258.695 cv
542.827 257.357 543.912 256.272 545.25 256.272 cv
546.588 256.272 547.674 257.357 547.674 258.695 cv
.427451 .482353 .619608 rgb
f
542.827 258.714 mo
542.827 258.714 542.827 258.713 542.827 258.713 cv
542.827 258.713 542.827 258.714 542.827 258.714 cv
545.267 256.272 mo
545.266 256.272 545.266 256.272 545.266 256.272 cv
545.266 256.272 545.266 256.272 545.267 256.272 cv
.321569 .447059 .498039 rgb
f
544.06 259.994 mo
543.72 259.994 543.396 259.922 543.103 259.796 cv
542.935 259.47 542.83 259.105 542.827 258.714 cv
542.827 258.714 542.827 258.713 542.827 258.713 cv
542.827 258.707 542.827 258.701 542.827 258.695 cv
542.827 258.695 li
542.827 257.357 543.912 256.272 545.25 256.272 cv
545.255 256.272 545.26 256.272 545.266 256.272 cv
545.266 256.272 545.266 256.272 545.267 256.272 cv
545.601 256.274 545.918 256.345 546.207 256.469 cv
546.378 256.801 546.483 257.172 546.483 257.571 cv
546.483 258.909 545.398 259.994 544.06 259.994 cv
.564706 .623529 .752941 rgb
f
561.129 258.695 mo
561.129 260.691 559.511 262.308 557.516 262.308 cv
555.52 262.308 553.902 260.691 553.902 258.695 cv
553.902 256.7 555.52 255.082 557.516 255.082 cv
559.511 255.082 561.129 256.7 561.129 258.695 cv
.109804 .239216 .231373 rgb
f
559.939 258.695 mo
559.939 260.034 558.853 261.119 557.516 261.119 cv
556.177 261.119 555.092 260.034 555.092 258.695 cv
555.092 257.357 556.177 256.272 557.516 256.272 cv
558.853 256.272 559.939 257.357 559.939 258.695 cv
.427451 .482353 .619608 rgb
f
555.092 258.714 mo
555.092 258.714 555.092 258.713 555.092 258.713 cv
555.092 258.713 555.092 258.714 555.092 258.714 cv
557.532 256.272 mo
557.532 256.272 557.532 256.272 557.532 256.272 cv
557.532 256.272 557.532 256.272 557.532 256.272 cv
.321569 .447059 .498039 rgb
f
556.325 259.994 mo
555.984 259.994 555.662 259.922 555.368 259.796 cv
555.2 259.47 555.095 259.105 555.092 258.714 cv
555.092 258.714 555.092 258.713 555.092 258.713 cv
555.092 258.707 555.092 258.701 555.092 258.695 cv
555.092 258.695 li
555.092 257.357 556.177 256.272 557.516 256.272 cv
557.521 256.272 557.526 256.272 557.532 256.272 cv
557.532 256.272 557.532 256.272 557.532 256.272 cv
557.866 256.274 558.183 256.345 558.473 256.469 cv
558.643 256.801 558.748 257.172 558.748 257.571 cv
558.748 258.909 557.663 259.994 556.325 259.994 cv
.564706 .623529 .752941 rgb
f
514.538 252.917 mo
521.74 250.864 li
527.855 265.059 li
521.131 264.439 li
514.538 252.917 li
.109804 .239216 .231373 rgb
f
515.91 253.645 mo
521.43 263.696 li
526.121 263.696 li
521.131 252.029 li
515.91 253.645 li
.427451 .482353 .619608 rgb
f
521.81 263.696 mo
521.43 263.696 li
515.91 253.645 li
521.131 252.029 li
521.54 252.986 li
521.828 255.863 522.141 260.281 521.81 263.696 cv
.564706 .623529 .752941 rgb
f
593.272 210.594 mo
593.354 211.75 599.81 212.241 607.693 211.691 cv
615.577 211.142 621.902 209.76 621.822 208.604 cv
621.742 207.449 615.285 206.958 607.402 207.507 cv
599.518 208.056 593.192 209.438 593.272 210.594 cv
cp
.85098 .231373 .462745 rgb
f
578.929 181.538 mo
569.229 179.365 558.303 178.147 546.737 178.147 cv
546.291 178.147 545.847 178.149 545.399 178.152 cv
535.281 178.234 525.647 179.24 516.881 180.99 cv
522.511 175.013 534.029 170.859 547.356 170.751 cv
547.534 170.75 547.709 170.749 547.887 170.749 cv
561.758 170.749 573.671 175.166 578.929 181.538 cv
.694118 .886274 .882353 rgb
f
580.812 193.271 mo
570.91 191.834 559.642 191.026 547.667 191.026 cv
546.947 191.026 546.228 191.029 545.503 191.035 cv
534.237 191.126 523.568 191.921 514.026 193.268 cv
513.5 192.008 513.217 190.697 513.206 189.35 cv
513.182 186.35 514.509 183.508 516.881 180.99 cv
525.647 179.24 535.281 178.234 545.399 178.152 cv
545.847 178.149 546.291 178.147 546.737 178.147 cv
558.303 178.147 569.229 179.365 578.929 181.538 cv
580.758 183.755 581.782 186.209 581.803 188.796 cv
581.815 190.337 581.471 191.836 580.812 193.271 cv
.85098 .419608 .345098 rgb
f
528.686 204.503 mo
521.366 201.973 515.994 197.974 514.026 193.268 cv
523.568 191.921 534.237 191.126 545.503 191.035 cv
546.228 191.029 546.947 191.026 547.667 191.026 cv
559.642 191.026 570.91 191.834 580.812 193.271 cv
578.714 197.838 573.426 201.757 566.28 204.301 cv
561.515 204.196 556.552 204.141 551.442 204.141 cv
549.517 204.141 547.573 204.149 545.609 204.165 cv
539.785 204.212 534.121 204.327 528.686 204.503 cv
.694118 .886274 .882353 rgb
f
547.124 207.397 mo
540.322 207.397 533.992 206.336 528.686 204.503 cv
534.121 204.327 539.785 204.212 545.609 204.165 cv
547.573 204.149 549.517 204.141 551.442 204.141 cv
556.552 204.141 561.515 204.196 566.28 204.301 cv
560.927 206.206 554.53 207.339 547.652 207.395 cv
547.475 207.396 547.3 207.397 547.124 207.397 cv
.807843 .427451 .415686 rgb
f
575.987 246.141 mo
565.122 269.415 li
531.837 269.684 li
563.908 268.404 li
575.987 246.141 li
cp
.109804 .239216 .231373 rgb
f
308.228 178.053 mo
316.758 178.958 423.458 210.731 431.586 215.754 cv
431.533 215.098 431.404 214.269 431.404 214.269 cv
430.852 213.529 429.453 212.495 428.301 211.733 cv
425.551 209.915 313.643 172.783 304.811 171.846 cv
298.12 171.137 283.227 188.274 287.736 196.827 cv
290.049 189.875 302.801 177.477 308.228 178.053 cv
cp
.858824 .45098 .00392157 rgb
f
371.19 258.14 mo
371.696 261.297 369.546 264.265 366.39 264.771 cv
363.232 265.276 360.264 263.126 359.759 259.969 cv
359.254 256.813 361.403 253.844 364.561 253.339 cv
367.717 252.833 370.686 254.984 371.19 258.14 cv
cp
.152941 .192157 .254902 rgb
f
407.135 211.37 mo
402.484 242.677 li
404.217 243.301 li
409.256 211.031 li
409.256 211.031 407.436 209.347 407.135 211.37 cv
cp
.345098 .0352941 .298039 rgb
f
380.834 233.995 mo
380.834 233.995 413.512 239.517 415.214 242.689 cv
416.916 245.862 403.604 251.086 398.004 251.26 cv
393.666 251.395 336.704 243.871 336.704 243.871 cv
380.834 233.995 li
cp
.858824 .45098 .00392157 rgb
f
380.18 234.667 mo
380.18 234.667 412.857 240.189 414.56 243.362 cv
416.262 246.534 402.95 251.759 397.35 251.933 cv
393.013 252.067 336.049 244.544 336.049 244.544 cv
380.18 234.667 li
cp
.54902 .172549 .109804 rgb
f
365.168 260.759 mo
360.782 244.913 li
362.884 244.331 li
365.748 254.68 li
374.502 237.031 li
376.455 238 li
365.168 260.759 li
cp
.345098 .0352941 .298039 rgb
f
256.881 248.066 mo
256.495 245.657 244.946 227.219 248.034 225.281 cv
251.122 223.342 264.722 231.083 269.298 233.665 cv
273.874 236.246 274.589 239.382 274.589 239.382 cv
256.881 248.066 li
.996078 .662745 0 rgb
f
325.661 216.086 mo
325.661 216.086 335.411 217.287 340.57 216.079 cv
345.729 214.871 345.052 215.307 347.399 214.443 cv
349.746 213.579 358.652 211.344 358.652 211.344 cv
356.377 222.47 li
333.143 224.213 li
326.146 221.51 li
325.661 216.086 li
cp
.372549 .141176 .231373 rgb
f
289.39 198.213 mo
289.39 198.213 348.651 213.108 352.989 213.012 cv
355.15 212.964 370.019 215.97 385.391 218.976 cv
400.865 222.003 416.848 225.029 420.888 224.939 cv
428.939 224.761 432.353 217.514 431.443 214.345 cv
430.534 211.177 315.943 177.149 307.111 176.212 cv
299.792 175.436 281.241 194.03 289.39 198.213 cv
.729412 .219608 .105882 rgb
f
352.517 212.976 mo
356.853 212.879 412.361 225.022 420.416 225.022 cv
423.163 225.022 425.127 224.298 426.711 223.284 cv
411.121 214.685 382.428 200.438 360.31 198.018 cv
340.871 195.891 320.932 199.566 308.182 202.875 cv
325.897 207.222 349.82 213.035 352.517 212.976 cv
.678431 .184314 .101961 rgb
f
256.952 245.433 mo
256.952 245.433 250.416 251.31 281.504 254.455 cv
312.593 257.599 393.907 239.058 393.907 239.058 cv
390.943 202.751 li
359.697 207.92 li
359.697 207.92 350.738 219.889 337.935 220.579 cv
325.131 221.269 325.661 216.086 325.661 216.086 cv
325.661 216.086 262.252 227.593 256.952 245.433 cv
.996078 .662745 0 rgb
f
393.907 239.058 mo
392.245 218.697 li
388.104 221.728 381.368 225.561 370.806 229 cv
352.021 235.116 281.925 237.024 263.401 237.426 cv
260.109 239.922 257.794 242.597 256.952 245.433 cv
256.952 245.433 250.416 251.31 281.504 254.455 cv
312.593 257.599 393.907 239.058 393.907 239.058 cv
1 .341176 .145098 rgb
f
279.817 250.208 mo
266.616 248.902 260.056 247.125 256.893 245.492 cv
256.317 246.11 252.228 251.494 281.504 254.455 cv
312.593 257.599 393.907 239.058 393.907 239.058 cv
393.58 235.059 li
383.582 237.245 309.422 253.137 279.817 250.208 cv
cp
.827451 .258824 .12549 rgb
f
365.026 258.36 mo
349.776 260.293 li
349.978 262.464 li
365.229 260.188 li
365.026 258.36 li
cp
.345098 .0352941 .298039 rgb
f
401.467 220.138 mo
402.311 230.159 398.968 238.622 393.999 239.041 cv
389.031 239.459 384.318 231.674 383.475 221.653 cv
382.632 211.632 385.975 203.168 390.943 202.75 cv
395.911 202.332 400.623 210.117 401.467 220.138 cv
cp
1 .866667 .341176 rgb
f
399.98 220.448 mo
400.604 227.855 398.332 234.093 394.906 234.381 cv
391.48 234.669 388.197 228.899 387.574 221.493 cv
386.95 214.086 389.222 207.849 392.648 207.56 cv
396.074 207.271 399.357 213.042 399.98 220.448 cv
cp
.517647 .14902 .32549 rgb
f
327.938 194.665 mo
320.89 227.742 li
323.021 228.321 li
330.432 194.996 li
330.701 193.938 328.338 193.247 327.938 194.665 cv
cp
.345098 .0352941 .298039 rgb
f
311.947 190.129 mo
304.811 223.503 li
306.943 224.083 li
314.354 190.758 li
314.636 188.958 312.165 188.995 311.947 190.129 cv
cp
f
394.735 220.155 mo
394.735 220.155 379.52 239.342 381.521 243.425 cv
383.672 247.808 388.323 245.421 389.925 239.942 cv
391.229 235.483 395.307 220.726 395.307 220.726 cv
394.735 220.155 li
cp
1 .992157 .45098 rgb
f
395.451 218.73 mo
395.451 218.73 399.331 200.219 403.341 198.727 cv
407.35 197.236 409.62 200.271 408.457 203.091 cv
407.294 205.911 396.386 219.508 396.386 219.508 cv
395.451 218.73 li
cp
f
274.589 239.382 mo
274.589 239.382 256.83 237.509 244.305 238.876 cv
231.78 240.244 256.404 247.046 256.404 247.046 cv
275.325 243.98 li
274.589 239.382 li
cp
.823529 .235294 .168627 rgb
f
244.305 238.876 mo
240.653 239.275 240.188 240.095 241.213 241.081 cv
242.644 240.742 245.205 240.574 250.105 240.879 cv
262.72 241.664 275.325 243.98 275.325 243.98 cv
274.589 239.382 li
274.589 239.382 256.83 237.509 244.305 238.876 cv
cp
1 .52549 .180392 rgb
f
286.18 232.175 mo
286.18 232.175 302.034 233.719 311.09 234.564 cv
318.795 235.283 360.188 234.35 360.188 234.35 cv
360.391 231.295 li
360.391 231.295 315.024 216.63 305.515 215.896 cv
299.398 215.425 290.431 219.246 286.649 224.083 cv
284.552 226.766 284.935 230.646 286.18 232.175 cv
cp
.858824 .45098 .00392157 rgb
f
286.18 232.175 mo
286.18 232.175 302.688 238.027 311.744 238.872 cv
320.8 239.716 360.188 234.35 360.188 234.35 cv
360.188 234.35 315.024 221.704 305.515 220.971 cv
296.005 220.237 282.69 227.891 286.18 232.175 cv
cp
.54902 .172549 .109804 rgb
f
365.634 225.697 mo
362.059 225.697 359.221 224.378 358.549 222.091 cv
357.597 218.851 361.35 214.896 366.932 213.255 cv
368.572 212.773 370.188 212.544 371.677 212.544 cv
375.253 212.544 378.091 213.863 378.764 216.15 cv
379.715 219.39 375.962 223.346 370.379 224.986 cv
368.738 225.468 367.122 225.697 365.634 225.697 cv
.996078 .752941 .129412 rgb
f
407.14 224.579 mo
409.256 211.031 li
409.256 210.147 407.599 209.794 407.263 210.638 cv
405.271 223.923 li
405.914 223.87 406.62 224.112 407.14 224.579 cv
cp
.345098 .0352941 .298039 rgb
f
269.806 237.273 mo
268.32 237.186 267.416 236.827 267.694 236.074 cv
268.688 233.391 281.323 230.035 281.323 230.035 cv
281.323 230.035 284.515 232.681 282.632 234.564 cv
281.556 235.64 276.508 236.856 272.563 237.199 cv
271.603 237.226 270.683 237.25 269.806 237.273 cv
.996078 .752941 .129412 rgb
f
270.585 237.294 mo
270.312 237.294 270.051 237.287 269.806 237.273 cv
270.683 237.25 271.603 237.226 272.563 237.199 cv
271.859 237.261 271.19 237.294 270.585 237.294 cv
1 .517647 .254902 rgb
f
356.978 244.239 mo
356.34 245.504 355.641 246.909 354.86 248.494 cv
352.678 252.928 350.55 257.385 349.261 260.106 cv
342.582 246.662 li
342.24 246.383 340.387 246.838 340.443 247.289 cv
345.527 257.512 348.114 262.537 348.017 262.745 cv
349.004 263.208 li
353.743 254.244 357.053 248.149 359.352 244.009 cv
359.352 243.714 357.176 243.898 356.978 244.239 cv
cp
.345098 .0352941 .298039 rgb
f
356.433 263.495 mo
357.113 267.75 354.217 271.75 349.962 272.431 cv
345.707 273.112 341.706 270.214 341.024 265.96 cv
340.344 261.706 343.241 257.705 347.496 257.023 cv
351.75 256.342 355.752 259.24 356.433 263.495 cv
cp
.152941 .192157 .254902 rgb
f
352.998 264.044 mo
353.375 266.402 351.77 268.619 349.412 268.996 cv
347.054 269.374 344.837 267.768 344.46 265.411 cv
344.083 263.053 345.688 260.835 348.046 260.458 cv
350.403 260.082 352.62 261.687 352.998 264.044 cv
cp
.32549 .407843 .541176 rgb
f
367.971 259.111 mo
367.971 260.617 366.652 261.836 365.026 261.836 cv
363.4 261.836 362.082 260.617 362.082 259.111 cv
362.082 257.606 363.4 256.385 365.026 256.385 cv
366.652 256.385 367.971 257.606 367.971 259.111 cv
cp
.345098 .0352941 .298039 rgb
f
397.677 221.184 mo
397.45 223.046 396.205 224.427 394.896 224.268 cv
393.587 224.109 392.709 222.47 392.937 220.607 cv
393.162 218.744 394.407 217.363 395.717 217.522 cv
397.025 217.682 397.903 219.321 397.677 221.184 cv
cp
1 .301961 .145098 rgb
f
395.511 217.729 mo
395.008 217.729 394.508 217.981 394.082 218.453 cv
393.586 219.002 393.256 219.777 393.152 220.634 cv
393.048 221.49 393.184 222.321 393.532 222.974 cv
393.868 223.601 394.361 223.983 394.923 224.052 cv
395.485 224.12 396.055 223.866 396.53 223.338 cv
397.025 222.789 397.356 222.014 397.46 221.157 cv
397.564 220.301 397.43 219.47 397.08 218.817 cv
396.744 218.19 396.251 217.807 395.69 217.739 cv
395.511 217.729 li
cp
395.104 224.499 mo
394.87 224.484 li
394.164 224.399 393.553 223.936 393.147 223.179 cv
392.757 222.449 392.604 221.526 392.72 220.581 cv
392.834 219.636 393.203 218.776 393.758 218.161 cv
394.332 217.524 395.036 217.217 395.743 217.306 cv
396.448 217.392 397.06 217.855 397.465 218.611 cv
397.855 219.342 398.008 220.265 397.893 221.21 cv
397.778 222.155 397.409 223.015 396.854 223.63 cv
396.345 224.196 395.73 224.499 395.104 224.499 cv
cp
.807843 .141176 .0352941 rgb
f
173.914 312.759 mo
170.192 342.758 li
183.087 341.345 li
177.87 313.25 li
173.914 312.759 li
.317647 .329412 .368627 rgb
f
221.949 414.123 mo
206.999 412.267 li
205.411 403.027 li
203.891 403.288 li
205.4 412.069 li
162.817 406.786 li
165.916 399.473 li
164.496 398.872 li
161.227 406.588 li
155.663 405.898 li
155.473 407.428 li
221.76 415.653 li
221.949 414.123 li
cp
.65098 .184314 .0313726 rgb
f
194.786 338.78 mo
169.104 332.283 147.916 345.276 135.478 356.144 cv
119.926 355.82 93.4311 355.305 76.1928 355.178 cv
65.579 331.57 li
64.3359 328.805 60.3878 328.834 59.1997 331.623 cv
58.2373 333.883 57.8092 336.37 57.9942 338.885 cv
58.2236 342.014 58.5469 345.823 58.9429 349.846 cv
59.3041 353.511 60.5762 357.03 62.6343 360.085 cv
64.4263 362.744 67.2012 364.581 70.3492 365.193 cv
122.632 375.351 li
122.668 375.368 li
123.125 378.438 124.637 382.509 128.494 387.459 cv
137.734 399.317 206.886 413.923 218.161 398.585 cv
229.437 383.248 236.328 349.291 194.786 338.78 cv
.419608 .564706 .870588 rgb
f
212.09 402.755 mo
170.738 391.677 150.283 366.515 141.373 351.39 cv
139.235 352.975 137.266 354.582 135.478 356.144 cv
133.282 356.098 130.861 356.048 128.285 355.997 cv
120.183 374.875 li
122.632 375.351 li
122.668 375.368 li
123.125 378.438 124.637 382.509 128.494 387.459 cv
136.664 397.944 191.665 410.573 212.09 402.755 cv
cp
.415686 .458824 .960784 rgb
f
135.478 356.144 mo
124.366 355.913 107.667 355.583 92.749 355.369 cv
82.6367 355.222 73.5225 349.238 69.3755 340.014 cv
65.5791 331.57 li
64.3311 328.794 60.3789 328.845 59.1899 331.646 cv
57.3667 335.943 57.8706 338.956 58.9429 349.846 cv
59.6143 356.661 63.3423 363.832 70.3491 365.193 cv
122.517 375.329 li
127.713 362.143 135.798 355.864 135.478 356.144 cv
cp
.929412 .25098 .0705882 rgb
f
135.475 356.144 mo
135.478 356.144 li
135.475 356.144 li
cp
.823529 .168627 .176471 rgb
f
135.475 356.144 mo
134.01 356.114 132.446 356.082 130.804 356.047 cv
118.889 363.382 97.5112 368.727 60.4932 356.195 cv
62.2866 360.599 65.5479 364.26 70.3491 365.193 cv
122.517 375.329 li
127.515 362.646 135.182 356.357 135.475 356.144 cv
cp
f
168.729 417.593 mo
177.021 400.136 li
176.563 399.515 174.528 400.046 173.967 400.577 cv
166.091 417.158 li
166.113 417.167 li
132.928 411.764 li
150.429 395.016 li
150.173 394.234 147.909 394.233 147.164 394.583 cv
129.751 411.247 li
119.987 409.657 li
119.574 412.194 li
188.695 423.448 li
189.108 420.912 li
168.729 417.593 li
cp
.85098 .305882 .12549 rgb
f
217.401 350.263 mo
206.283 350.275 178.138 351.553 171.374 363.899 cv
169.382 367.534 167.986 370.93 167.015 373.999 cv
164.189 382.931 169.397 392.415 178.43 394.905 cv
188.737 397.746 203.645 400.627 217.878 398.931 cv
217.973 398.816 218.074 398.704 218.161 398.585 cv
226.645 387.045 232.643 364.966 217.401 350.263 cv
cp
.145098 .639216 .580392 rgb
f
218.161 398.585 mo
218.716 397.831 219.26 397.03 219.788 396.191 cv
206.084 391.923 188.423 385.142 183.087 377.29 cv
177.263 368.72 187.561 358.304 195.735 351.911 cv
185.406 353.625 175.116 357.067 171.374 363.899 cv
169.387 367.525 167.993 370.914 167.022 373.976 cv
164.189 382.917 169.389 392.413 178.43 394.905 cv
188.737 397.746 203.645 400.627 217.878 398.931 cv
217.973 398.816 218.074 398.704 218.161 398.585 cv
cp
.145098 .486275 .603922 rgb
f
217.401 350.263 mo
198.807 350.872 176.702 352.167 169.427 369.252 cv
164.3 381.226 168.81 393.458 186.397 396.749 cv
187.962 397.043 206.546 399.895 217.878 398.931 cv
208.978 400.278 193.264 399.087 186.192 397.933 cv
168.013 394.997 162.334 381.809 168.043 368.66 cv
175.688 351.043 198.095 349.663 217.401 350.263 cv
cp
.0862745 .34902 .278431 rgb
f
175.09 312.748 mo
106.044 311.753 li
105.905 311.751 105.759 311.756 105.618 311.769 cv
103.351 311.971 101.678 313.973 101.88 316.239 cv
102.083 318.506 104.084 320.179 106.351 319.977 cv
175.13 313.831 li
175.402 313.805 175.62 313.578 175.624 313.297 cv
175.628 312.999 175.389 312.752 175.09 312.748 cv
cp
.490196 .345098 .490196 rgb
f
175.158 312.748 mo
244.188 310.959 li
244.327 310.957 244.473 310.959 244.615 310.971 cv
246.883 311.147 248.579 313.129 248.403 315.399 cv
248.226 317.667 246.244 319.363 243.975 319.187 cv
175.13 313.831 li
174.857 313.808 174.638 313.583 174.63 313.303 cv
174.623 313.004 174.859 312.755 175.158 312.748 cv
cp
f
175.706 311.287 mo
174.667 311.287 173.822 312.076 173.713 313.085 cv
177.699 313.085 li
177.59 312.076 176.745 311.287 175.706 311.287 cv
cp
1 .666667 .129412 rgb
f
gsave
169.913 354.535 mo
168.215 354.535 166.755 353.93 165.939 352.721 cv
164.321 350.323 165.86 346.456 169.376 344.084 cv
171.653 342.548 177.613 341.353 181.97 341.353 cv
184.34 341.353 186.235 341.706 186.805 342.551 cv
188.423 344.951 178.751 350.398 175.235 352.77 cv
173.491 353.947 171.586 354.535 169.913 354.535 cv
clp
164.321 341.353 mo
188.423 341.353 li
188.423 354.535 li
164.321 354.535 li
cp
.47451 .619608 .890196 rgb
f
grestore
64.2397 352.744 mo
64.5615 354.933 62.9873 356.977 60.7231 357.311 cv
58.459 357.644 56.3618 356.139 56.04 353.951 cv
55.7178 351.761 57.292 349.716 59.5562 349.383 cv
61.8203 349.05 63.9175 350.554 64.2397 352.744 cv
cp
.505882 .141176 .0745098 rgb
f
73.6284 369.426 mo
75.1016 371.838 74.998 374.584 73.3984 375.562 cv
71.7988 376.539 69.3081 375.375 67.8354 372.964 cv
66.3628 370.552 60.5454 354.727 60.5454 354.727 cv
60.5454 354.727 72.1558 367.015 73.6284 369.426 cv
cp
f
73.6284 369.426 mo
75.1016 371.838 74.998 374.584 73.3984 375.562 cv
71.7988 376.539 69.3081 375.375 67.8354 372.964 cv
66.3628 370.552 60.5454 354.727 60.5454 354.727 cv
60.5454 354.727 72.1558 367.015 73.6284 369.426 cv
cp
.490196 .345098 .490196 rgb
f
45.1636 336.523 mo
43.6909 334.111 43.7939 331.365 45.3936 330.387 cv
46.9932 329.411 49.4839 330.574 50.9565 332.985 cv
52.4297 335.397 58.2471 351.222 58.2471 351.222 cv
58.2471 351.222 46.6362 338.934 45.1636 336.523 cv
cp
f
77.043 339.984 mo
79.5693 338.718 82.2983 339.05 83.1382 340.726 cv
83.978 342.401 82.6113 344.787 80.085 346.053 cv
77.5591 347.319 61.3032 351.794 61.3032 351.794 cv
61.3032 351.794 74.5171 341.25 77.043 339.984 cv
cp
f
41.8779 365.603 mo
39.3521 366.87 36.6235 366.538 35.7832 364.862 cv
34.9434 363.186 36.3105 360.8 38.8364 359.535 cv
41.3623 358.268 57.6182 353.792 57.6182 353.792 cv
57.6182 353.792 44.4043 364.336 41.8779 365.603 cv
cp
f
59.5273 349.39 mo
57.2793 349.737 55.7188 351.771 56.04 353.95 cv
56.3149 355.821 57.8892 357.181 59.7529 357.333 cv
62.0015 356.986 63.5615 354.952 63.2407 352.772 cv
62.9653 350.902 61.3916 349.542 59.5273 349.39 cv
cp
1 .666667 .129412 rgb
f
61.2104 353.19 mo
61.3926 354.427 60.502 355.584 59.2217 355.773 cv
57.9404 355.961 56.7544 355.11 56.5723 353.873 cv
56.3896 352.633 57.2803 351.477 58.5615 351.289 cv
59.8423 351.1 61.0283 351.951 61.2104 353.19 cv
cp
.807843 .337255 .219608 rgb
f
152.019 388.252 mo
148.902 388.252 146.366 385.716 146.366 382.599 cv
146.366 363.711 li
146.366 360.593 148.902 358.057 152.019 358.057 cv
155.103 358.057 li
158.22 358.057 160.756 360.593 160.756 363.711 cv
160.756 382.599 li
160.756 385.716 158.22 388.252 155.103 388.252 cv
152.019 388.252 li
cp
.419608 .564706 .870588 rgb
f
160.243 382.599 mo
160.243 385.433 157.937 387.739 155.103 387.739 cv
152.019 387.739 li
149.185 387.739 146.88 385.433 146.88 382.599 cv
146.88 363.711 li
146.88 360.876 149.185 358.572 152.019 358.572 cv
155.103 358.572 li
157.937 358.572 160.243 360.876 160.243 363.711 cv
160.243 382.599 li
cp
155.103 357.543 mo
152.019 357.543 li
148.627 357.543 145.852 360.319 145.852 363.711 cv
145.852 382.599 li
145.852 385.991 148.627 388.766 152.019 388.766 cv
155.103 388.766 li
158.495 388.766 161.271 385.991 161.271 382.599 cv
161.271 363.711 li
161.271 360.319 158.495 357.543 155.103 357.543 cv
cp
.192157 .407843 .352941 rgb
f
86.2515 73.8399 mo
86.2515 73.8399 82.0596 70.4151 72.5752 71.1178 cv
72.5752 85.0786 li
72.5752 85.0786 88.4228 84.1821 86.2515 73.8399 cv
.203922 .168627 .431373 rgb
f
86.2515 73.8398 mo
86.2515 73.8398 82.0596 70.415 72.5752 71.1177 cv
72.5752 73.4023 li
75.4219 74.2441 80.3862 75.8403 82.0298 77.1763 cv
83.1201 78.063 83.7632 79.5723 84.1396 80.9365 cv
85.8867 79.2949 86.9175 77.0122 86.2515 73.8398 cv
cp
.184314 .152941 .388235 rgb
f
72.5752 71.1178 mo
72.5752 85.0786 li
72.5752 85.0786 75.1153 84.934 78.0225 84.0987 cv
78.8212 82.544 79.315 80.4082 79.315 78.0509 cv
79.315 75.2075 78.5973 72.687 77.4911 71.1197 cv
76.0449 71.0014 74.4101 70.9819 72.5752 71.1178 cv
.592157 .12549 .160784 rgb
f
72.5752 84.8974 mo
70.206 84.8974 68.2779 81.8477 68.2779 78.0982 cv
68.2779 74.3491 70.206 71.2988 72.5752 71.2988 cv
74.9448 71.2988 76.8726 74.3491 76.8726 78.0982 cv
76.8726 81.8477 74.9448 84.8974 72.5752 84.8974 cv
.301961 .176471 .431373 rgb
f
74.0288 72.5889 mo
74.0112 71.96 73.3462 71.4614 72.5435 71.4756 cv
71.7402 71.4897 71.104 72.0107 71.1221 72.6392 cv
71.1396 73.2681 71.5703 77.5986 72.373 77.5845 cv
73.1758 77.5708 74.0469 73.2178 74.0288 72.5889 cv
cp
.611765 .623529 .807843 rgb
f
75.7992 76.9868 mo
76.1269 76.7182 76.9204 76.0581 76.3926 75.1367 cv
76.0644 74.5629 75.7076 73.9775 74.6236 75.1435 cv
74.3442 75.4438 71.9296 77.6983 72.5098 78.1332 cv
73.0899 78.5678 75.4717 77.2553 75.7992 76.9868 cv
f
69.2764 77.0068 mo
68.9609 76.749 68.2402 76.8296 68.6699 75.2041 cv
68.8335 74.5854 69.2861 74.0571 70.3369 75.1816 cv
70.6079 75.4712 72.9399 77.6411 72.4048 78.0762 cv
71.8691 78.5117 69.5923 77.2642 69.2764 77.0068 cv
cp
f
74.2168 83.4536 mo
74.2168 84.0825 73.5658 84.5928 72.7627 84.5928 cv
71.9599 84.5928 71.3086 84.0825 71.3086 83.4536 cv
71.3086 82.8247 71.9599 78.3344 72.7627 78.3344 cv
73.5658 78.3344 74.2168 82.8247 74.2168 83.4536 cv
f
69.4824 79.6597 mo
69.211 79.9648 68.5556 80.7118 69.2569 81.5591 cv
69.6934 82.0869 70.1601 82.623 71.0039 81.3408 cv
71.2217 81.0103 73.168 78.4937 72.5098 78.1332 cv
71.8515 77.7729 69.7539 79.3555 69.4824 79.6597 cv
f
75.5537 78.7261 mo
76.4599 79.1841 77.3277 79.2134 76.5796 80.5659 cv
76.2769 81.1138 76.0971 81.642 74.8477 80.6616 cv
74.5254 80.4087 71.8135 78.5552 72.2612 78.058 cv
72.7089 77.5611 75.1787 78.5361 75.5537 78.7261 cv
f
73.7319 78.0982 mo
73.7319 78.998 73.1446 79.7281 72.4199 79.7281 cv
71.6953 79.7281 71.1085 78.998 71.1085 78.0982 cv
71.1085 77.1978 71.6953 76.4683 72.4199 76.4683 cv
73.1446 76.4683 73.7319 77.1978 73.7319 78.0982 cv
.505882 .141176 .0745098 rgb
f
72.4106 76.4692 mo
71.6904 76.4756 71.1084 77.2021 71.1084 78.0981 cv
71.1084 78.8672 71.5386 79.5083 72.1152 79.6797 cv
72.8354 79.6729 73.418 78.9468 73.418 78.0508 cv
73.418 77.2813 72.9873 76.6406 72.4106 76.4692 cv
cp
.807843 .141176 .0352941 rgb
f
72.7627 78.0981 mo
72.7627 78.6074 72.4307 79.02 72.0205 79.02 cv
71.6108 79.02 71.2783 78.6074 71.2783 78.0981 cv
71.2783 77.5889 71.6108 77.1763 72.0205 77.1763 cv
72.4307 77.1763 72.7627 77.5889 72.7627 78.0981 cv
cp
.807843 .337255 .219608 rgb
f
72.8149 84.1929 mo
72.233 84.1929 71.7612 83.6376 71.7612 82.9526 cv
71.7612 82.6581 71.8386 82.5741 71.9731 82.5741 cv
72.1516 82.5741 72.4306 82.7222 72.7627 82.7222 cv
73.0947 82.7222 73.4077 82.5741 73.6155 82.5741 cv
73.7719 82.5741 73.8686 82.6581 73.8686 82.9526 cv
73.8686 83.6376 73.3965 84.1929 72.8149 84.1929 cv
.737255 .74902 .890196 rgb
f
69.7574 81.2871 mo
69.7262 81.2871 69.6902 81.2794 69.6479 81.2626 cv
69.3731 81.1538 69.249 80.8159 69.3712 80.5087 cv
69.4673 80.2663 69.6874 80.1151 69.9109 80.1151 cv
69.9709 80.1151 70.0311 80.126 70.0893 80.149 cv
70.3642 80.2583 70.1792 80.4849 70.057 80.7919 cv
69.9543 81.0523 69.9293 81.2871 69.7574 81.2871 cv
f
76.1187 80.6265 mo
75.9228 80.6265 75.8178 80.0444 75.3124 79.6797 cv
74.8067 79.3145 73.8872 78.8321 74.2792 78.6812 cv
74.2792 78.6812 74.806 78.8845 75.3207 79.124 cv
75.6076 79.6157 75.9007 80.1051 76.199 80.5919 cv
76.1745 80.6141 76.1476 80.6265 76.1187 80.6265 cv
f
72.5752 84.7168 mo
70.3057 84.7168 68.459 81.7476 68.459 78.0981 cv
68.459 74.4487 70.3057 71.4795 72.5752 71.4795 cv
74.8452 71.4795 76.6919 74.4487 76.6919 78.0981 cv
76.6919 81.7476 74.8452 84.7168 72.5752 84.7168 cv
cp
72.5752 71.1177 mo
70.1021 71.1177 68.0967 74.2427 68.0967 78.0981 cv
68.0967 81.9531 70.1021 85.0786 72.5752 85.0786 cv
75.0488 85.0786 77.0537 81.9531 77.0537 78.0981 cv
77.0537 74.2427 75.0488 71.1177 72.5752 71.1177 cv
cp
.521569 .686275 .686275 rgb
f
96.1382 87.4429 mo
96.1382 87.4429 91.9463 84.0186 82.4619 84.7211 cv
82.4619 98.6821 li
82.4619 98.6821 98.3096 97.7856 96.1382 87.4429 cv
.203922 .168627 .431373 rgb
f
96.1382 87.4429 mo
96.1382 87.4429 91.9463 84.0186 82.4619 84.7211 cv
82.4619 87.0059 li
85.3085 87.8477 90.273 89.4438 91.916 90.7793 cv
93.0069 91.666 93.6498 93.1758 94.0259 94.54 cv
95.7733 92.8979 96.8043 90.6158 96.1382 87.4429 cv
.184314 .152941 .388235 rgb
f
82.4619 84.7211 mo
82.4619 98.6821 li
82.4619 98.6821 85.0024 98.5375 87.9092 97.7017 cv
88.7079 96.1475 89.2016 94.0117 89.2016 91.6539 cv
89.2016 88.811 88.4838 86.2905 87.3779 84.7232 cv
85.9316 84.6049 84.2969 84.5849 82.4619 84.7211 cv
.592157 .12549 .160784 rgb
f
82.4619 98.5009 mo
80.0927 98.5009 78.1646 95.4507 78.1646 91.7017 cv
78.1646 87.9521 80.0927 84.9018 82.4619 84.9018 cv
84.8315 84.9018 86.7593 87.9521 86.7593 91.7017 cv
86.7593 95.4507 84.8315 98.5009 82.4619 98.5009 cv
.301961 .176471 .431373 rgb
f
83.916 86.1924 mo
83.8979 85.5635 83.2329 85.0649 82.4302 85.0791 cv
81.627 85.0928 80.9907 85.6138 81.0083 86.2427 cv
81.0264 86.8716 81.4565 91.2017 82.2598 91.188 cv
83.0625 91.1738 83.9336 86.8213 83.916 86.1924 cv
cp
.611765 .623529 .807843 rgb
f
85.686 90.5898 mo
86.0137 90.3218 86.8071 89.6616 86.2798 88.7402 cv
85.9507 88.166 85.5942 87.5811 84.5103 88.7466 cv
84.231 89.0474 81.8164 91.3018 82.3965 91.7363 cv
82.9766 92.1714 85.3584 90.8584 85.686 90.5898 cv
cp
f
79.1631 90.6099 mo
78.8472 90.3521 78.127 90.4331 78.5566 88.8071 cv
78.7202 88.189 79.1729 87.6606 80.2241 88.7852 cv
80.4946 89.0747 82.8271 91.2441 82.2915 91.6797 cv
81.7559 92.1152 79.4785 90.8677 79.1631 90.6099 cv
cp
f
84.1036 97.0571 mo
84.1036 97.6861 83.4522 98.1958 82.6494 98.1958 cv
81.8467 98.1958 81.1953 97.6861 81.1953 97.0571 cv
81.1953 96.4277 81.8467 91.9376 82.6494 91.9376 cv
83.4522 91.9376 84.1036 96.4277 84.1036 97.0571 cv
f
79.3692 93.2632 mo
79.0972 93.5678 78.4423 94.315 79.1435 95.1626 cv
79.5802 95.6905 80.0468 96.226 80.8911 94.9443 cv
81.1084 94.6138 83.0546 92.0967 82.3964 91.7364 cv
81.7382 91.3765 79.6406 92.959 79.3692 93.2632 cv
f
85.4405 92.329 mo
86.3466 92.7877 87.2144 92.8164 86.4663 94.1694 cv
86.1635 94.7174 85.9839 95.2455 84.7344 94.2647 cv
84.4125 94.0122 81.7002 92.1587 82.1479 91.661 cv
82.5956 91.1646 85.0655 92.1396 85.4405 92.329 cv
f
83.6187 91.7017 mo
83.6187 92.6015 83.0313 93.3316 82.3067 93.3316 cv
81.5821 93.3316 80.995 92.6015 80.995 91.7017 cv
80.995 90.8013 81.5821 90.0718 82.3067 90.0718 cv
83.0313 90.0718 83.6187 90.8013 83.6187 91.7017 cv
.505882 .141176 .0745098 rgb
f
82.2974 90.0728 mo
81.5771 90.0791 80.9951 90.8052 80.9951 91.7017 cv
80.9951 92.4707 81.4253 93.1113 82.002 93.2827 cv
82.7222 93.2764 83.3047 92.5503 83.3047 91.6538 cv
83.3047 90.8848 82.874 90.2441 82.2974 90.0728 cv
cp
.807843 .141176 .0352941 rgb
f
82.6494 91.7017 mo
82.6494 92.2104 82.3169 92.6235 81.9072 92.6235 cv
81.4976 92.6235 81.1655 92.2104 81.1655 91.7017 cv
81.1655 91.1924 81.4976 90.7793 81.9072 90.7793 cv
82.3169 90.7793 82.6494 91.1924 82.6494 91.7017 cv
cp
.807843 .337255 .219608 rgb
f
81.91 97.3745 mo
81.7469 97.156 81.648 96.8694 81.648 96.5556 cv
81.648 96.2615 81.7253 96.1775 81.8596 96.1775 cv
82.0381 96.1775 82.3173 96.3257 82.6494 96.3257 cv
82.9815 96.3257 83.2947 96.1775 83.5024 96.1775 cv
83.6588 96.1775 83.7554 96.2614 83.7554 96.5556 cv
83.7554 96.6027 83.7531 96.6491 83.7488 96.6948 cv
83.1872 96.8964 82.5711 97.1232 81.91 97.3745 cv
.737255 .74902 .890196 rgb
f
79.6444 94.8904 mo
79.6131 94.8904 79.577 94.8827 79.5346 94.8658 cv
79.2598 94.7573 79.1358 94.4195 79.2577 94.1117 cv
79.354 93.8698 79.5739 93.7184 79.7973 93.7184 cv
79.8574 93.7184 79.9177 93.7294 79.976 93.7525 cv
80.251 93.8613 80.0654 94.0879 79.9438 94.3955 cv
79.8411 94.6557 79.8161 94.8904 79.6444 94.8904 cv
f
86.0054 94.2295 mo
85.8095 94.2295 85.7045 93.6479 85.1992 93.2827 cv
84.6938 92.9175 83.7739 92.4351 84.166 92.2842 cv
84.166 92.2842 84.3615 92.3597 84.6308 92.473 cv
85.1768 93.1576 85.6571 93.7467 86.0482 94.2201 cv
86.0345 94.2262 86.0202 94.2295 86.0054 94.2295 cv
f
82.4619 98.3203 mo
80.1924 98.3203 78.3458 95.351 78.3458 91.7017 cv
78.3458 88.0522 80.1924 85.083 82.4619 85.083 cv
84.732 85.083 86.5786 88.0522 86.5786 91.7017 cv
86.5786 95.351 84.732 98.3203 82.4619 98.3203 cv
82.4619 84.7211 mo
79.9888 84.7211 77.9839 87.8461 77.9839 91.7017 cv
77.9839 95.5566 79.9888 98.6821 82.4619 98.6821 cv
84.9351 98.6821 86.9405 95.5566 86.9405 91.7017 cv
86.9405 87.8461 84.9351 84.7211 82.4619 84.7211 cv
.521569 .686275 .686275 rgb
f
165.669 138.395 mo
165.669 138.395 160.617 134.268 149.186 135.115 cv
149.186 151.94 li
149.186 151.94 168.286 150.86 165.669 138.395 cv
.203922 .168627 .431373 rgb
f
165.669 138.395 mo
165.669 138.395 160.617 134.268 149.186 135.115 cv
149.186 137.868 li
152.616 138.883 158.6 140.807 160.58 142.417 cv
161.895 143.485 162.669 145.304 163.123 146.948 cv
165.229 144.97 166.471 142.219 165.669 138.395 cv
cp
.184314 .152941 .388235 rgb
f
149.186 135.115 mo
149.186 151.94 li
149.186 151.94 152.248 151.766 155.751 150.759 cv
156.714 148.885 157.309 146.312 157.309 143.47 cv
157.309 140.043 156.444 137.006 155.111 135.117 cv
153.368 134.975 151.397 134.951 149.186 135.115 cv
.592157 .12549 .160784 rgb
f
149.186 151.722 mo
146.33 151.722 144.007 148.046 144.007 143.527 cv
144.007 139.009 146.33 135.333 149.186 135.333 cv
152.042 135.333 154.365 139.009 154.365 143.527 cv
154.365 148.046 152.042 151.722 149.186 151.722 cv
.301961 .176471 .431373 rgb
f
151.52 136.223 mo
149.188 137.019 147.434 140.305 147.434 144.23 cv
147.434 147.419 148.594 150.181 150.278 151.535 cv
152.611 150.739 154.365 147.453 154.365 143.527 cv
154.365 140.338 153.206 137.576 151.52 136.223 cv
.223529 .133333 .337255 rgb
f
150.938 136.888 mo
150.917 136.13 150.115 135.529 149.147 135.546 cv
148.18 135.563 147.413 136.191 147.434 136.949 cv
147.456 137.707 147.975 142.925 148.942 142.909 cv
149.91 142.892 150.959 137.646 150.938 136.888 cv
cp
.611765 .623529 .807843 rgb
f
153.072 142.188 mo
153.467 141.864 154.423 141.069 153.787 139.958 cv
153.391 139.267 152.961 138.562 151.654 139.966 cv
151.318 140.329 148.408 143.046 149.107 143.57 cv
149.807 144.094 152.676 142.511 153.072 142.188 cv
cp
f
145.21 142.212 mo
144.83 141.901 143.962 141.999 144.479 140.04 cv
144.676 139.294 145.222 138.657 146.489 140.013 cv
146.815 140.361 149.626 142.976 148.98 143.501 cv
148.335 144.026 145.591 142.522 145.21 142.212 cv
cp
f
151.164 149.982 mo
151.164 150.74 150.38 151.355 149.412 151.355 cv
148.444 151.355 147.66 150.74 147.66 149.982 cv
147.66 149.224 148.444 143.812 149.412 143.812 cv
150.38 143.812 151.164 149.224 151.164 149.982 cv
f
145.458 145.41 mo
145.131 145.777 144.342 146.677 145.187 147.699 cv
145.713 148.335 146.275 148.98 147.293 147.436 cv
147.555 147.038 149.9 144.004 149.107 143.57 cv
148.313 143.136 145.786 145.043 145.458 145.41 cv
f
152.775 144.284 mo
153.868 144.836 154.914 144.872 154.012 146.502 cv
153.647 147.162 153.431 147.798 151.924 146.617 cv
151.537 146.312 148.268 144.078 148.808 143.479 cv
149.347 142.88 152.324 144.056 152.775 144.284 cv
f
150.58 143.527 mo
150.58 144.612 149.872 145.492 148.999 145.492 cv
148.126 145.492 147.418 144.612 147.418 143.527 cv
147.418 142.442 148.126 141.563 148.999 141.563 cv
149.872 141.563 150.58 142.442 150.58 143.527 cv
.505882 .141176 .0745098 rgb
f
148.988 141.564 mo
148.12 141.572 147.418 142.447 147.418 143.527 cv
147.418 144.455 147.937 145.227 148.632 145.433 cv
149.5 145.425 150.201 144.55 150.201 143.47 cv
150.201 142.543 149.683 141.771 148.988 141.564 cv
cp
.807843 .141176 .0352941 rgb
f
149.412 143.527 mo
149.412 144.141 149.012 144.639 148.518 144.639 cv
148.023 144.639 147.623 144.141 147.623 143.527 cv
147.623 142.914 148.023 142.417 148.518 142.417 cv
149.012 142.417 149.412 142.914 149.412 143.527 cv
cp
.807843 .337255 .219608 rgb
f
149.475 150.873 mo
148.773 150.873 148.205 150.204 148.205 149.378 cv
148.205 149.023 148.298 148.922 148.46 148.922 cv
148.675 148.922 149.012 149.1 149.412 149.1 cv
149.812 149.1 150.189 148.922 150.44 148.922 cv
150.628 148.922 150.745 149.023 150.745 149.378 cv
150.745 150.204 150.176 150.873 149.475 150.873 cv
.737255 .74902 .890196 rgb
f
145.79 147.371 mo
145.753 147.371 145.709 147.361 145.658 147.341 cv
145.327 147.21 145.178 146.803 145.324 146.433 cv
145.44 146.141 145.705 145.958 145.975 145.958 cv
146.047 145.958 146.12 145.971 146.19 145.999 cv
146.521 146.13 146.298 146.404 146.151 146.774 cv
146.027 147.087 145.997 147.371 145.79 147.371 cv
f
153.457 146.574 mo
153.22 146.574 153.094 145.873 152.485 145.433 cv
151.876 144.993 150.767 144.412 151.24 144.23 cv
151.24 144.23 153.493 145.1 153.656 145.492 cv
153.82 145.884 153.693 146.574 153.457 146.574 cv
f
149.186 151.504 mo
146.451 151.504 144.225 147.926 144.225 143.527 cv
144.225 139.129 146.451 135.551 149.186 135.551 cv
151.922 135.551 154.147 139.129 154.147 143.527 cv
154.147 147.926 151.922 151.504 149.186 151.504 cv
cp
149.186 135.115 mo
146.205 135.115 143.789 138.881 143.789 143.527 cv
143.789 148.174 146.205 151.94 149.186 151.94 cv
152.167 151.94 154.583 148.174 154.583 143.527 cv
154.583 138.881 152.167 135.115 149.186 135.115 cv
cp
.521569 .686275 .686275 rgb
f
182.823 83.8062 mo
182.823 83.8062 175.686 69.7202 168.569 68.3813 cv
164.19 67.5571 163.197 86.5322 163.197 86.5322 cv
182.823 83.8062 li
cp
.411765 .486275 .894118 rgb
f
87.163 95.5454 mo
87.163 95.5454 64.1929 69.0864 72.0435 61.2358 cv
79.894 53.3853 136.302 83.9155 136.302 83.9155 cv
87.163 95.5454 li
.266667 .313726 .580392 rgb
f
132.42 81.8633 mo
120.649 75.7295 85.478 58.0697 74.4746 60.1148 cv
72.3281 70.081 91.0547 91.6539 91.0547 91.6539 cv
132.42 81.8633 li
.368627 .435294 .8 rgb
f
87.163 95.5454 mo
87.163 95.5454 55.3975 105.12 57.8691 118.495 cv
60.3403 131.87 111.514 138.854 140.736 127.37 cv
169.957 115.884 188.348 101.797 188.348 101.797 cv
188.348 101.797 197.071 76.5011 197.071 73.1572 cv
197.071 69.8135 194.018 65.4516 184.713 71.1216 cv
175.409 76.7914 166.25 85.3691 160.435 85.3691 cv
154.62 85.3691 111.151 73.3023 99.2296 74.7564 cv
87.3087 76.2105 87.163 95.5454 87.163 95.5454 cv
.592157 .611765 .941176 rgb
f
197.071 73.1572 mo
197.071 72.5235 196.96 71.8536 196.72 71.2222 cv
193.695 80.5669 187.602 93.3204 175.593 102.243 cv
156.778 116.222 110.038 130.059 78.7979 130.512 cv
96.9224 134.508 122.912 134.375 140.736 127.37 cv
169.957 115.884 188.348 101.797 188.348 101.797 cv
188.348 101.797 197.071 76.5011 197.071 73.1572 cv
.52549 .537255 .831373 rgb
f
144.61 127.156 mo
144.61 127.156 140.418 123.732 130.934 124.434 cv
130.934 138.395 li
130.934 138.395 146.781 137.499 144.61 127.156 cv
.203922 .168627 .431373 rgb
f
144.61 127.156 mo
144.61 127.156 140.418 123.732 130.934 124.434 cv
130.934 126.719 li
133.78 127.561 138.745 129.157 140.388 130.493 cv
141.479 131.379 142.121 132.889 142.498 134.253 cv
144.245 132.611 145.275 130.329 144.61 127.156 cv
cp
.184314 .152941 .388235 rgb
f
130.934 124.434 mo
130.934 138.395 li
130.934 138.395 133.474 138.251 136.38 137.415 cv
137.179 135.86 137.673 133.725 137.673 131.367 cv
137.673 128.524 136.956 126.004 135.85 124.436 cv
134.403 124.318 132.768 124.298 130.934 124.434 cv
.592157 .12549 .160784 rgb
f
130.934 138.214 mo
128.564 138.214 126.636 135.164 126.636 131.415 cv
126.636 127.666 128.564 124.615 130.934 124.615 cv
133.303 124.615 135.231 127.666 135.231 131.415 cv
135.231 135.164 133.303 138.214 130.934 138.214 cv
.301961 .176471 .431373 rgb
f
132.387 125.906 mo
132.37 125.277 131.704 124.778 130.901 124.792 cv
130.099 124.806 129.462 125.327 129.48 125.956 cv
129.498 126.585 129.928 130.916 130.731 130.901 cv
131.534 130.887 132.405 126.535 132.387 125.906 cv
cp
.611765 .623529 .807843 rgb
f
134.157 130.303 mo
134.485 130.035 135.278 129.375 134.751 128.454 cv
134.422 127.879 134.065 127.294 132.981 128.46 cv
132.702 128.76 130.288 131.015 130.868 131.45 cv
131.448 131.885 133.83 130.572 134.157 130.303 cv
cp
f
127.635 130.323 mo
127.319 130.065 126.599 130.146 127.028 128.521 cv
127.191 127.902 127.645 127.374 128.695 128.498 cv
128.966 128.788 131.298 130.958 130.763 131.393 cv
130.228 131.829 127.95 130.581 127.635 130.323 cv
cp
f
132.575 136.771 mo
132.575 137.399 131.924 137.909 131.121 137.909 cv
130.318 137.909 129.667 137.399 129.667 136.771 cv
129.667 136.141 130.318 131.651 131.121 131.651 cv
131.924 131.651 132.575 136.141 132.575 136.771 cv
f
127.841 132.976 mo
127.569 133.281 126.914 134.028 127.615 134.876 cv
128.052 135.404 128.519 135.939 129.362 134.657 cv
129.579 134.327 131.526 131.81 130.868 131.45 cv
130.209 131.089 128.112 132.672 127.841 132.976 cv
f
133.912 132.042 mo
134.818 132.501 135.686 132.53 134.938 133.883 cv
134.635 134.43 134.455 134.958 133.206 133.978 cv
132.884 133.726 130.172 131.872 130.62 131.374 cv
131.067 130.877 133.537 131.853 133.912 132.042 cv
f
132.09 131.415 mo
132.09 132.315 131.503 133.044 130.778 133.044 cv
130.054 133.044 129.466 132.315 129.466 131.415 cv
129.466 130.515 130.054 129.785 130.778 129.785 cv
131.503 129.785 132.09 130.515 132.09 131.415 cv
cp
.505882 .141176 .0745098 rgb
f
130.769 129.786 mo
130.049 129.792 129.466 130.519 129.466 131.415 cv
129.466 132.184 129.897 132.825 130.474 132.996 cv
131.193 132.99 131.776 132.264 131.776 131.367 cv
131.776 130.598 131.346 129.958 130.769 129.786 cv
cp
.807843 .141176 .0352941 rgb
f
131.121 131.415 mo
131.121 131.924 130.789 132.337 130.379 132.337 cv
129.969 132.337 129.637 131.924 129.637 131.415 cv
129.637 130.906 129.969 130.493 130.379 130.493 cv
130.789 130.493 131.121 130.906 131.121 131.415 cv
cp
.807843 .337255 .219608 rgb
f
gsave
131.173 137.51 mo
130.591 137.51 130.119 136.954 130.119 136.269 cv
130.119 135.975 130.197 135.891 130.331 135.891 cv
130.51 135.891 130.789 136.039 131.121 136.039 cv
131.453 136.039 131.766 135.891 131.974 135.891 cv
132.13 135.891 132.227 135.975 132.227 136.269 cv
132.227 136.954 131.755 137.51 131.173 137.51 cv
clp
130.119 135.891 mo
132.227 135.891 li
132.227 137.51 li
130.119 137.51 li
cp
.737255 .74902 .890196 rgb
f
grestore
128.116 134.604 mo
128.085 134.604 128.048 134.596 128.006 134.579 cv
127.731 134.47 127.607 134.133 127.73 133.825 cv
127.825 133.583 128.046 133.432 128.269 133.432 cv
128.329 133.432 128.39 133.443 128.448 133.466 cv
128.722 133.575 128.537 133.801 128.416 134.109 cv
128.312 134.369 128.288 134.604 128.116 134.604 cv
.737255 .74902 .890196 rgb
f
134.477 133.943 mo
134.281 133.943 134.176 133.361 133.671 132.996 cv
133.165 132.631 132.245 132.148 132.637 131.998 cv
132.637 131.998 134.507 132.719 134.643 133.044 cv
134.778 133.37 134.673 133.943 134.477 133.943 cv
f
130.934 138.033 mo
128.664 138.033 126.817 135.064 126.817 131.415 cv
126.817 127.765 128.664 124.796 130.934 124.796 cv
133.203 124.796 135.05 127.765 135.05 131.415 cv
135.05 135.064 133.203 138.033 130.934 138.033 cv
cp
130.934 124.434 mo
128.46 124.434 126.455 127.56 126.455 131.415 cv
126.455 135.27 128.46 138.395 130.934 138.395 cv
133.407 138.395 135.412 135.27 135.412 131.415 cv
135.412 127.56 133.407 124.434 130.934 124.434 cv
cp
.521569 .686275 .686275 rgb
f
61.0777 109.619 mo
60.457 110.289 59.9951 110.893 59.4722 111.683 cv
71.6855 123.476 117.576 130.068 144.874 119.757 cv
164.28 112.122 180.346 102.935 190.466 95.5454 cv
190.899 94.2495 191.372 92.8232 191.861 91.3341 cv
183.651 97.0391 164.386 108.009 143.475 116.09 cv
117.437 126.025 71.6661 119.794 61.0777 109.619 cv
.592157 .12549 .160784 rgb
f
143.475 116.09 mo
143.417 116.112 li
143.215 117.606 142.968 119.079 142.672 120.536 cv
143.418 120.287 144.154 120.029 144.874 119.757 cv
164.28 112.122 180.346 102.935 190.466 95.5454 cv
190.899 94.2495 191.372 92.8232 191.861 91.3341 cv
183.651 97.0391 164.386 108.009 143.475 116.09 cv
.470588 .0980392 .129412 rgb
f
104.463 82.6069 mo
98.5186 80.6049 95.7392 78.4262 94.5165 76.5664 cv
87.2109 81.7358 87.163 95.5454 87.163 95.5454 cv
92.106 103.396 108.098 106.74 115.949 105.722 cv
123.799 104.705 124.235 91.1841 122.636 87.5498 cv
121.037 83.9155 118.71 87.4044 104.463 82.6069 cv
.356863 .32549 .541176 rgb
f
112.38 105.896 mo
108.16 105.827 102.887 104.927 98.1432 103.185 cv
102.886 104.926 108.159 105.826 112.38 105.896 cv
114.157 105.873 mo
114.163 105.873 114.168 105.873 114.174 105.872 cv
114.174 105.872 114.174 105.872 114.174 105.872 cv
114.157 105.873 li
.627451 .643137 .94902 rgb
f
88.5559 86.204 mo
88.5564 86.2021 88.5569 86.2007 88.5574 86.1988 cv
88.557 86.2003 88.5564 86.2024 88.5559 86.204 cv
88.5637 86.1767 mo
88.5644 86.1742 88.5651 86.1717 88.5658 86.1693 cv
88.5653 86.1713 88.5643 86.1746 88.5637 86.1767 cv
88.5715 86.1495 mo
88.5725 86.1461 88.5735 86.1424 88.5745 86.139 cv
88.5735 86.1426 88.5725 86.1459 88.5715 86.1495 cv
88.5813 86.1154 mo
88.5815 86.1148 88.5817 86.1139 88.5819 86.1133 cv
88.5818 86.1138 88.5815 86.1149 88.5813 86.1154 cv
88.5898 86.0861 mo
88.591 86.0818 88.5923 86.0773 88.5936 86.0729 cv
88.5923 86.0776 88.5911 86.0814 88.5898 86.0861 cv
88.5977 86.0587 mo
88.5993 86.0534 88.6008 86.048 88.6024 86.0427 cv
88.6009 86.0479 88.5992 86.0535 88.5977 86.0587 cv
88.6053 86.0328 mo
88.6067 86.0278 88.6081 86.0231 88.6095 86.0182 cv
88.608 86.0233 88.6068 86.0276 88.6053 86.0328 cv
88.6146 86.001 mo
88.6156 85.9976 88.6164 85.9948 88.6174 85.9914 cv
88.6164 85.9945 88.6155 85.9979 88.6146 86.001 cv
88.6225 85.9739 mo
88.6235 85.9705 88.6246 85.9665 88.6256 85.9632 cv
88.6246 85.9668 88.6236 85.9703 88.6225 85.9739 cv
88.6296 85.9497 mo
88.6323 85.9407 88.6349 85.9317 88.6376 85.9227 cv
88.635 85.9315 88.6322 85.9409 88.6296 85.9497 cv
88.6413 85.91 mo
88.6427 85.9054 88.6441 85.9005 88.6455 85.8959 cv
88.6441 85.9005 88.6427 85.9054 88.6413 85.91 cv
88.6494 85.8828 mo
88.6508 85.8782 88.6521 85.8738 88.6534 85.8692 cv
88.652 85.8739 88.6508 85.8782 88.6494 85.8828 cv
88.6573 85.8561 mo
88.6589 85.8509 88.6607 85.8448 88.6623 85.8395 cv
88.6606 85.8452 88.659 85.8504 88.6573 85.8561 cv
88.6647 85.8313 mo
88.6664 85.8257 88.6681 85.82 88.6698 85.8145 cv
88.6681 85.8201 88.6664 85.8256 88.6647 85.8313 cv
88.6766 85.7918 mo
88.6777 85.7881 88.6789 85.784 88.68 85.7803 cv
88.6789 85.7839 88.6777 85.7882 88.6766 85.7918 cv
88.6864 85.7591 mo
88.6873 85.756 88.6881 85.7535 88.689 85.7504 cv
88.6883 85.753 88.6872 85.7565 88.6864 85.7591 cv
88.6937 85.7349 mo
88.6953 85.7296 88.6968 85.7247 88.6984 85.7195 cv
88.6968 85.7246 88.6953 85.7297 88.6937 85.7349 cv
88.7027 85.7054 mo
88.7038 85.7017 88.705 85.6977 88.7062 85.694 cv
88.7049 85.6981 88.7039 85.7013 88.7027 85.7054 cv
88.7124 85.6733 mo
88.713 85.6714 88.7138 85.6688 88.7144 85.667 cv
88.7137 85.669 88.7131 85.6712 88.7124 85.6733 cv
88.7231 85.6385 mo
88.7231 85.6383 li
88.7231 85.6385 li
88.7317 85.6105 mo
88.7323 85.6083 88.7329 85.6066 88.7335 85.6045 cv
88.733 85.606 88.7322 85.6089 88.7317 85.6105 cv
88.741 85.5802 mo
88.7412 85.5796 88.7416 85.5784 88.7418 85.5778 cv
88.7414 85.5788 88.7413 85.5792 88.741 85.5802 cv
88.7506 85.5493 mo
88.7506 85.5492 li
88.7506 85.5493 li
.423529 .478431 .827451 rgb
f
112.895 105.9 mo
112.726 105.9 112.553 105.899 112.38 105.896 cv
108.159 105.826 102.886 104.926 98.1432 103.185 cv
93.4578 101.463 89.2891 98.9202 87.1636 95.5454 cv
87.1636 95.5454 87.1796 91.0317 88.5559 86.204 cv
88.5564 86.2024 88.557 86.2003 88.5574 86.1988 cv
88.5595 86.1914 88.5616 86.1841 88.5637 86.1767 cv
88.5643 86.1746 88.5653 86.1713 88.5658 86.1693 cv
88.5677 86.1628 88.5696 86.156 88.5715 86.1495 cv
88.5725 86.1459 88.5735 86.1426 88.5745 86.139 cv
88.5768 86.131 88.579 86.1234 88.5813 86.1154 cv
88.5815 86.1149 88.5818 86.1138 88.5819 86.1133 cv
88.5846 86.104 88.5871 86.0953 88.5898 86.0861 cv
88.5911 86.0814 88.5923 86.0776 88.5936 86.0729 cv
88.5949 86.0683 88.5964 86.0633 88.5977 86.0587 cv
88.5992 86.0535 88.6009 86.0479 88.6024 86.0427 cv
88.6034 86.0393 88.6043 86.0362 88.6053 86.0328 cv
88.6068 86.0276 88.608 86.0233 88.6095 86.0182 cv
88.6112 86.0126 88.6129 86.0065 88.6146 86.001 cv
88.6155 85.9979 88.6164 85.9945 88.6174 85.9914 cv
88.6191 85.9855 88.6208 85.9798 88.6225 85.9739 cv
88.6236 85.9703 88.6246 85.9668 88.6256 85.9632 cv
88.627 85.9585 88.6283 85.9543 88.6296 85.9497 cv
88.6322 85.9409 88.635 85.9315 88.6376 85.9227 cv
88.6389 85.9184 88.64 85.9144 88.6413 85.91 cv
88.6427 85.9054 88.6441 85.9005 88.6455 85.8959 cv
88.6468 85.8915 88.6481 85.8871 88.6494 85.8828 cv
88.6508 85.8782 88.652 85.8739 88.6534 85.8692 cv
88.6547 85.8649 88.656 85.8604 88.6573 85.8561 cv
88.659 85.8504 88.6606 85.8452 88.6623 85.8395 cv
88.6631 85.8367 88.6639 85.8341 88.6647 85.8313 cv
88.6664 85.8256 88.6681 85.8201 88.6698 85.8145 cv
88.6721 85.8067 88.6742 85.7996 88.6766 85.7918 cv
88.6777 85.7882 88.6789 85.7839 88.68 85.7803 cv
88.6822 85.7732 88.6843 85.7663 88.6864 85.7591 cv
88.6872 85.7565 88.6883 85.753 88.689 85.7504 cv
88.6906 85.7454 88.6922 85.7398 88.6937 85.7349 cv
88.6953 85.7297 88.6968 85.7246 88.6984 85.7195 cv
88.6998 85.7148 88.7013 85.7101 88.7027 85.7054 cv
88.7039 85.7013 88.7049 85.6981 88.7062 85.694 cv
88.7083 85.6868 88.7103 85.6804 88.7124 85.6733 cv
88.7131 85.6712 88.7137 85.669 88.7144 85.667 cv
88.7173 85.6574 88.7201 85.6481 88.7231 85.6385 cv
88.7231 85.6383 li
88.726 85.629 88.7288 85.6198 88.7317 85.6105 cv
88.7322 85.6089 88.733 85.606 88.7335 85.6045 cv
88.736 85.5964 88.7385 85.5883 88.741 85.5802 cv
88.7413 85.5792 88.7414 85.5788 88.7418 85.5778 cv
88.7447 85.5682 88.7476 85.5589 88.7506 85.5493 cv
88.7506 85.5492 li
88.7537 85.5393 88.7567 85.5294 88.7598 85.5195 cv
90.8315 85.5982 93.1343 85.8633 94.8574 86.2818 cv
101.399 87.8824 109.324 98.1485 114.174 105.872 cv
114.168 105.873 114.163 105.873 114.157 105.873 cv
114.043 105.877 li
113.671 105.892 113.288 105.9 112.895 105.9 cv
.411765 .376471 .6 rgb
f
122.636 87.5498 mo
121.037 83.9155 118.71 87.4043 104.463 82.6069 cv
98.5186 80.605 95.7393 78.4263 94.5166 76.5664 cv
93.7988 77.0757 93.438 77.4409 93.438 77.4409 cv
94.6602 79.3003 97.5278 81.5962 103.473 83.5977 cv
117.72 88.3955 120.046 84.9063 121.645 88.5405 cv
122.874 91.332 122.896 99.9497 119.287 104.261 cv
123.884 100.452 123.968 90.5762 122.636 87.5498 cv
cp
.796078 .815686 .94902 rgb
f
140.736 94.6733 mo
140.736 97.1226 138.75 99.1074 136.302 99.1074 cv
133.853 99.1074 131.868 97.1226 131.868 94.6733 cv
131.868 92.2246 133.853 90.2393 136.302 90.2393 cv
138.75 90.2393 140.736 92.2246 140.736 94.6733 cv
cp
.317647 .329412 .592157 rgb
f
136.302 90.4575 mo
133.977 90.4575 132.085 92.3486 132.085 94.6733 cv
132.085 96.998 133.977 98.8896 136.302 98.8896 cv
138.626 98.8896 140.518 96.998 140.518 94.6733 cv
140.518 92.3486 138.626 90.4575 136.302 90.4575 cv
cp
136.302 99.3257 mo
133.736 99.3257 131.649 97.2388 131.649 94.6733 cv
131.649 92.1084 133.736 90.0215 136.302 90.0215 cv
138.867 90.0215 140.954 92.1084 140.954 94.6733 cv
140.954 97.2388 138.867 99.3257 136.302 99.3257 cv
cp
.796078 .815686 .94902 rgb
f
154.054 95.1772 mo
154.054 97.1787 152.432 98.8008 150.431 98.8008 cv
148.429 98.8008 146.807 97.1787 146.807 95.1772 cv
146.807 93.1763 148.429 91.5537 150.431 91.5537 cv
152.432 91.5537 154.054 93.1763 154.054 95.1772 cv
cp
.317647 .329412 .592157 rgb
f
150.431 91.772 mo
148.553 91.772 147.025 93.2993 147.025 95.1772 cv
147.025 97.0547 148.553 98.5825 150.431 98.5825 cv
152.308 98.5825 153.836 97.0547 153.836 95.1772 cv
153.836 93.2993 152.308 91.772 150.431 91.772 cv
cp
150.431 99.019 mo
148.313 99.019 146.589 97.2954 146.589 95.1772 cv
146.589 93.0591 148.313 91.3354 150.431 91.3354 cv
152.549 91.3354 154.272 93.0591 154.272 95.1772 cv
154.272 97.2954 152.549 99.019 150.431 99.019 cv
cp
.796078 .815686 .94902 rgb
f
164.36 94.3667 mo
164.36 95.8867 163.128 97.1187 161.608 97.1187 cv
160.088 97.1187 158.856 95.8867 158.856 94.3667 cv
158.856 92.8467 160.088 91.6147 161.608 91.6147 cv
163.128 91.6147 164.36 92.8467 164.36 94.3667 cv
cp
.317647 .329412 .592157 rgb
f
161.608 91.833 mo
160.211 91.833 159.074 92.9692 159.074 94.3667 cv
159.074 95.7642 160.211 96.9004 161.608 96.9004 cv
163.005 96.9004 164.142 95.7642 164.142 94.3667 cv
164.142 92.9692 163.005 91.833 161.608 91.833 cv
cp
161.608 97.3364 mo
159.971 97.3364 158.638 96.0044 158.638 94.3667 cv
158.638 92.729 159.971 91.397 161.608 91.397 cv
163.246 91.397 164.578 92.729 164.578 94.3667 cv
164.578 96.0044 163.246 97.3364 161.608 97.3364 cv
cp
.796078 .815686 .94902 rgb
f
171.922 92.9604 mo
171.922 94.1851 170.929 95.1772 169.705 95.1772 cv
168.48 95.1772 167.488 94.1851 167.488 92.9604 cv
167.488 91.7358 168.48 90.7432 169.705 90.7432 cv
170.929 90.7432 171.922 91.7358 171.922 92.9604 cv
cp
.317647 .329412 .592157 rgb
f
169.705 90.9614 mo
168.603 90.9614 167.706 91.8579 167.706 92.9604 cv
167.706 94.0625 168.603 94.959 169.705 94.959 cv
170.807 94.959 171.704 94.0625 171.704 92.9604 cv
171.704 91.8579 170.807 90.9614 169.705 90.9614 cv
cp
169.705 95.3955 mo
168.362 95.3955 167.27 94.3032 167.27 92.9604 cv
167.27 91.6177 168.362 90.5249 169.705 90.5249 cv
171.047 90.5249 172.14 91.6177 172.14 92.9604 cv
172.14 94.3032 171.047 95.3955 169.705 95.3955 cv
cp
.796078 .815686 .94902 rgb
f
172.429 96.3887 mo
172.429 96.3887 190.347 106.177 198.452 104.881 cv
206.557 103.585 192.138 91.1187 192.138 91.1187 cv
192.138 91.1187 168.94 88.647 172.429 96.3887 cv
cp
.572549 .623529 .894118 rgb
f
198.452 104.881 mo
201.968 104.319 201.244 101.654 199.299 98.8174 cv
199.97 100.108 200.43 102.033 197.943 102.931 cv
194.412 104.206 177.3 94.3667 173.896 92.3755 cv
172.31 93.2329 171.582 94.5088 172.429 96.3887 cv
172.429 96.3887 190.347 106.177 198.452 104.881 cv
cp
.305882 .356863 .658824 rgb
f
101.483 77.7456 mo
101.911 78.0195 110.424 82.498 121.873 84.2422 cv
133.321 85.9868 147.714 89.21 147.714 86.0962 cv
147.714 82.9819 96.7944 74.7378 101.483 77.7456 cv
cp
.733333 .752941 1 rgb
f
134.703 107.031 mo
134.703 107.031 121.909 108.194 120.6 112.41 cv
119.292 116.626 121.473 122.15 121.473 122.15 cv
121.473 122.15 164.033 149.406 187.294 147.371 cv
187.294 147.371 191.546 147.737 191.546 144.248 cv
191.546 136.107 155.056 107.612 155.056 107.612 cv
155.056 107.612 142.743 105.526 134.703 107.031 cv
.411765 .486275 .894118 rgb
f
178.647 138.395 mo
170.848 138.393 127.375 116.124 126.234 112.701 cv
125.035 109.102 135.066 108.775 135.066 108.775 cv
135.066 108.775 139.96 108.436 144.71 108.436 cv
147.084 108.436 149.423 108.521 151.094 108.775 cv
156.11 109.539 183.696 135.707 179.552 138.215 cv
179.35 138.337 179.046 138.395 178.647 138.395 cv
136.967 110.173 mo
134.111 110.173 132.021 110.873 133.215 112.701 cv
133.215 112.701 139.183 118.495 143.965 118.495 cv
144.976 118.495 145.935 118.236 146.772 117.607 cv
151.57 114.009 145.9 111.501 141.43 110.629 cv
139.957 110.342 138.369 110.173 136.967 110.173 cv
.478431 .545098 .894118 rgb
f
143.965 118.495 mo
139.183 118.495 133.215 112.701 133.215 112.701 cv
132.021 110.873 134.111 110.173 136.967 110.173 cv
138.369 110.173 139.957 110.342 141.43 110.629 cv
145.9 111.501 151.57 114.009 146.772 117.607 cv
145.935 118.236 144.976 118.495 143.965 118.495 cv
.584314 .631373 .937255 rgb
f
158.178 135.249 mo
152.688 132.663 147.265 129.931 141.826 127.237 cv
129.585 121.176 123.388 116.022 120.72 112.114 cv
120.676 112.211 120.632 112.309 120.601 112.41 cv
119.292 116.626 121.473 122.15 121.473 122.15 cv
121.473 122.15 163.641 148.931 187.342 148.491 cv
189.587 148.449 191.546 146.689 191.546 144.248 cv
191.546 143.175 190.908 141.747 189.808 140.079 cv
190.618 141.307 192.469 145.347 189.668 145.53 cv
184.051 145.897 166.078 138.971 158.178 135.249 cv
cp
.333333 .392157 .721569 rgb
f
187.342 148.491 mo
189.587 148.449 191.546 146.689 191.546 144.248 cv
191.546 143.206 190.939 141.825 189.896 140.218 cv
190.741 141.584 192.372 145.354 189.668 145.53 cv
184.636 145.859 169.69 140.335 160.952 136.505 cv
162.569 139.161 164.277 141.738 166.083 144.229 cv
173.708 146.863 181.154 148.605 187.342 148.491 cv
cp
.305882 .356863 .658824 rgb
f
189.896 140.218 mo
189.808 140.079 li
189.896 140.218 li
cp
.333333 .392157 .721569 rgb
f
83.7554 98.5513 mo
83.7554 98.5513 67.498 102.608 72.2114 107.321 cv
76.9253 112.035 105.273 110.172 105.273 110.172 cv
105.273 110.172 79.1675 103.139 83.7554 98.5513 cv
cp
.733333 .752941 1 rgb
f
187.839 71.4751 mo
187.839 71.4751 167.134 83.0776 168.649 84.5928 cv
170.164 86.1074 170.394 85.9009 174.428 85.1807 cv
178.462 84.4604 189.899 72.4487 187.839 71.4751 cv
cp
f
130.119 118.632 mo
130.119 118.978 129.839 119.258 129.494 119.258 cv
129.148 119.258 128.869 118.978 128.869 118.632 cv
128.869 118.287 129.148 118.007 129.494 118.007 cv
129.839 118.007 130.119 118.287 130.119 118.632 cv
cp
.317647 .329412 .592157 rgb
f
138.173 123.476 mo
138.173 123.797 137.913 124.059 137.591 124.059 cv
137.269 124.059 137.007 123.797 137.007 123.476 cv
137.007 123.153 137.269 122.893 137.591 122.893 cv
137.913 122.893 138.173 123.153 138.173 123.476 cv
cp
f
148.018 128.336 mo
148.018 128.606 147.799 128.825 147.528 128.825 cv
147.258 128.825 147.04 128.606 147.04 128.336 cv
147.04 128.066 147.258 127.847 147.528 127.847 cv
147.799 127.847 148.018 128.066 148.018 128.336 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Air transportation set.eps)
%%CreationDate: 5/2/2019 2:00 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6D6G;,E@(BcJH!I*!!;5tkdp=J;nEn)p?e`t"3WSJHgHH!5d["t\]5tbBTi(&If78H-R,Uk.9c;0rj$<'OLcsRhCCB;?;@$c
%a\Q6Us7XX^hL54c([qCUcQ>bP%mM$!GXr)=QKS,7O+-Y`s75TEDnl9'qp"f$O*0l+>I3:=Qg`gZqo.;C^\RI3n)(eVqWm>=T>1Eq
%p!4_OJ+NN[LL7^n[Je;7L]?Q)kF]NhVhZ(\^OGbbG0JDW[nf56p\EQ>hLG=[of!C159?&dr99,XhgPLWT76[VhnK'Yo7oLcjlKF4
%oe4(ge(L/ZGKRt(J,G"WIeEE(DsV*'U,^CnIecJeY4lC'rdO]&^O5qEG@,jkiUo.uhLG>crZKMaiVchb]`.C2?iMnm\pWDMGl,H]
%T>1Bf/RQ[\dURY!=Y&fXf`(Wi35?Su46MkN;a9ijcXs>@o9fJ"V.2[6ZDLp(Q,e?t39kmdDu]@`gOK(q_gct/qQmXQr5CgIpuYZH
%rjTRr<9nPfs8AR=q<d?`5Q'W0n%Q&^l'*d5\R3#Lm-WtZ`-I595(Cfn`a:e,htQo(f,oJ?p)=qWmm$gfYNt?^F'lo#cC_cKc!,SV
%j;7WuYMOa(([qACDmnRQo.53Gp4RUIrHMGD5,?:.27lm-qqC<4J%l%[LQf\g#!V@FgR%oG&+=uGm`V58Hg[McgjB\2d>)q<SRWf0
%+#!,NgL9RGG\flR4lJ'f^ReY8p?04UqErmcq<"0U?cH$t@!qsmAS<*F^\AQ3j40Kg4hq!uhreck^9BorV2_t1huDF1p"\K?fdXZ6
%arcRo:]L(#*UrJiSG:,hqG[@Ir:J<"s472>O$:5Vp8^FWo'bH8pd[PsqX"1<^4!6?qXF2Es7us25NSd@q02W*nb'Mtrnqu?s75R7
%febcdnDEU8rV+aoIkT@O2\,f"iQq.(s&\T;h>Yh$m)AsAru:VskBcg_5JI*orE$LXr:T%AQ_-G=ea!`QrBBuHkF]Ngo(@bCrklMA
%<rR^lS8?qjh>ZbaU2C3:qqi66E#mZJ5r`AnPqlnM_63\`n,C`&k-]Vjhs7^f'Ro`Kbr7b@qs6iJSNC*Ul1_a<J$WG<J$AbIfu'H\
%mJjO&^8?:'3^.E/6UA^NZle_PT6BuoV";CUoq(1aO(%5Nj3KsiQ9+R7LW?n(lg=.g'<f1HHW/sC^\mHaJ,T+76O3/dnRmdYpF"Cc
%I\.GNX5A<p\*lP2p[o?8YN5Fu*?)SEHG5$'rIl<iSolO[.pq2OjkV6=)NSV-L\,P7#+d\f%m4BF=Zbt^p5T#W,7Q-d_j>lHV-`eL
%Dnl;KLVJ*6rptX<bKf2h'mpra5N486dU3Kkj*Y]r?c&*:h9c0dSm_$bKAM%Iff69u^oSL9$30tlrU-:bJ,]8U?[m>!e_e,go><aW
%^+9Mo,a=3fXa]`4P>Z)DJ+hj8kC.n6L%U0Vjl<740u>T4Mq^TpN!3!Q*"&Tu^@G@blbNkgPk>fbMS=/Rs%hILX.G)JT=qSmm!Ddu
%Is.GkrR:(NhYd>iT=k'U&$J41Hi#l?*Xq>KHhXA)jq#6'p>%ZG[8a($CT1`hpaabW;(j0@8)YlnnT!Pa/gii$UO?k]k1,"[g!BYC
%e$;*Kq!u#:++8D4ffQNGJ,\rd(S?1m+86k+@qS"*DC0FRGk'IJJ+PZarfNVk/$2\9DqIU'[ZZ"_Q^(LihrZoPSG:j]X![GjlGHC]
%IIZ9>$<lFMJW+UjrX_Ra`5-Weo[)hGR#Q$^J][lT^[<X+^Aca>`t*/+\q_(TcVGCMiHmc5+2.^PZ\OlZR,Qei)g7qo+6W\'nW._5
%L]&mfbl?d@9;MT;jo9(5rr;h;s,HuHp07'n1HtX'`U3Ed^R+ilb'ouD:Wfqlaa]`Yo:M#WpobGP8,l`drK9Z[5Eje((hJsKjgi#T
%YNesuKXK?:7pYh8;4m0tqPo"m%XSI[,H\B1Am=XkHYtLkWuqA?IF=>XC2\OmfiNZ3^R+n!s(!,CR&6rT+(NO"`m]/e?B/+LJgYp?
%1@70K54ROZHnf!R=7_VeKA=1_Z&?*Ai?.@!5H4RgrTjB@rL<^:rgrn3Z%(+!HYL5rqUla9i;`4XN;L'0;tnUEimIL=pi##<bC<=c
%^$spcrEeJrB>gFGr:`e\dc!FgVuP*@?fo_6r&+@os,HgPpd`Fi8$\JQT$iMnIb!dt+9#9F+,4%[cRt'@q!s^Ko\["R?J+_gI`m2(
%5PrYXD%O@e+nDqupZ!@/Zm!EiSF":Oi(&'(5Fb.A]s-CXrKdDZr<@c-IQ#uQD(n-irbOq!pd`ZPIeI7?M;u=\(]HQprlT-Gq8J7.
%:G::Wq-r"'CbP(3@M:9*3,F\hZJ0hWHL^Y"[%?F/Gj8)lWBM&dL?[s,Tk*3%*pS$a=DQ/=Cd^0#RAP)mFWEBu?J34[gXpqCb=;$+
%dG/P;(E;1E*]>QVfo(*`;?(1%J(cI;U]'sX2C$G5ZWDWuh=kpSD0lEc0_>!Brdj]gZ%%!'0/#P<Vbb_gVOm9MnR?<D:7Ip$->L!X
%J(XLDBp8>6-?HXfD&,B02T),'b-*j#!Am^XWI/14s1(7WBo8XQ.`l90IZe(+C&)lHXioV]VeLtog2B2Mip-R4^WWGK^0ggTs,(.Q
%UOAi2/=q@)Z<KKY7:uGHeNS8f:Hr\%4P<PU[NY1`[)ZU-UtB'h2J@gSSn3Q<KajoG2Q/gE@@(el'cUuVHgWqEmk9+8n+IjLH5RI<
%&+a/6lf5+_I-@_PSnnnI183\U>?Qo02L@rR;Zi4N5>Deb')TAL.Ipq2?)EH*9%jp^e)U\18Or:(V?nS@ZCuguU']7bC1L!GdiC+<
%<^reCDSOD&iGXdMmjnpQ-sXgW'?BL\MZ\FkP/4j2o+1ZZpO=9Un`*K>0iI_OlT\ab\:hQ.h<d5[XtqZl(#BGW'Af+i_cN^SlnnJJ
%3rJf=%H^_Mh!k\Xbu^dG?J3L"C6*(-</!ti*R0&(90!c//a$6_TqPiQ5^V/hQ'IYY/agNj[g`WrnB]SU"rDQdE64>X/G$c&=Z1S4
%R&YQ@V>GVQq<seC^[6I?B4q-ZoC4%GF.7H^UMZos$c:MrNlgeaj'al_cKXk4L=24OcY=qO<SHq[HELhrR4h%r^[aduVGj'$q^)+L
%%>"0%Cph&]O&XiO3Ml%\cCnYCH*5gBbm9]'S,-R=VgG`\HVEd>9?0#2Nb&<EVmfILoCZ?O/^lu_QXgKQH-4\Zc$$YQi=C37hC&#t
%Fo]r&X6-gqE\NPS$&^cX4Z9Y!Y("I,prIrYp[M=7Da*?6;RR&FaDLh>+NF%E>SJ-Bq4a_\P1F$8jTdY,BKeQ+=>83Sr^rks1?a9O
%dE=5Y_RtNM2e_gmVKiDBi?+GYKnkc70W=Ca9J[HUDI11glc/W4bW?[6(7s;g0TUc'qCiQcmSKV7d!Bon_,b#Dr6Odo*+fH;Xa[3p
%9I3tEcZ^+b]F(SY.A'Q;:]\\]\>UNK$<0BX9,:KhP`aH-'G=CY9SRC@K\6okK1lLe%l>AE\I9/2TTpik6Dd-f';miVK>L??D,cnA
%43[]Cje&-:c)uJ+(3;7s\_9[rp)$S;1r$=r]9o-Q?EK^>9N5aF'uQC5VsQpco'p^[OR?Uh\S:k56]rcA4l$r.rAJ,V_\[G+1t0q'
%\C&BSZ(o_,j2Z7W^5\h-'PSOq,e`2@Y-E*FS\ms]`Y1fUa-;RhF&XHG.ZGs;.ZLKMA3JC#I74Me7bDjBd9!_Q[bP5Ljm<_A13p%u
%1<O'b4o#`bbRp^@0'u*Q9\[bSR[;FpP,%=V\pH2'_^*4RqJBiDO!mpW=4<Cg.E<">%n=n>NJSJa07LrTGhVS>`^96Y?s!=ZUHt$!
%:UUK'mV'C<O<t9>,&Le!_8\n9nSi6.Vu(^Xh'26<&b.Ln'Bc=hrc.K!T,SS)-GoDCHZVd`\JEmD,f[oJPl-he@`FMLat"!/*1&C$
%eOb1M)X/Q-S^:-XY+t>RDtX*VFoVCZ)79`EI]qFIF5>+Ya;OmM39!4e`CS$"O)<Ys)9jBChpkja;Lbae@eB!9=PmEGc8G%>:9hO(
%0sF:R9V[R,/)jo3N.+4^X)Z'+mY0%sVA:C_Mt*rG4OVdIgHO:L1d,5^7ktOHPm&uDq<=0VU<SGIZ8L[=XVI5b%<L<*LDS8iI<?rC
%)j]'0Q_2praKI('3Pu%=5/4'&1](P,R=a/r2ecQ&NE:3S?I5O9F<qir#WNA#*="S6:[TiW7YqK46O2X<0,Y9e/BG1HUHjV8'ukY3
%`d;#IcL\s[cX:;HpQ!nYg\F!A2BK,KqL)g22@"`8W6I23@p7lgl&-AOXVFh"%'('G<Y,jSE93MHQ"=H:0Z6j(A8-h$D6HX6+k6)$
%@*;rfV:qlk2YIUb?!`tsHsrdj'tZsTUYWq)AH4&3"S9dUo!=>@-QCmj7X8XZ\M,(QR()h4k/4OMM^Ou;k%3:pBf:#>UOmGN5=$\.
%_)(lU2@&WcCh?]P/s:u3rd@K<qj@0Q1%F^BicgB=>HhY7>`kt36p*+]\`C(>_QiG.!dj]*ai=@EUYVd(ON-os1Pjqt_s_Qks+NI?
%Jk1Sg<4:P/qZ$E[*s(fXT+?',2LEOVJ=uVAqEo#bE?.PtaD!fkcmlW_-iNSes+EVOeV<*6+9)*qgA\;Lp]"sUJ$QCDr8Q[Rrl=Qu
%foLF.0<mlL.Sfp2"f1%dhSYu@`;@RRjEcjD0"mkYg$VZ9nEIhL0AjGDEqT*\h`Uh,kC33D([p72rp\C75PE_"WB^HU^3KV=+7/)$
%Xo%?9M7NLZ39'tTs6V36O5K4R0D3tIVCdIr;WcWQg$D:"IE\-qe\S/)AdfuT4"8F0^OFGF8p`[NG8U!mfi7Qe!i\0a&&\CR8bN,b
%6,P%b<2>%?8jP'?Dg5NXO(jUYBqE4s<^6NSo<G1#9OMe;jb5sfq&L!l4KKpBjZFSrHF+Jm!RlHJl*0b14*rW(\a_Y"lOU<a*d(5m
%S4W+UB1`tjbU.#5Dd\$Xm7+pnfIj#(lX:$pju"HU*Dnm3Zn`o2=gfS(q0]c>L<a,+mFK9e1=(bR5J-5f*iGF[%kHC-T)NQ.5;)$[
%9t9s&RQYJX%r4;i!_>)T9bZ6Bb)`FBin:KoC9sKnQF\>Ur$j%mh<paFe'$pJ%;.RJ?Om;"86Pht3[AE#\#J:F/jJ&[9*hc)L7LAt
%@nli"S_qjP.K7k(EV3gf[<H)Pc8:TqK8qTI\6D"O?(sVmT=P`lAUb]^ZG_m]L/bUjGg&\,AJcuk0s+<'7t44Oh@Tr]T8<hr]8V0s
%2_eY2(_H:kp#IbT0d9b+Jo`22N:VKASeA6%(@GkMMB.i-j+4-TYA2rgP&0aD&'^0Qr$.(n0C*uF/TQ3r8Su'.A`1A2ikSu(33mG)
%*]?9"&3ZI@<r#@(q3dHu5/<:%B2(+,Ce!'jkmNh<mF8Jq^Z4W"2Iga9'CQliZ1l>cXc#M.X2H6Lc5iB43Am^1*_Q:C=VHj:pl:?G
%+hFc(2nTkro$iG1AYhA*5%[bDnAFQ!p65hZ@r.+AZq$QC_D!'KnFp(44JX!#F2l9>S6)aTg4D@.Ql,AH:66+.SkV1c/TjKQ3Qk-C
%+DF*WYQ;,tAO>'IJ2(^=ZT.O;3-0m!*VKPZp0n\R5poBE+#`o%?/taHBt@b'bG8b#f_\qI=dRs8h6!(HGWL23Bd_t+`$`e&M><HV
%25i2b2'*.&R=32_%MPWj<R@r<P>ZJG+ls8di4s&$@$:]5fb.kf2$H..33MMB6#,iigVZe0o3gWXJCfb'D5E@n[BJ;`WQS0.18h*T
%]?=sH%\M;.ZE55_[gdK<%qhmR@qVNPUbs44^$IS(/dRQ@Z+g^[j:k[JeD;CFS9#5UHm)]9m%,[1:m9Q"qjj*.jgcckIb8YIFZF9,
%m]tT,'>KBB^ia0QkL`/\'DH+rbSHR.TY'S9%^U@&TFU_:9=iss)PK()9gtHW)d'?T]Hpd]\p\YK"e=<DHCT@028rD!)\t7DE#n$\
%iC"5^%m*8BaUUL.e"VelarD)q=MaU[rG^Gs<2k-'=VAH59gFYUHeP6(>hZkkCtk!DPsR"S>g0_L@;cR4K8g*eJnFfM!L73q^oNoH
%F&?P2g:;$RjpT3fY7AALSSWVCL6Dr%7@`(\$le5gcBYadf[XpX-A,>*)n%(q/*BjoEn.N]]=AZR-P)UP2SRCqWI22aoa\ZK/%%2@
%^9\^?(mZuLC)AXqT=58C@(T[`kI(P5R%!WSHMHF'705!+/Vpqqc4m8#C85n(HA)$R)=)Hs8W1<"6)B]\B<u+C)4B)5_1<=9HU*R-
%F(.ic'2WEX?qJ5gS(V]o,g94D?gOncQTLK^,$Sp.'Il6D1f"FA!;0^/m=g%oa67.&q8:mDeM&^,5-)4fG.`Pu_a4VJ%o_%Q_2a6F
%br,aq&-I5dE\FS8_tCum/4^iUG;;m"DAsbJ4FVt4ju0).D+ZBN>Li#20i`$'IrbE?ZN*MGPtu`/Sf4ES(DIhqg<f49#WTedoX,cR
%8oJ/jR_DsKX>+rBq_Mm<!H*9Wn0ZojXh1j-]j/:cgn]p.1E4^M`eS$LT41CP,f3`jF>Fb;1ljCmU/Yf#nLkajPi?QS6R0sR@@S=a
%d?e\hnXW1H^%B0j`k%MSJ20F,AB_RL.Jq1K8Y3DW(3A.;4K^pQO3ls7dDW+7;TkEoW@tbUg6p/(Xft/KlqmRlqaM+8Sea=o=@Ug\
%I(U+3B%q,Pg>A\rK:-8%Nr:+LS>J2O%st98c8=L*gcB9*5WXX[>Lc]3$)gjL*55=M=tBRAm'^_AL.XJqKcjKplQ5Cg=#sJf";;cP
%go5BT0juP?g-]6X*X$OmVKQ(aPABIKgDthZGAm*"+"(h9KV6_G[PtXPp,GfoI;"S-:6O>9a!s!eD28\c1er#BKQc5nA*#_pI(o"1
%hNKs32H=UQ_]>S:X3e,K4f_:#oDdf0>Pmo1kt`"mR>*IfRj04hNg/ds!G:\ScW=XR5WJ7T[Vbk/HSs"M'-o31LKpF!fO:t;b>TqY
%5m$7ZZO.@>?6"_8B,l4[=*$r3JI=n:Ff>e3B&:X_:M@Y,Y6d"*Q*'1b.(!!^L-e&V@=FOmG-rdGRZ319k\<#j\I.c\b`Jc*`i,3#
%ltDEEG-rV.#H0OO*paP[`^!=-jfcq\a+Uk<#-Zj3fnKp2,F^0ari%'6eHQ&0AqKH[QY:sX,B"[50X4<O:CKNJ/]tPT<?*A)9*/5S
%I[o/,p?d.;.:q?h2$^L*L6lW;JZaa!d`XJ2ZNK#ln!n>:hY4g#miJf<8+Q\bNh9M(Uq@\CS=k.B"bU2lNQMM4N/q"d#k?%(lj9$/
%?C?D80aM_>>B)'Yqe_d"V7OQ0L22Zbgu1NP&?!Kg$>ahV]`N-:F>qWCc\W!1(OEG.DRO96#IKt%HRF#Y+rYD-Z;&[Y=tHJ*D:"7q
%8LL]\&$[D!aK2<E*haU;)'q!19Zm#Ic6ZA(:qnNk"$NoRiMGJ-prJur[S9rBJYTs]!R(]WnN!O$q"j](A`sT@D;_k)QM`/8Kdf:R
%&U*-4`);aAD!!uCpo2K-W7f`%pT>>g_G!?k#3_lGpu\+="U;S.=>hf>/#O_UbqMU((s:Nu_n=0i4:o\eMM$F&-O=D"_H0ip/r.L(
%`uWOBOCil'#eH!D'9lK3g#H]r6RUZM2h80=O%.BTq^_i(8FmZl7Yo4Tdg"js$/hl-!uPIq,mB@rD,`n].Vqd_>O5/BQtnE--$\Vd
%WZ9aAf$<Uo/r[Z)R:BjSWn4Lic5'-Vag#"@<G["]]NuQ^K0$mW4P"cp/Me;P(h:'.?<WA.#mNQ4<b<m-<4'l&>bjGZD7UO1"Y4)V
%Xp?U9g&]6n<C3/5;'JDZFUE%>q5<77_VNq`Q6"@,.0l)/CT!_oA59&]8e_>SMBV/!+/\-3dhA$K9cCbnd&N&dZ"'^C)-_P0lo>2R
%jHCl/mSjr./qdI%SX*oS&%PbCbt>U7d3bW%nF.o:E\om7U.'EU]1;A0cCNlkfP:&7`;\KFVR<BGr?)n7KcT*/9ePYQa4eRgpM$(/
%>94Y`8k$Yc$VB`<!qci<O5NoR<TFGmWhRDJ*7>%J0?a;G8EC8q/;O+pX+t)U"t!'nk&H&:0C_Dc44Xr-!PC'Vb]o4['H<!m!9YKH
%&W[HBL4ab51rlWGqUD2Y$=$0r1uU;/ij;e;i@&:HA]0\70QP:Y2Uf_9:d8"d4_hgP\>/pOG%@MuSVn\)fec2n(r!L7S4aZPL4L);
%a06]g8P[e^XOAYcQ&dXj5Lc#kM@k?9KMr;?MGZVFr$3k_rGkd3/Qa6kos(.552L4p\a2lp/1O?/\b?!!MeuoRJk[Hd\<o8&d5W79
%q8'9lQct3>%_#7Xn@>iZB""Oq=rk)g\4IaU.[ZelA#pR1`1d;o'^.Idd52bRI5tgIkCQ!g\UMsmoXd7KBF?O/.O9o'i^$rb;M*XQ
%8RDE\Oqo7[%?<<l72NMmKjZXP2%]qa`!1D?DKV;\A>M/F!?,jc+L%Fl9sE:/D,2##45-QWKuJd$8;,(r<D6,>#GF"YAuR<Bng4EU
%dZG+8cJ9C5*/4^QOG*@cp`S_W5-iI$@YWCB@n,sG&](PaG-:?^iOmf_.=GgW((8V<\D>/!cG5rt0uBaE#s<SnHtq=%VT.tV!kXF7
%!<V/B@qd5j!-eUdc41tO>$VJV"9M$7&Lld-]op7(>l*&SkE0YdK.mNWnT%!TCHWlUPjmrllIT@gOHVsAOEhF#0]S(d.s&RW656lf
%'r6K)3A_l8!#2?E6&$-L5rh4U\r8Th"1n19(freoG@n'XRLpuBe@Z/QAFf,%UN9.a(Z%PbEX`/m9lEj(j"(To6Z#(QQlmO_Z<Ui5
%YWEPX>tnp"L-8n/ika]lKVjCEmfUHn:RADR3]mg\:)MUTQl"a,#N!Xt-"(;pH2E0qTeK"N=!H^<CcX4ng*f3WecZHJloqQsc@Jq5
%>Y1LmesHb9YD!$Ih'km]Gr8gcE>d^V4<R/;nr+]5':hk0nPpc>K4t]@Euc=bc%i1V4J_'.?L4]0B:mNL-J-P=:e94CHB-`NS3aqq
%%0W&eq_5RL7BaQj)oX0/11hA5fY`)2#VNr3co%5JKe+\/I-=D^h"7NQ'K2;I<TML'\$LXAb99+Xa"UH:%>@VOdsBPdXdpYe#hOS@
%epIrh)u$kPalFNB4dX>h1dE1#]lH&$1ek2-KqR*QHSFp=(h"Yf!61um$=R(WE#&3P)?(L1g+'CcFVphr<M+HO-\R"bbQJ?D;UCMt
%3Qb%Y;08sA<VhiUJb<CPRW5tY_GcSNo&K5c2ILCWA=*P18I"[O3@M7ZQs7?s)\FSVa3@qP%I;Q0*QrC/q2qOY9$Kg7ZWKlRA\T5%
%fo9a?25F`<8!lu50hI'>33\_NlK;TCN_&,L'uAR9;@\]p&L<nj8Z'&Dk=_E"2_i[RHlrE&W/;'i&e:fg>%PJnHO&;d+nh]+qU:>)
%%HYaNJZ/fWJ;8M47b2\'Sg,)'Hc+o4Hq]IOU%fr\Om:26O#2Z\D)O-/^cWL`(sm8M6b"UuT9,RE70nRU8!a^L]t-L<)I5]S_N/I^
%@-Ntao7ZhrrXKE+KqA1_Zo<bq2IZU2Xfmji=#A!q%g!UcA;dGF<0]Skh0gt\TIUdELte^?QBebuN1)LrSn3i,R"t><ak1)Hi!>E"
%-V$c!gL/b%4)VjQ6\%M,i@3N+QA5IX!5lapo`:!X"9eh4k(]Ei3#CqAE(Ag^4NWIJ0McFJBpKkpeGV?Z=PZL'543rX!bq4:Amkk\
%l/eQZSg3P;*s]j6a[!KDWtFoS*)O&c$tBJQ=Vo`^IHP?.^ft+'A4;&De&pP*<"=IqL7(?>:sRldeI1UH>rq'")#.l;K(#WdUumb(
%b-?^iPRSN8kV1#<P_"SMB^OtK>VXsk5sc5=*9VZ'V['>TZ_"sdJRjEO*2r[B4;k2'<?.M@X9h\FFG"MD0iV]!`(g[YM,E;UoQ(r]
%iI2Xf97d2@jbpMA*40=.*FLG=\,@$W)(k#X=V5-?2G@q(5t,=0SSqh$XSL3qp)(j2a$Y"Ol$,tP]$;!?KQuC92:'rS)^8oRpb&H#
%EF%0M%]"('QUd%46\2I>@9>h2!=lp`_k+;M9E]R*"rlFs9MP%UU3d)R+UA<t:..AN^nm?FW>](a"h;f+'-dtAT%P.bnmL#=0?qqd
%#3hr4A-.L\9`Zu3T8#QX"P_^`Pc<R,m`\eUl#Et#]$5qr$P#8l(I0J?W([>:"_&BW4a]snH0:kh%Ep=rmcPFJ'r/W>Z*)7j$9Q(^
%iaRU8J?:hZ.iX")@A8hk/It5&aoo9Hi=8;k+BXuJ\?7'^cH$0N#QOs7YGP%4KlGa=^9GNI=9u\k7YU4(`%.r^2=]5fMo3NiM*E,0
%Y`pjc`?:@+=g3G?[buUR\(+1I\V",!.2u^:Y*Q4Y2bbRPblLO3\L*:/Xf<hhC1]qkS3@3d\Q03aH9G-c]'%]:"=!Dpn;ZrtbV:-9
%3]I25F3$"PO.(s*1%FN:o3?jVP/&q@Q)D-91Z+)hgB8]*#o;/bn>H[o=?X&%6T@LM+Lc35Ya;<(eFH!3Qf+DI?blEp*>eO7bE72V
%_%/*;0T!%U'KQV+`?CE##%'D\KNr/rS=ps:/;4(<SZuJ/&2"2FdX@hnmNEfZ.^WHk%e\B6:hgs34['I*`*khTG4Ur@'ljSb9%]ro
%WF6!)&N=M==MabYP.\kA$!)5kRUT\@S1Uh2'O]4[AUoBL--A^JgrEt0W"FnaBYnQf"Og!:&/k"4p=]j/k,k1M2[<9cb%kL]<:.Y#
%#MbNe_'5h;HSnB?F@`Z!66K(KI4aHTi)sNM]^8_;1uZ2\N?@RX'o>0`@9)".OiX*RA,:2#bg^Z(F6CVaR<cgrnf>X2H.taenLs_<
%2u"t`a[>\nLKU'u`3OoO+@Uo&Iiam:dA%oe0A%k"WAjH)@tCimO^<_:nAU\Kl.I(P`;j?+D@/QPlj)Q/"P["RH3]*:OZ7eiSmF4,
%*u1QGEm9Pn%Etpu>D961p/P>J-\lE[?td6-@SP#<XWlI!n%<nN[dN?i<S4\8Js03>*tpD?_m9G9!!0D8OjL"6?K-l2Yi4q:O!WkU
%YRhrX%*KWi/XVB+#ls`?;hCkaljDM^8#2ds>Y$P.']3)TVlm[)Z)hm`+b"r''GrtiU5ATbkraolV<m^n#jC)0!!Aeo-kaHXiFTc\
%=G0Kgaj5k6*!2P)-rblG6q>I5AD46k7,.(sN/GL""?mM]je5NMd1i#OE9.M<!cgal]!sm6V[Zf2Z!bh;6OjA&2Y@\S)Dp1`_<.P%
%grjgAG@57V:r`>oN-I;eFs`:(iXJfMi+ed9LP"c>Q]"CF]MUior%5"Q'YmC4G"p$D3s=cSEH%<:#odJ6Go!s$?\m>Lms4/EC:.8j
%hSG8pe/;Yq(p^[[7gYr.&\(dmEBHcdrD@kP^BEJ*Y=oHY-3ttG$&=E_HMb3QEn1K:g^>tkgnqN6TN$@`^?U.!@K%"V/jo#VAZf;.
%rT/T*=GW6@)63/gI2ongP%/VO1oX,g3:u^U+m.q7/mpt0=!o&=GZ5=IS1EH8_[u*_DCZ&l]F82d%XC(Y+W&`k&273^_9Rdp5r0,[
%@tqcH@YD0JR'%+rffY!HJ1il=iUgs%G[Z0=a_7N[6V@GXm`>5L(WRLV&9cD6\f@M"8H?),_?25K"M4s)X?$hI+$7:!gP6B2!%G&+
%#2=&%ouVk,"L,IoqV671)o?!j,%)@PDD6)B4CCtf/u56g38si+VNO46Ds0jt/?iQ6c43L!`t&1I"]L^%2seZFeIX8<KZF0p#'pi4
%\VD$lN-Rb4E*=G<&RaA:ER\2To82/e;?>otE[&V"!/`&]4_&/:DQ_$O_jfTW>'9EDcr'uiOd0IOZT#GXJ2Xn('gk$<Jl_fFqjI\9
%1Q<j9niY72k.G]':nCqn!,U+KfO.J\L/?RXI%^.-X>[R'OdR4g7NKBkoQd;X$uIHCiMNL80tN,oTq3-A!D"$kA3u1d"Kb"W\.WT*
%1!hPshAo>BLD%J^JUm9/#^2%"!&W3&-\RFX*?NhQGo3^IC7qWD!o7UW)+q]nQl_'j!od;?;\OP49KsTU<G&.?>(KX%b!n(5!r!9m
%0Wm/J?u91Ijff:RHm6X\a@Y3,kNi@$p]O]khaB5O:2tL=#g@i%\/>Q_0c&okYeAG>&CS+BPUht)(mW%T6+!27WY=i_`]dI*3=`2u
%&c_(ALfG<W#);Lo(teM[Hf*jO<]&:IMo-a^2&LY]m><rtI>>`GUca(adagMln/X=T%+tNe9!b/h%+sQMTDf?BrpX"HI!GDIY9/5i
%il0B92rB)SbP0nus2;r(ArbTA3C+3Gnu@R#67doo`3Qe**)fIcJ2nT=`TZYX(,6"`!!gHh1R*!r#!oV\*+&0Qo\,^a,b+j[2TGH9
%<MiUO=>#XWdeaE/RiG^1Qug$]ToTmhQe1=jYca_(k;Z-V-YfOBTYU#*[bdl6UFV:GW^[QPOM(P"j:E`P_F+$c?lT_'QO"N/d?03M
%<JUtQTnLr[,H="lMGkXk^=qG8C:C([*U]Oh%FUpQ!;SPBo$B&E,3Bes*"r4.j>\6Wj-kHjL+,s)ZTVqll1(o"fHCA+Ps^Z2dh8L0
%j'\>Ej-Y^26eOX1=>OU9#BV6qKA0XhrTW5Jg'aFB@EZSFR]72:g4nmEf#:O1U.Z!"`rppZ[4d;>g/nD2pF3la:u&IR0silZo8m^G
%HeeZ5]enOUV.$UG?MWgU@`<#@A04DuU*>1jL[I]*U2d#VhB"@W*Ps@$q<"d4O9rQU7P(mO2?_VT:O!sOB5;f[K5M8Gj%N`j5dm>*
%qJhLn(PbWW_j+g'>T@qIVe#Lr&G/MWIf!m0j]M:[/k\$EUNqA,*RBB"^AB\RLE6B2S,4f=?lM?c_LR@5NOOS.,HNSK\>esJ=6Ckm
%W.=Y@]K]Ji9-Ndub>>?kmtLu^l_>=2as=l<_+6im__uZn^VAG=#j3Ft3+u55B?Fd%D/iquZ`7n->k<9h)3Y^\*@KP0X>o!P3')+o
%+R\9'+<h`Loaq6b^iO08j)HWYl>dqhmZJ@D9NlIW>OldRiV:*$!h?2"L<]?COmsYKgRbM`Aa#N#LGOG\:e'db[1BJXb')*Hn]OoU
%T-7#;=I$1c!!YI-L_Kbd4_Y=[LL;Fr[OC&mjI)ujWkoEu>beGX%;"Biitk0u*7d>q7_W`j,HZ8VaFtZo`1t]Z*D+7j-B;?Pm^%]R
%0J8f2HahFfFW6>I4p=Sc]-$4afeblK;\F8"63f1T@U(,OZ0G*.!pC)\7rj\n=!dPBbXIi'_:a@aTgQ=I&^l.tk+-*AZ@?h=9Yd;A
%;g>OGkW#`gEV..f2X\K9J1m'C.0(^2B03L;ju]Y[Uj$='.7S\Q/-%R952]o6r&MJLXXrfBn$ZY$_-0>T.jkki<`?k`^CM`#4>rAo
%I#:Te")cR-B(8j_V9T/69M\9kHDXQEc#ou-QD8u'J1;@F58lZq'U3))+YCe5LtMb0Vu]`@RLRoum>Ok%KF2KY@6_!VBVa?d.S-s5
%_f7t3*$"*ol`\8ihO6XG!BF(V*&Td%]>_s2fmN*BOq=*l@2$QtR8J*i7,o[%Ob?8hDb#k$ADo*K0d..,"q)`)cJkZ]P['<!ar__S
%,@'_l#_r%&01,O)r*8_M[%mg?b/#<U`"]DdeorZO6VY5S7]/VTZ'CQSTn$j1j<6`/8LtLKioL<2G`7ef1CQBnJOPd-H8#Y]5!m'5
%[?Q[G7>;=d:2jXD<$',B-[?1^^_'o)Z'SX&p(=Ri@f_$KL`h5,>lcY0XLmC!Y6itP],cp*8;%K(Ws"I$R[:$L(O*(;`=P^8nnTY&
%a$TgbSH0K8Y]e1\UoN6D8XLB_`.UMY--`BPgLYUlC)hVPYoUe359jnFh_9D5LThLokB**s=p#uHPS)\W8DbCRZQL*?&RLi&OC5qL
%'0elFO(3:u4O2c_35#Gg'V/h\0?4\0W??dVR;lIq7KNEpXs#;BVl'W1*re9c_FNSfOjo3o5hN&gdu%e)F>;>U0&4mkkRe1P&I'_T
%mAdC$ZF\D`g@Z^C11<`a!@fai"NsEOA"-m`X??*#3CLk+QObfr^pZAoEXHi<);ISJi/).c!)#XhIhh]D<">Y,Vf3me$0k#T"bE#l
%8,tN!RG=`o1+NPG&BkQ/m)(qr$/19V)U0fUg]9b\Q`Wh8R%tC.j^*)^#O2r_]`Hm6VL)nAq?mdHAqa%S!f4+e0fPX$$7$u_\e(pm
%K3SYeDJ.?=U2^Ggr=&)k:`[^2<K&;);"D2<"le:EQnBd67CJPF3u2Ql3'4/5J[a;Do#-]>K[_3QL(Zpa>i!>n!-a9i_+9pQ2#c6t
%c)+9u69d1_#!@(\Qp3rRr2M!O4L3s8aXadg,[//$ZLpb"e]?(i9`_b<G^;Ul'iR=b_34CIOuEofKHXp,*cQsfiK<4[&l8RiE5!&R
%5`,W'S5hgC6"<I+_>6,'SIK..4I0&[>U.\#QQMOVnj:R_Kds7+TB"r\KJsok7U(V0GK-DFEJGo?o#50PL*(1>Ur6@K#Z-o-)(JI&
%2.!Qi&SK#o!5F[s<Okc\98%_KZX]4Da3DA);D>V&H')a5Ema9R4I#Y=RYlF&l=N]rrY^B!iMm]J6cku&*F>T__0n2Tq@[rHh/10k
%DB8I:63CoIZ,Ylb/?!-*3Hk.#'aTW%5V4ddc,J.@B+Q*W<*9^ICMn_<cT&4(*co9l)rn4&nN;q*23>b0_jT,hjr^NlA/^r(XnjU;
%o)IG985AQ(XL'EQ2[%2726VSeLWLL+;1$eagsD:Lj!L)8k1gl(e538>EtC0$OU1mk0P#>&MW2i/rop_g/ZVK]\/1G_7W4tqMar-K
%\An?,e:C8FS"cc1N^A8HF^5P$\HBYXX?g$tQd!q<2L$2(jf$DW&ErXYXHN35lVoVT73WXXPB8@o8E->#'3"*KfPFl[a7Ur/068O'
%+R-+hiZY7K*#I?X+/Am0"0-Hr4tV`A@Jb)U+V'2=JOd_."]A:S&ZBQ,k:(MP><#&kI\7!D^B0<jMg(#phG,IZYYI806R**RF(BAq
%6'$_MUHX%%$j)IX,a2g^a$9aL'!%@Qn8;X^=)ATd:qQeT%@j6a#d6YIBQKD9FtTYng9O8cD=`a?1TWp3.b:ElAgpT"JF>dKrcS#;
%c:*O&cTje3=B"cjLOu5b_J>./@Yq^#@qgH<lV'h3E3N:7JB32NWJn#uQhDBcrIEM(;S>\4@d(H&ehtZK]hFG!]X18n`6D>MX3@.`
%)X-'dH$41Rg+a=LXTl,\-frdf>#Yd$:>P$*&FX^EY9dEa"\]5<)XbM!Cd:i59kXe^8u@20lXQ.WhnUamP"p&8&PI9k4WA,Q<3u@Z
%"SLG]5n.usK!pNW_3][>:P'-$_;>MQ_Rf0cX5:E(HBMWN>Zed$K-5;S%#0pbp(d^Ao\.8I_V+0",4Wq94U=E:Q9_O2-8+kSaP!6a
%?t3]6m-Gpcj$P%SRA!?%PYiS8$hS!94S*d`S?mBC_dA<oBos<E0EQA;/`Nmh#l[Cf4>&VG$\KA&5NKb6qo=qj8V*^d'Na,TFdUB7
%1=YL!;#j=Co5&p\13dbDLARER3F6fPME+Cl@?2?Bc'Ykcp0K^"Be"]@0r@;llg6Bm!c#O`O1T1meO5&ORM0sB4$a/-cC:8HHae,G
%#/((F^BMX]A%&5?qbi-`.gFpjHFN.W,;W\*`;!un#WZ`,"TZ3\/:J6>188c4419sgBKG?,ECr(UVQ*-kDrajT`slHg+9djf7;oC5
%J9N.!"`TEV&lX-l>_;@"'O3rFZQ+Z)<^cdr/BM(SA=cU;8hh4RXf/@f>eAqs$et:b:!h5>]"CpKGSUa=9KXQ.=[04)!Y4BR3NCkB
%6(WqL685sto0L$Klf.L"b@&PK'k1\\Ck0a&(W\<9KRq?)"4>5nTK<7ZI`3T"2gsNFEDT:6f&O"XTZ&n(SpVX#<t-SoE`UWIG&SYV
%AS)\""Fo8<oWS<2/86T:XKiqQ!g@YVmoMdcLHkP93^4S%EfO0[B945EVkQFW5kbZA>IT>_a)K+!_O_l%9"8uJE7"b5lcd9BGYLm%
%7A3Bhj^(\<PcaXt*sl2&-bDj6&?q*9k#5!-^`P:V4@N9<S<%ok-o7.!K6`e;GXLJJ@^m)WG=:#:HAo,Ll,[u0?T;hZLgXkc'9jR1
%`()AZ]>f*>Z`<kR(S>>O[6,"6\\m)jA1e=pQfL=X,%rC+Y0TE&=r`FQCW^-K?#(cRQ5R@Z?<gN`57c`)-imhC&SA+N.M?E"LCSNI
%a=cO1+!d]jC(/$Va1T3K]_9&8^VcBN<G#63Q]+>^$&l.?Frnfp[pdFP4AdPjZd`q1W]Yeng?FPWZicG"PudXUYCO2cY1<`$WF#:%
%/!'lKJ/Wt4-c]#JW5)u#:,T(uCBItcN?h\hWB,&jBI+Ydf9*#*3"63\C47Ep%S++Cs)nMW_!mcII!&j]J(rsJ]6*.#UuWch[N'#R
%Z.\dIK,\D(.0!+VqqdP8('<M\rqb)N^A[?alYkX/p8K(kVu#dBro3U_00al6s4)$OIK+M%55(kopT(KQTDl[E?iLl?qH_\4s$OBX
%O#`sIkZtmWfoIk7'1-l&Q\X_I6$8-R'o3X@Nch0^0!KS4hos+mq3dfK(cEsb.p(S;puSj+9m[<#eulYgO5Y^GLNb%-"pgWELX(1(
%D;8u)*b1\:`g-+^#K\6!fF2C6_/DGhG?uB=*<TN&Wj,qn7P#>aNZpQ&5aZ!V?FZ#Hr_Bk;WajP:*Wh00PJ[/nV^js!Niu?$pf?$!
%cm?ML>`84>hIqpbYV6=,EJ8t8bK4d0Me_PF1rn,I\'B#QphdoCMWMAD8pb&."s-a66;DRF7!q]VaYCXtdKip7@miY(aX>%^b&`sp
%Lhm[n!I9,^E""]kC@gLFDINq.m)IiK+)r5u\CO5gN73l1,FFI1[FXY6`5W5m2l_At)?[HOi4fH!0cW8p:0_Lm"4XnbNOtC(Dc5UZ
%*GBSl1kr21**:,@FUXsUK?tJ$Zr[d1p(`qc^.pTHYqGCjQuGpTG,I-V+t[F`7Xa'6Eat7MO!$?mE>cY><Y!][N5p%40:7\gonrAl
%On%r!8+7@b'>mX@cknF>e[r('UT/DC-cL%fD)8m@*6-W+o?La&@p&U[!orBr!mY-]CCBk4NP9X\V*osL(pb.+CQK@mhVi2(\;LA7
%K;0%.`@M[WJdCXN/s9be]2:j9DTN**1"T"[+=;7$L:uEAMhua)&YYP]*a7lR/d0qI?HsK)=I4pbbf+i*#g!9lZ2#A5H!cDdQNLNF
%[obF*KWra+bZ,X6ZQ!hfUoSBZ@0gO/oM&D1W$(Ou>g.2?&;Time&^eFFqg^@2qm9QJ^e'Z#1Wm>99,`8@6toWb2T6)n/s7lmj\$h
%QcH%BFN"f#EWoZ%!YgHi#?`eLUH-0X5%_mSFfJop"*gmJh$(NROPC4@nU`^Ug?'jH+L4l21rWQl@3j`4MEqj_D_+G:gCg2uO;'W$
%5e1kK2hrpg7kki%0M-nk(^(@_f5P4JDB;jeJmss-j%;U6N9ruCU*jFoE[)4tAZ$n&JA07P:(4`9QN!/>Qn2NWDJnI:$tV++,K>c6
%F(6P/R;pP=9FU]\cNC:s?Lr03-*CR^'XYedO;fZN+>SR#K72TJM30Ql+ulHW!]<;_F]/o_H\h+dN9:=N@1X&-[fXdGpkW]#%IoF<
%\@CN,2IZg'C[",S%%@VF6Z65JFK8FK.cTg<;D8]4Cs8Gi:PUc:)5"IsH&,>q!<A9bLr$C5`*qAuIK<ZU,fINu&KJ__'8jPbY9+!\
%rVK_pg`55j"N7e_$3-Pu\=o-/9@K/TQk^e1,Um>61O7YQ1l:ib*0;]F0FIBo=IXURQ0im%`'GRJQ2u!<nd[U&^R\sRpMuE._b@0V
%'0\F3_(gpOB2B(J]9@kAYlnmL>4kKIN:]?%@Y8TdZPJ6JiXst8=12NO$t@$[ZJft_oddP,)^:!94$BQtO`cGE&5:""1%$4o<]re`
%28G2a(j6G6c(Gr/Na_4k=bcJ8p_YrQi?jkGTGU/@%]4S,$o_-_j`W!gL="O0l7$O:q$4SeZqA#Q$c>FY4f_Kh"&=[J&^8+"VZCqe
%NE@#8:u&;H$3OVF;Vndte_=!W=G;U=39hh*#3s$-7&cbC!Y"1=UD*of--BMG;4+Kgma_\u5lo-MIH;+HDQ_L%q1M?7g"N;:`cbPI
%c6f'JM"6-k3%N&e<5LVlZoaCh.2psd,E+IfWK^+%>`.C\NC=];].@]?%cT*IJP?X0d6)^1.>3i^aCWNp*2.]r"MtC66<PBB#i"Ph
%j,!J_YnZJ%\QrSnEigFG#GZU>NKZF@Y/;thlJP&*e2q_*..,#6M1b>Ul:DqB;#T3@K<]SClkQ&,^i*[*fpomDm_Xr<(qdUc2`>+6
%U#O&9(VI]:FJfL9(@N*0/JrUqF]/HV7hXYo?=[(+;1g<b4-b1+"Y[\`ml\ER3bm+HUT+jM>He7Np5L=WKY\85'HM/d?dQ!nB>62)
%UVLu:bp&,1@SqTFGcn`.V$@K=YQLZA$0U.*^cpgsgq\i9m(00I_);:G-CB>p3n0V3-h_RjTn4.!3##DO#;bj8Qs5u&Amiha;->t<
%nBZ&VOk2WQnA-=.<:8PWW/)bH-)cB'LR#-4JJjnom7n&u7S0g?3A7Ur)sYF;$VZVoI)HA.ZP>8?aND:^_Al(-!^g`WZuRAp`[dnE
%&iBjuagm*3TS[tKo^NM@Yh7+H8I9c(AR@+m,CEGPSIcW8C+u@b+#$MS7k6k1$uL+=(qHmPA&/2Y.EI$*`5#i]-k\ihWg#R[E:t&R
%c32@kDmC;f#CpYnXu@E[lrgfj!CjY)j@g%LD$h4f8Ut6ZTf+i#JFTXnkZ/N@:e?=aDA9l0$jL+t=QW;H!LReZj<YTn4CD#'2SoD$
%X9+Vrd/W+_a[C<Ks",:%$hiK;Fm_Qp$NpGa<0ndk13Ff`imb^c&Qg;#OW9=s[.g`A^T^M,JV*V4)@qMK60[,89#/8EhHq2ujV0KA
%IGt-am2PN_(-:o&_pVE6VZ$JGbWY?$7&6CNlq7/U4stEXrheu"A=N9/J;GSVb_>aL'i-H#g0a3eHpQ-YU6D&BFPLPZ.42hm\9fAr
%<[ML0'+6(4reU7a-k1Wao>p@k03E]QiU,E&Io?X`mU5u.D6">J.76J$#;B4<emB'+$Y1O6?Q?$R8[/2WaE@]MnHm*c=9PkRqMW*^
%cS*\3iEqu6\rluLlaN1DoTp(Z$r`8ent2)/-(d;.H$U?:OT%!CG-lCTrpg.gOkrWYOfD;SbXm<SY*;0XdU*FaVVnVQ^J*#edd!@;
%jI'S@a>nb'4Ff`G)s8lW+=q\Tro06.WXI*ZSs7(J)sM:`5qEkK^P$<`W]!Ct.H-Z/Z2X;j_:G.LQP)UrKCp#n<c?brIn?!m@t:Ai
%Ll8S*CX`8<^;u8lQ1^K33mB1QrFPapaZ,o\X#[EX7f*RjMW-$<Gh+"2,\/`&J'jc[NUj6B^T0f>X],4>\'[sj?^uq['N`"U`.Ri9
%KC5(70@c1Ej"DHBBtG>Emoo_=KCF(27kt5)0@CKTC%b?6?UQ-h43l%1VaGA\gFi\?VSA8lcKnrOi;/-mN/UO))nD.odkAkrgGjJ-
%)4rG91XQ=#%ck:or:7B)ndV=#I_t>(4ggD&MLOE,IMZcUS`CTL0F$*uj;6RTR]d^GO;1Xa1;\_Y0G`s_^LTJjg7@.\*DY6&"MYAj
%F'M/R)QTW8/?]Jse8$>Q%Ye?)Gt+p,iKl2*s)MWEAJfo]:%6>CR#F?#97[`YT*2o$!O]0=I[-[2Gn^*2MZ_Ob)o42qR^Q!'r3FZT
%$[E<]i^q(YH6r>tHO@\;K&ILaT/4M*Ied;P2gD1oV%cS8;uEqW*:`Hipk=7OM]9VgUqmJp2$&IJX.]6aJ0!mW'Yd%S&cgu,^MNAe
%'Z1^c!A"FW.rH?A_K4H(K&`30YqXZfIT'&Vh.V6\AR6TpIKT9mQJY(KUj4?`Kod_)+Shi6.smBU;S\;W=-d4WEmY[bbHLarX<&q-
%aJr0oh,o+LV:,u,^CZKk-!5UF@&<ack>tQ.'uBLb'<qVfH%$oE`QO8(QTZnh'Z'CAaq/)EX)!.PF`?C:<AV$h2U=&Q&91PXSmS/%
%Mc95=4MSg\MsaddO6X[,:@lYG%dtpm0;V8tM.r<4nY/-tXGn.2s#66N6,^,#*Q4,FWtXiM@/8XBmi0G'%7&0:Vtn;injnA]r1[(S
%J%<u)67g>^d/65ibEp]U;Sr4ENTN1ep(PaBbB&e[10B!Vqd7O)i(fSF4K,?d@/8o!XaIAeikYb,VXR(H96:rR/]%"9"'+"j/AHEI
%@Y2+pquWbam)@9@M]jEtA$Gm.k$:CD/AE_L$FM-m2+!U\i&Jn5NH\:G>ZlM)V6(Ob^QSA/aQWM]fmduJTOn_NiD5nLO\=cDBmub"
%M5>Ba?O_Y<mkheD_JfmO?_!Yem@a9/JBQN'k*IOp.II8"kT!>W+#L_FN-_Dt`V#VW%[pbM&oi3Fm)%K8KPr6r%]MWkU]edmo;"B`
%#%&dWfuorL(Wsu9SJ6ZdW36da^E'oK.!Lh]#S1S.S_Ai:*`;h:Fponmb4*TOKF/q[Ph2K'bP/j8)X1#cgW*&;OOeD26*KnRU9SZ!
%\UJ,h389bB!-Ns_(Y$1(IAQYn18ji:^,cL306h;9V0$;B*F;CPG7rYPd/*V$Q..`\:?cOQ:Y^V%qTa_C>R>hVQe_n?mlW^2ic'G4
%$oBn(hs&\<60F0t,(18D^@T]*^6/4$Df-7o^;D\@60/Ia##Z1BR=%Tl>0A8`j`[Yn`tuR0.#8h%08(27_;^AiN0kaX77<Xs^K1nP
%7)ZF1R[EM1$lms)T^ZMd4Jt8nDg,t@#^eB,^fMKY^*EJ<>kr_4bLK\IoY"pOKN)9^p\$.O_3M["1=7'tQ&T;#+#BjB_5>`3f5;ff
%_)k\DgVgcrY,5'e[hkQE,I]aO0-QB)kB5?^Ul3d_:o#J_/X18<lt,'Y(>t(U(\IkDbi$e!Mu1TZK6np2jir>)bkZRsqi!hm9+!Rb
%TWW+E/9ZYlEjB#;`*o/r=7:Et$WZZ`>j>"rd7sPk;qlSD61;YbO*>Y9(K0*-/PrSq]tgAAB[h60Ek6jsf."[V"MLW1!/$mX2E#!X
%#![#;Ltq3>VfMkD4YOVL/ELnq?LSCkMr2U$QX\(+Rhr4Xqf[5SFDP<PH+2"SH,5h70%psNc[bqYQ$57A:6>%`T6'u4kGBH1>OB7%
%;I2ltRT;\4.$Sn<o$UBT[bXS,;fGL:S0Mh]i5N"CIDsHk4UA%#P4E(UUM:9:?5TG+1la,eS=Z@f;=_Ta6F&9nH$N2@p@:+K=Z&`/
%8m^3fGi57UQ"_C&@g@U2LZ'0un$Xj#Or"1s^k.`9!g\1?.=#X%n`HC*QS]Cm)s<Huh_A$#\,Gl98BK%?*ONhGP*]'YrLK*QiO^j'
%"##:IV!5WlnhT8-M^Kou8XdKEMir9E;o4NV(Jdf858\[TCDhi-Lp#,_]J8uW-)QV@%jH>u@,7No0"[h6,)8qk&WF@7]*gr3<^#I1
%DM5Z]?=A'_+YSHUnCiJUQba7\e$"G;gT#?^?B.NLYor*jRpK>+H*:+7Y<90'KY4,%B]ICY98%^n@Th2$j@%:'oC8D/+BLa5U)pS4
%#9U.Zf\5,.]_IY3R;RDbW)%tK)MGaOYp,7!C4DT(VVKgK!NL0(E9]WSZWT:.T,?8Y'4&.n),"D_M3IH:8ZUFrWj@5KIDj)T+dmoc
%:ZQdhMABclfm@^Fa`nO/A0m0N:E@i`9l.J$@c_^0j$fICc:bD3:02@"`ll5]]^B%;:<)B`]OM.'OOV`Uc.\/3(UBcm9u?IUf@:'3
%n*k%2j5:*TNW`8f6k&63%0kZ$NRb07]YhAT"TRm,?E`[I"VD^ec<o7Kd>.ni2TU)(m)pVjnm.E2Y(#Qj"ht^"8t:5E"AlM69ta1d
%W,X3AmEncu]Xs`nS06YTSn#EQmLkF%,$lVjd@V\bl<c-ER`KYiN4Wn2NHC^)m]o#>c-<_%*TV@<gEdPANQnnihN:'f"PGD06sKYH
%C_qOKZ>7:a$\tD$[Ae>S%C#\gBc$O\p+:6X>rG2FF7\aM(Ui0lG#96:<,-C=2Un%1JmG$g!.)EMlU!R7ht4KFn$Fu29.nRSn7ce$
%\rFP%[CLFLRZ1X6YoB<Z@U55G';FpU+#Mj5*'12S.V]7@^9[$UY_0&`S5ctC=5`#d75YX$Ui2L/&0d8QPe&QLP7ZS:%%reh$$?8l
%#I`7[FHP8s:9P%`"agYGh/c?^)a*RmFgL>L4i4]<10ml/,+ET4dTu8^"dSNH^.cA=$a_\Bor_!"!5]pb+%3\j=2UX@*aQRb&`pXQ
%kQXdD=EKmbc@\M$gMro]U<@oa*\^-,,B+_E]$iD32[Wj?0%,`%$JjfSMSYst4FVZ&cp]^A&@!92Cp.mj'^fSY\e4.(MMWDX\r"Y.
%H#3Ug`mD$r^r`7m*pJJ9#(nOoI0TV$5rV6YM(=5HH*SL1I'+-86C.i`Lq2@jF@j<aOGd'$1,mAdlqX7T<,o$a$=+Q`m-6=N&jWTK
%mF!f`B%W[5YTK6#GBq]scCqkE=1g?Q,1]s\bXmEil[EkDh%P:ES0r4'kH5O/^77>&a"`El,L9rOAlUsTgptU$GCpK/5rgkV:Zbp4
%7'q?p&RE#9gC<T+1V\#Xc_U[2L560?i@V;PAe!b5+Kr<fi%eUU;#fL*^fa']]-DqP4o<NUlECuH\LItjl![NR;F3:7)g*co^a'6O
%>Wt*j8Z0kigGeD&L65&Oi7,<;A=dR8k;&<'`FXDT!BT!b%I.1(J>1cI\[7VjM0l58KTQF*0pm"oqe'9_^_L@7,,3qX3L;[)l6aeN
%d1mj]F'5[H'mh1NV3Fo,IuhKIN>(JQc!beOLi[8LMC*PglutfSG]P%dh;*m.l'UJeSN3%p$[@iNS4f,%o:7k-IO\Z/&EdMQF867(
%>U;JT\eF7iT*(]MLi\i/cY6>@+u@$$HDAb38IC@oS2qGf\q!);X,KC2GNrF"/J*UCl<F[RW,dsaM26=&c:(?$0>'_/I`^UWi`tit
%]Ft5ic35VK&]Gm<A`aL^)2u'jm?A!@Y3.F7''FTp=;dp:E8Fiq?8tc!]Xa+ZRjV,TUeA)0K/aZM+pOWV`4;[lK?kIS\I^HZ)8s'"
%^g=P`kE6+M.Uk!>".>9Z-oc3!O(5H@PrL]7Q<hZ\c:'U0Fb<%U"5!\s_9<:,Y**Hgfu1G6mj>)$SWer[XPJ\R+k>\E3&d,b,tLe$
%9*%/f)f[L+`7Y<6/pH>[E8k,o3B8,HaT;Uh*TP_r?\V?MfP==HDS_;opQR^a/l'aF7^1l!Ju;8PPNO-TbF$u>/\C`jjLM2H8tNYk
%6(XQt+YCcV@r1#3F&VIq2O?k`n:H6MQO,N,1,tDJ'J<O0RaB-Q_4:n`>c,Gs!gmV/#7#\-#AC-p7d/-#F8<!n0Q4>/A/)rR$eeit
%#M!iPh"L)'AJa'*Z83P,,tOM`Td>4Yd,o@`H!^C%4f$MNE8Fi9P!LdHF!72NFQ:W"PfVK"cDA=gf*XeI!V>YZi`s38(k>AObG9'0
%2e<;[mTm8>`4>ZmMH9t$/kHV/]#P0$PeBi^7\!+"6PbftVKd8.i6@dMiQ'MVGNN.d>HAkI";]>UD<>(qQlj'tkOOSmUC?9i!reQ/
%&*@+fKOR$"F(pal-0rL[Zros/'?%G7`K:;]6CbZARlH`beaeI'qN,r/A:M3'k<c8tji"\@0Vc49F1I32=g,cS'_=s$ENY\\VGl`:
%cQZ!khO/Ek!b<3/QudgX&P#m?bYlq=h5PH5']uG,l<IAF&io'D\=<SIp+(8<4e?a&=)^n;)<2LfG]QZ[;]2i!M>,=2KCQu?q7hLR
%c`/O:G?e6k<KNh2BeG?lH>13`Mf:DFh)EL3Xr,/jbjE9.Do1;/o)CdYXpKm9EA^dInR,D;flC^^WP"DU_Ahjn@g;8#Jgo=1X*:FG
%'M5#I_U0._TH]+,D^(I3m_&)N!`]_b!p@Zo=:N6g5sPe^@.oDiZK+=X\9a7t+pN;99p(>@!n7S5(ik0m0C0].Jm<+F2MDi20"+V[
%G2pUhe$.)VTZ75U*ajnSGCU1Pca[r)0ag@]Z!&8n0;/%p2_Y@enoA*IE<-mX;3eM*6%B'FG#"!#3np`C=`IkbAG@$;MT\bB8(jEB
%+;h3#r.kup']Bcb,;&ubi&fRk+:oYZFXP+]'WK13_o6m$BA\*HV5OF^SIW-%s$.>;/i'c3!fIYC*4T.GG:MCj=g0dt/jjHUCa*+D
%s!0J3o&(_K;,7s4eCeMd<a#K>mg",A/gQ)]K!cgOE,j5K.>rs4%Q-D_&`BBsP@)W2Db62o^W,MVJ]kh?]<^;q+d:S.8@A!gD'0B*
%gp\safg,O/)2<)\1Mk?aM_`r0H98e3nO@h_e@]>a8VWF:"QM(o+g]4SnJ8@!m&fYWUkokXI0AFZ:h3^^YUA6Y*g,6hc?>+I^ff_Q
%:kU6\H4c`D0&h1$Y@NB<)>#sKdk*BQZe^IU+bXD?4L\0\*Ak6!pnQs+Q0"=&/5"_D\%<d63GsaVESi`n!BeS8^D-MF]p`+6L0I&m
%TlP&S\"r(UC\-;dKa7*#mX/HTc$<s2Kb+F26#I'b%b0)5[k4bISEk?&jbR(B,S82.0Y-a*S(JJk@.baJ>='M6Vf5[@0V;_g3N4Ue
%!aq]\:0S!dC^<X;E+1"n+,mYd!?WQB)/Y##-4"In%>krL[)FAb&iW!Y]Frks6"aE56R/+u"f2o4hH)I:e3(#89m%`6-b$afCf+,b
%M0NO9A[MWWoHS[s#bN2$[`F^,EG)OF4qmcU=DY5O*gRqR`AWThDB-*qW`FIFfN'(Z@^']K59CKi,-TuPABqr]BQ"-(/I!gn&6JR/
%'@IJO.Q=H!ba1A7/L!qDl#,:aMe2VHUopgN76R&SU!2ZsLq'mM:2'7M-=9W@[MFLiVE8S\AH2>08S]\Do>t-n23X)KV5sjP"R5?F
%Ynk0ti2:.1kjGG$$X9`p5+AWs3'PBnC9uMZh779;OFaiM;q3o;Fu.[3fAL/5>.3:h-VpkqQ-E3BRm]p)=DAH4?5Jc.N*A2nE/n*g
%I*+qn[7)uK0[s]A]7ZcB[Eku3q.YEYk[UsJ_Y7a/G:[c<PX->S@rbcM#.8>dg;`QQ.B$sc-F,o-7SS5[PDEI):/-WHV)RcW]&d<K
%YftFWRhjCuEIH0+lVE<6.d'%mNa_k'gYU;VR*[d0>+cTaKS#XNR&Yb+(+D'oLY[c#iRl&`$=6n8Lr5Sh>2&-3LGr7;.&\G>W,j=;
%Adl@X#2;NFI/4m9Mj>e/Bp#:r$8`$&aii,uSWC4)6"^=s5tM6>(c8Rl;=Q3j8Obe*-s/eAf,IbC;pg3pa3e?D'.nl>1kLR-Gln3t
%U'5B]'^(I2(6NYt&OAdB1*FT]ddD_*T]V5eG#$S,"UXR<?Sg>GLM%QE'XS/(/X:0LfV+P6ZSTtJp5OS\KY]l7S1-=?AVUr:gt66?
%)J*<qKephq$1?K[IANME@5-";%pK5-lu4/+)t,=cZW1PC$Lft,.D\&,*9hepSK6S23&kQ+6ZRce(.5e!TJO_!dT3dmFi)hrh!Dj9
%$`%**X)>p[7.6#E7kqruD,Ep)&Q0?7lUEfpS]E22AuGB-$F\XP*Q2l,ZdV'KkF.rmicM3RaNInXAqM<WLh>iB<^=JW4!"-:VjX*I
%+:XXi<E/,p,dSW$c&,;h*4$@AZ70C2d*.tf(,\.?+ub,,F`rpX!0ZufUBeI`b?T)"Zcdr^$"9\RQX*q2\%-)G2SHlM8M*#p.Plll
%OTeV(Vt8'j?J*R!7OoGU_4+F?pV]tO+I,C[%>tp=Up:7lP'9%[IAn\@-tU_G>T%*cUbnW=Ft1`Mm'/;*Deu]ZEJgl!CpGkf+i+aP
%W\_KI\7@n'6CP`P,2':t,$Ep#a81T^(;qCe:FD,QR7>mm=_*:47W'KW",MF[8J]Dg]VmP\$<\$uMXSP-gC[j8l"#m0f1HCfTTIu]
%.u3I?'T$XMqO>`<3cZ@\Xq\00fPieD,u@mrP>fPd?YG;`j\?s,CjkWs?43(sE]QPMO+dt*4X><M0Tfg:`D=L[cX9+^V@j/:)LWik
%"dLF=4e"MKfep'h4*Blqro+l>//"Cf_</tHoW*`?64GO".>q<j2WOu5;8qDm0l8cUIC4?1iO('VGGU;$#VN!%^2XENegKAiKqNRB
%5I\'f@mn>_Jhr^W*33nufT3/&k9&JcqKL*7Ii2fKgN,+D#Gl5$fO;V8q)/k"#J5#(!g#dTPUt#cXZH=%dp'YXM=iE`)u5:_9Y#%K
%93/%fEWDjr3R6%U7d\UQKgn%OY'WuXn0bQK^_7B+8Js9])gI5Q^kq.e:m=X$Jqpg\3RWc@'q-bEgntF3`u7Nl)t;eFISuIqne.TL
%9#6@J38h&D!S*IKpGf+6_EIQu&t,Q"GU4VaT'S&3Rb-]\*4/7#_4;B^<o>A`00FrAA-,F0ZP=)u-!_!tlo(A>iLrq8I7rMh@c_E@
%HAMXsgg(bcpFU%4@!L53rOUJn\K$S$UDd-\K_#BTJ4bYn.^Du`+CK2UqAjpi&q2G05khUVMnSIcVkKAuTa'o0bD'odUkiSL-@2lR
%:>3FK)E36'/N_iC=fT;3#76,)\+-?e_90iIS2as8DmJp7BBk!X!sdVU#8A+46IMV[://Za/h,cfI!!"j$4u6p:R-\W\aso?qncD(
%[A`+R'<b->WIhE^<5nA#&T45Wk_0ccKOOFM_6$(c$+^CUgWXgMkeBAR4C06s\0j:k[k#MR<Vs(Qn1:<LS?HA&;3LY/_H:=fcH*ac
%U8S\W^m#W\H0WSLc+nko90XF=hQP=,E/1\amf8mR>X$O?nq(bI*_'(DCJ;#^E+W>?`GXMg0as8$X>C9"!Js3@oANB$P`2:V_&#R,
%,F#hkLNFS?q!VKH71M3Y8e>XZLGqhjACnsWYD@m73'VH1nqcR2p37pm0.!2<^+&N%B^`is)q_)fh'AYiZhg7$eMXK_Qt"XT!*,&!
%_Z@^"+l%#pG6F6:8aWe/&Q'%H=smX*.,`&be\V@=?s>_`CK-l(<%)PocE-Mo&1-_&Ui1o_4;q]8Qj)=MW!\%(U2H%Y[t1Oo*2ssV
%;tBJMZ8E15U)e$D\?_iBBjPgj0^B-lL:.E?_e.W+kZB=c8RtQhj&Ahpa#Q5t54b9=/Au4@L>bMgp)geGi1(I=l&iiN9BcV0b2enB
%^J+&Hn858fXT05tj1!#^J_+4PJe2D"2B:Wg5;Y^7('<fVjt=;$SnpXo727PHZiYVC0iL"2ee6.,$,ZV%9JqIDA0Qq!ZdY';91InQ
%GYb,m#2M!)pEVko,UnH4\dW[\I#d1=6P^k@._gT!+1/d<`2FqB[33E3A<D]hS%8hU11[$A%W8/>m$/O?SR?E'(^%C.0q)`a4Hdn2
%dXoG\Anu3<\gNs#0O^[^+a`e<SC<*i(q1dWPVti_"f[gG*-3lt"1daHB;YY.%-C[5@KZ*7J,%qG4[*(7j@C9&H3W.uMA7cX7Y'52
%E*Mtn)**F:Lg`i9X^ZK>Q;9fplGXN;dg(>Hp_8goE<IlpX?%XQT"k?M-f]_Y)^Gt41M'^AfEa%hc(BN/F,@`>GZ%K`BFlI;25uU_
%k:8hrL;kK9VUJ2Vhe]>l<+XTA'Gk+:'-Ui4:\JD)Sj?G5.F[coP@h77ma:1+8%K@C:l;(joN);&ie9]ACDWrIX!Ns+fg7DR+!>!7
%*-a_^Y<bMP\;4HE%ZPd93oW^?\jWr9XucH-Z6@lZls#^ah:9/JbMEgc>@B(_Z\h0f9X6O_Z0b0q8p<"W;-C,!$7Y/k(+st21=f<g
%,/R^%iPPmM^iK?T4XblaP!ils6h`?3.a=YCZI(+JQ74"U6nlE)T^_IWFC=!Z5qE@dF@U#^)'_*DRa\BF,Z>t:gQiT]#UU6eT,(_K
%iIP(=i@NjE$9TYVKACiqVa8r/`?oB>HcB$'Q:5;DD\.]lRDl0N\D-Lue'aA3Z9Z9a+!/Pm`s0>kK,X.f6V@kg#YpqBEj-^i'N]IV
%jm\5tWOOdWVfLOVcjq3s74rE6WpXFsT$9GuO$QD56e>/R-enYpFad>#0M'p^2iQr?e3e?^=6kZS$W%<ij1=EdT#9Y$d16Id<O3Q_
%!MQn2od0LD]#Sm-iq>_M_%esQiRH$-_K*gp[fB>]kEiS_osSk$`<l:dJ<qB;jC4N(3t\:)LBY'X3^Iu;:1nkq?4uPt6U;\58r+<N
%ki]UX.BJ<m:/Q/RrkuZ5pl@<0Hg@(Lh%aPlQ=X=*3NX:o#SkL`(gph0$eQbs&$*jpSi`Zr+rAE7j71bbCp,bb`jMYOI"!547@Sq>
%;6i%k"!K"]4j/ud!`#:k2+VJG>Yc$>]!b?G*$`AGRD,/N-R:tfJW$+>j,d1)O;SOIQ*9,$L;c[hN?dBV`8H\!X\SRN;2c%^RsMaN
%U(p*;f_^1p+P\db]Mi63_FnT9S/N51:gOjqk*1,-#fFX^n[PM)a2]MrhArH)HKAkU/BR6WCkkG!:_)m`6bDYX65Kb:'F^DFI,;i.
%'Tlu'O^%2FK8fCW$A)"]WG9+e1X[R5nAEO5GB=@TG#k+(.M3`ANso`D6>gfYne.>goUP[>"VV<G%f`Cn5T4cZ<bIcHV_!b^,Y[Do
%]X;nq#^G/I?X<C3Y8_eG&1>[(@XK>u-T-rW\Tk^ImBY63)]rg>1DT^<pnFZ%"Q^O2Fe\T-as4QKgiD[\KZ#ig_'!!,e%ZlfBu%]%
%W_Mqn;s8P36A-!WAAi-!#'6#Z>R")i\>YXIVo0*WOWb7;]AkQ7)sZuT<*Msda)FD^-in`UPi4+_\XZSMM<e/H@17NZ+u<c=*M.=L
%QZ%uECq#,fC!hh20JAW"iDIbEW"u_'>9_^!G4cqdeO5Lo'9X+8"NE188>aNt8eL-G/=5r2n.u\*;lmh$h+]mFB9MYfHi#OC^(45_
%"AD)OB,2R\ZlL#C/05=T"CKLJ]ib9a!4iO.:1scC6mnaS0VQp^fEu>Nao=V^/<Oa4F'?5a82uSL\cH(K7i]H;(7gp3`!HBr*eM>0
%%Hq6g,N[jfg`/qLI!&^-/cR@?+aEP2onh_"M!*a-,1JoZ/-:9V]-$$i!&eH<pn9")GXN'>h-`^OnP^1$&F6"?$Q!X*/fO?WDW:1b
%!>Nds(BB`1qR/UU>!4mcjs3B@.LjGe\-Al*OLs/61-gR2Qejpn&A(KYmS%5jEQ_H@Ld.tIJ;7F?JBRnp:9Bk@_cCgN/kDCq0Sm-h
%TV7@,b<.#IOEN@<5W^+p$.p6N\;M%<"K['JTZ/L4R$"o5Oi6#G$;'!?+<?4HliThpObosR[5#H_(m)'cWd##N;A"WEqP*-U*SKA2
%i#(HP*NG1D`*;3#`>dV(/o%%C+Von<T7UT(6b,?P&.jF]V"ecWY^=/#-d_#o(]O&QfLuC,Vs(.8k+fB#[.'f;_U>en?q7tX;!M!\
%_ska+7er0QmY=TaShM$>5eotM09]r+.(0dZ_\2:E%OIf.D^oI?k$4I;!nbOSFYX+<8as0X6ptoN'3:*;>kU?hREX\RX%:ndQo+jK
%O=F]Kn`7;B4BRRi4*VADDuqMPQ-KJGJ3qJ),>SKp',%t\>S?/HOp$:d'5i`m;8'(JA+n0f)sPq/9$6\4)4KI1`0aTljJ)\tK!-GL
%B>gj4Zk@s&einbg?\EO<n:lU->251r','.PC)h:XO!K)\;FV#(+-8mPM!b1\BF?,ua$W$K'1YnI$788&=4Bbfq,52X49Ck*i-(/L
%#4#mS_4%W-n5]Q-bPnf;r?SH#>pYY;#sj@e._@-nfa/:ok5[/t+:;.lfd,4#0**nmBr<a(lP:BaT'LF0+!gf$&4Tii\s-f72M=cB
%:hn,Jb])I@7*2-noqZg59h2M(,X5r82aqeEI<gmJi%K^.B,$L2KtZrJ:Y7@'q5+W1^=jK,`GF9hZQUA`%89d7nm%'O:Tb/N_pt_2
%o,^88m"+\H1`7B_1Y#E/:c]R@b>VF.#Z+.=c7-dZ(ZJtM%4kVs\IS<[8r#&&i2Bd_q4ZVQ@VF@rK/4Gj@U:/I%k0cK*+)\Q[P!GM
%d=)>5=.X1;mDtrDB%t7l?'6kIN*L@M=/)peihXSSb`lR1M`Bp6l2omNFEsA:jj@mTcrc>gQRdNtUoNo5%2i4RboKAD<O:"b'lZs(
%KQ?Xha#Xf_]Bo]FbiI].`CA/0Ru#Z=`YnZ8Y5o(sc[\5FntZ:gd7spS*B'D]YRknr=21#pSeM)tQgi$$rmFukA5s]m+!*cW>1454
%Zr(hO>K+\Rm\=n0-&'iZ?@+u[L(Qd(94\IFP6j\P=1PNUKFYe@IBVCUUGqXHc9OgQ0fH_q2nb4+S/RV!YD,MtQuEgu8Y#uF'd_Ul
%=C3K(*duW@83!Cb$16fQ5j/4T$p\.)ASKY:\RZFk(qD=)#]R836:+R]4Eu?@gctOQCMKlc4*)2ho4U.qj\3.e>0n,&Ze=jkLrl>b
%1"SefWgXpNds9S9ZX>5OE#u$f4\K<NH+-F.QC*RQl!f`X.[9Wo*@2&t2\U6L'_N<.&A,oaa;.7n':'ld4Fe10qLq`RbpOnUUeYq@
%Ft:eZI.ieGp)Jt?hDb=@Lh2t@:V'UW5]SG8aGLNb)i[/.P@5LdRBA.jN_Q8/]P;NQ!@05(-<7NFU,bu/hIP-JLsim%k\N1[0'GdP
%UnJ92Ij5l`UnGRN:YtNp*2a-T<=hpAOB\Z:KS4(6gtfMnOtKVU""=htZtm4R0^+GHbl(cj(jpMbdlp`E%b)qI`-#^ij>p+m/pd+5
%/e/*:J\$8M)qjd9=QjlU*6"4qO9gp(__adTT7MpJ<?^V\4F'<Hd=&i%cLX339b/LSn@6XYlTFaZ%PV:Y#o=$3>IsqCPULJ&0?t1?
%onHC6b8J%Y-GC8JK%MsUe(*c)h#-]6E!kP[bM/C>,S1YjM"(9bOVIp/0_4u$NhaT%63F'YPaPU;!`6*'\e&?Z@Y"eNFA$^!l$3b1
%6q76MdP`Ep(>F93@LFL?8j.B/(6-l%rQlAR6^qT`!3TsfMo<=Ni`CME[]%QBf0J,32U?Hbe\i=-5Y<=0aTZ&T8t5iu9:\'Zb8tdG
%C[jn13^Z1[(\la-G.#MBfjikr8j0Y:;>JJHE/L^CVkdd>]JYk!@D,W6[`qI*>%uP=l#K=J(jI`m'6E;24,Nb)-,MLP$T"O.h=hQi
%$Tq$,jdqJuQ"1-`-YRN<G?Sb-`$@I_/LZQ?L`i'WKd!nLKTIAq8@PNf;1s*@nbZlP)IWfn#Q[Q)l*DKaKKe)@.od\q7G.\h_A\\_
%Y@eUmDG!t'K[tTEqgo]>R8<CP(#?$-TQ%'F.B:aKPT_Jd`7U]58_g1V*M_3WnE^-H-fZqN&Dr:XAR4j<D$mTgbaf4c!.7-in&]Tp
%":3fE#;ab_A'hK(*D:s0L$9^/f0d6(!>9%/q[%4mF"&2[W'1`TCMpQ'Z:0.8JM]:PAq8+KM:6@1NUAHFZ_e8ZKg=ud]'DimMR.S<
%Jmqdn)t*Tg`<A!fGDMYcJO%)@pV'D"T=0gIdGP"m(2>El9!BLYn6XG+0(7E(Q*No+*Z>L1\BtdX=,dh*4Xr6m>toU-G0HOf-.scA
%/^B0c-*C1:lM0.S"iX1SWXL)'LY*F6EOA`)GmB"s"=>E?SA:bA#qIblZ1RK0MmMfNK>T1d6R[:"*0ge7J@Np+AEZ`R(P3`@\/Cc6
%oP1rE5hWage6g/;&ZTY$ZTR<m9GTTl#eFCID\V>BTbC-*6@,EK$7(+-.KS$jS*Zh!&@u.%F]J"2+U$(1iOs^aThWFQl34JiG250[
%.nE4WbW^.PpB=57K/YCmgjQ(i`)qo<lPPoM)G@RY4(9<f'J75lS4$i;lBk""P'l!m/JIQ>]O;$$=c&1.'JC!5F"P[JG+C6W%(@Kj
%rY2m"-8`q<;POqc/IIe6h&?B7fs.[_-e,RXH:2,$,F\U#)@upG3.Khj`h'Z9p2<L>bQ'"NCY6ZcfJG!WZFE!qNH*:o*Df]t_TDG"
%8@G9D^_^sr#LT;,XoYVF;b0SL#)##t)KF45/8d=bEBG7ZE83r7<38LA/^dn:`//3N7HTNLGIJTCX\MaFmK(t?!#IpuC`eLL&@$dQ
%A^TE?r<jnL\:d_56t@<^P-$9!5a;;X.X+_)6+Dm>I+C!OUBe+0XFk/a&9IOtj,&KZBqD*A`D\9'--U3+?pe9QH_HrP2eAM7MINH-
%N/IsOp/N81oT[6>otthJ\aA_uR$a]F6l`(k]<^'F(klH70qtch."X,t=dT\CQ%LHFE-EW`NokH(p_[YF);mfW^U!_\E3?0Da=hK\
%ejKa8fVeMC=I9TK5-^4_kEd+6\K]ube8M-PT9nK*Ee]A0H'=#cRB3")01h-6ak2%i&\tsZA#tX?Z"t9j-s+'<li]jlR.-2]#H<#F
%/nZu\gCR+o[:l2q]o9=cU;iAoFX7q7c*"@Zia%gLpY_TccDY>!=k\tI'5U.4e`uUl=]LasikpmnU7XqRfBJb='kK(Z_b3gA:QM)d
%d:ju%9m&s[I8%953#Bd%%u37JZcYfP!)<Qp_L_@(C3&r.E5YIr6NQ8'7oD'g#jL&\PKm4ZfacT38ef[hR7lf6(aTu^]ZiHm\Wk\1
%c\Y;6OOb=N:F(uE3HLEPN$Z\J&dpH8U6!g(Du_9f*D>Tfc;-SOn9I]dihCNCi';;92()&T?YBV\h.tbCJXH,h_n-jD^WCHPn7jOG
%eASbN06eQf/-mts=a5Us7]tEcQNXRJO*Ta.iMrh?^'LE'bT\Vh;Y\/](c=Q.:9ro@3kZCX]JDT6h91a[_a*E*?t,qF)X6NKoq57f
%7ikP&O=Z_(.>8_82FUb9hF"M/aX+p.#uRUlIFgj:8suSAEOnnNSlc$'F>:i,A4HY00+gq+NT<*)+C,_d9GTGd=3TUh:t`R7.h"lY
%,/8uR+<JGJn$#B0/;Zd0(EodU>k8:Lk[*C@e/j2_>g/$WfbiVL65Q5ARk&S<"RCi;.lrCN9#.?]JcJ;K-N$>X?oNC5"GT%I$XGFH
%#?Xk;K8Uog,V":JT+DW.]"AIcF!&%$ZAor_s*Kp/Wq'dEW[;"bo"^pSiQ2]"aIELe(EH)VGUmT1Hbe$@Sg>"+M8;YNnY`Cp#t+"t
%,tI)R%Go)3LY_>1E2:_5:8A*j4CJLL<4u*%c;GXV3&pHtfh7k1=k_Mo<Ha8]0r%6ZEFqsn@[XBQop=HF,>01[E?)o%r",bO2'FTg
%[a_+pn?\a<SF_D.`:f-UU@t.QIs-Nd7Jti*ct/fXLuJu%C#1XUcVZNQV9*O@S/p1'Q?'dn,bc*:H![7ZiTqWUpo`G!"u^s=RV>qY
%m-5$H&Hma##k:kWdgA`daN^TX="cg9TC?uSI5*uih/60OE(ChQ7jP]lm0`5t(5fN+(<Cc6o]]NX0bear5)J&aN3P-J)\P)G\senV
%ql0.YeSapd,Kkm,E,/[Xh'"/Ih]mbH'o`]/8ZX-F#Tp.m5u5h<4hRT,%P^9G]XO#h9<rA'Fe8Bld)0q)al-9b1e$E;W$lr9'6sE"
%Ch/J#^`hngs&hK@%Y\Q)KXHton\pV7<'a!6:/>o7(%\fU^Z\M!e5.i7Io/8j//P?iR9K-<6.5ZMPGs(fcCW<K8OQ$fC7aKdPpWH]
%Fj]2k@U.Ub6&Upd_Dp%t#2.soKE*hK[5<!K#4rJ8QR!k*>D]9Gn`ZePP<*JGOSe-1;-5$*h)n!":6gpfIlP*Q->D)Sr[_%pVa*mR
%m3PW[0q>G:?o.&DLbD]tceDqW/:JW!]YfaZ2$3:K.V=nTLF*7I2[VA7Tk_r,L0)TcA[Vq@ChJ:E#WNi)'#K345,&0^*b$VMir)n,
%i>6)9W@0=>)PlaqWn8)F-ftU9_]t"s;=[sKgHg('%f(.`8#YiOjX;&PTGg[#_Kbk,:kO,uYq&X#in`Z^OJFQnNNcBLP&%;7LW!+m
%,J'5\NlWDaSMa&.q0Z:4*(H_G3B84gG7[9A"JJ\_N7J@$PdlT0BB2VM!O3^]Kd-0K=%m4fc"Tc[a!m[('62f@-]p>uTQsTOLpbSr
%65gInRtN`:6WN=$jid!aYtRn<,OglMEn:[n$=R3`!A$j,d?X%Gqe[p"m*JJ(.0lkRcJ\L8,ke9F2Zp*jm!&dC0Qb^BJnG)MF`UEB
%$q^,$d^*jN`>fC2.)<mdIS0a>)gHD&XK#Zd+5,.q)sRkH#l+,L9A,`#Mf$ttQ>IsbBb\>!CHB+%N"/s%?%GB@ch]2cWFR+=*C6R)
%g;9lD[>P0!g"U<!imj8ram</%^r'%rq]<=BjH[1&iDkh,5`Z3'f+2ecZ)3jf+tH3DKf?BDX%^,@[j@jWf]jib>4g0mUi#)a0#$?+
%TMLX?_:?g^[:qZ:HcAmFoU.<M&4Is7Lqk^')9FQno:ue,^`LW.&`\grNfcS)@:`Q):nOQ"j3#Q5L<8'f"L6hqr$!%.^oF[9OtjJH
%(nBs_mMsT6B3XPO-BH9S5_+IJ@I(=s-^##[<=/L"S4`Vk7ZL+rF-9PH/$r`-L*DA:\$JF-,cr#])i.u+=>^Pk)C<jFnOdGQ%[nuP
%!LJ#h)QjgjBIAm.;,&;?WA=!W@<bsc`I#lrgba1;0.baB&^H[+%D`hN3"HbL#o9.pV,O.F(126X.t`]6B6U#H/M(YK&OANt%u5pQ
%E?S2J`3RdjfZIlcPN.&sBe%YONusW0?cK%fV,AHQa&NHdbI,D)nr2=$'=6>q#SMIS92Ni."pj05eFh`RLHqLhK[pFrbL\dIU/Gd:
%(g=*.U\pISPUGu.h/-tSdX1p.R03S)HnMb\kU.SNb][;\\eW9;;K@L%O*)$J^dE2OfDJr.&i?km40!Xb]2tL)%?uO?d'3G.:[l96
%+06XujjV^E=5>;%&2b3^LpdB_KC"Er#EcPk5gH?lYYWtJCT\_\U!&989m0]1AE1=QW4U06I-m#*:[2Q\R&qQ>_X^iiOTbeqreDP*
%]!7qO$,iEokFp9c.'=_M-e3C]R29F,.QNPE&9>IaHtfN+_\4^qECN)=dP5&D,"r.?F$1F(1([M,Gc6)K]2Yt[.5me@X+lArbg[E5
%.'odS^$$L)LUP8GAl"2Kk,H6mq9mdeRnl%&+;Pc)Jfq<?)Kle9qS(SGi#']+j6YQ?\1%^Y:RWd'A&'H^eS=I]#QaJq=Up1L&+SU?
%HRpFtC)X`L0=u3XfEp94EN-ZKJhBL*"q"qQVh.?C;cD&q44/p-)E8an)-03N!QGr>6VCDRE5VjRQ7f"mZ=K*?A.08UE&)gG!EF("
%`a&,'0F%=`.F*IN@os_9>Y;j/5\"m12Y=RVX%b#eT2V/#rJX1.)Qe8g-ouE(XWF;(D^)EbTR;bZ+o;4-$QEQf.,bU;T:a9f;";H@
%T*YdS;?9VaidI4iQjV>Xg.7Ibi_tnGZcSg77G/\[m`cP5c<\XFO2P(k*Q;_t)!#8$&=G66(#nPR@,Qu=U8F2S)WIXm<,9`:N'aqV
%mXTnq3!Ni(ccL+k7C.ma\"G;7\V?7Qp"7N2=DmHDjBfcQl-/-%_(BDj>h)'Z7o`D&As?C@]E;4-pbDj\N2"pOna@3hATfs^[j*ke
%-bl#n(35(V4L2gOB/#Uq*(XsJFU_>8D>pm#PVJD-7T/gH2i*p/,>Pne50Nn'^%0[>6LmH=>.s;.Pm"?[BPkVn/-liNQd';'5UCKb
%;&6FiO)n+hBXC[nj5_hG*tndhqZek:*NTb3jM2M[!,+AE&1[0P[S4frk/HY++ASmsfS1q,e[)_IK$t(77X_abfWBH+E%POYdR<K=
%D#pF_1]/89Ju<)Bm[Kq)Ml!Vb42?ZK>52.Ko4^1)D-GrD"9u-rf=G'j\n<iK:udD+=H"=^S1b)^^`3NJe06JXYA+W[TO\H0K7DA6
%7FJhRM`Z+.P>j3bk)AchRe&d>Po^^Z"NZjYJDbU-c/M,=FDrXJYn*tNTBc5F['W-b.UA4F8gMmNkA'3cV]m$>ZF<3#qOg.o+h0u^
%=Il3ULE`gr1=5"$VrZqpI!I!>8:cl%*aIHTWW>iDXU75A,k3q_U>C(onm3q0S3$jmD[]o@\IU?J4PVVO@al'-lo%l6N!J*T&]8e%
%JP]"hT6Jg/+=k099PgH?MuglXKg6b]ZQjaI0fet@Qb;@+clSajP.6d&ZKW7T!X]q_R]#S:>se]eJD`;L>`HGJ1kBP_DjJ(Wnc*1h
%c'D:2Z@pK:0!fj/&=O2e#`)&c@$]/q"Id@2!eD3-E6d/"i]$2<0D_QJqZY]T?_R=nXj-jJHA7W%e@q6\a+/gWb1o&Z-'ad!>E24,
%cbA!$[6Ed:Q_sCGM+niHVU<J-AE9JW%#f>]\+-sCPqR2_K7+[*6t(ONLH@GQc:4Q^9q`M_+PB,Bl*Yr<c_ts3Vm?B1%to.\\CXoO
%>'8&8;?7:\'uBL=0UGEdSBf&*7-LqWnotP",`sM2%g1dQOGZ[j3*T75W.`Q,Gd),R_&,TUVK<Q!H40^a#ZH7]&!UWm9P$U(ee7,\
%J?6'Rc-aWS`II/@V,E]c;aN<=?a`)H9`G`a!Y!I)FX4(f5cR.LS>sL\:fl#kPh?EY(9WOM^c:&`Nt.)b=bCZ7a=qubmUdK5n.N1#
%KIlS,ar(3O#"nc;'3^cp[F'C9;Cpf3:gHn2Jn0mtU%]qNb;9FQ@qVJIRg',TT["Td)+-'S#Rb[-/&i<GEtoOR%W9HHSX8iq=D#oM
%Q*$,lY/YFc,)BSknNcPIQGAMS6i8p9AHO&0D'9\RNHR#J)V%/R/MRc?WQdNC[P,^W@ik!+k^T9\!]6cV1'q2`.PMZ_MQhkg>ADGo
%))2;]-[<>hjFYX,c65k?L?d4I99g*Y"I3=FWB(kkM!'fNo&9Q+(ri@+Y6ZpQM`@;mH)t>.!KhnT0!V0XH9D]G-ToH1.88#dl1'Fl
%&PiuaHDVoUm!je,IY)/e<Z&;0n5i-S0lRjr),TEK*_j!`]W3%'"3D*rJLS+RC-^`UB`K$jaZpBhjlnH4+2FU'Z](.$Ts6+On>hF[
%94<nPgX.,]P\Z)r6r=%;e05!L8iXQS!.tbcNJ4:'m2;$e-DDEOVPlu$LrNF'OnRoaO4Im0,H?K9`H:1irX:Rq.J:*""D_TogD!op
%1hn_`(<+a-8C=@p0(jF?-Z)72/fA@Q"XcTI.,[q[BJ,9=FV-9q0O9LmZp;Kq'ZCF>`2GnZ_\-pI#i#R,%O]q2"XZoY9WZ$"dI.<(
%0@G&AEE-Ks"S54M491-TMFOA^W"TKoJ'EQl0ea!m0$1PS?4lRWE.]d&#*)Lu&=B:*ZU/*+)L'KfCh@c2P;&_6@G73jZq(UQQdDHT
%cmV=:O.#M=Zug7&M7<.ke0+l2,+($B`=Ob?;</O5R89P*!6OHlN@>^7"kRUZ!Oho3WnG%:`_XJs+bhJpfKgY"Ehf_WQP;60ePnd9
%&]Un^5+&b)]GPOC1)7V)nRREQYU)_Hi*%o]looZ]!4$C-+Xg4:`4/Cd@LHr#HA02!pa!J]"2cIR[g[li.#uXUeNs=6FU4:$4<MW@
%J=(rnNKFaPFr)`aSg_s7;.u=,)T+uoO@PuLL:/3ESg[FE>7<!s1MMD?#efc)0Fr)c<6JVTq)`gHNbg4KA5H;V3Ctcb'TKq\Aoe2e
%fS0YV`.2Giq6gl]$O`dNBb=rIQ3HSO;.9Rkr"BdM.l(cOAe>Vr&>k+9F3CFN"9Q1n$IMJ%-idZ`GC+GIURmrUI#5Y[ZUd,gSnN60
%C,C%)@ZX"sk\,5]TrKR5i+eMP!>^FKn4^Ydg'B+YQph=L&A8Xg.b*_a.E!YN$CfQYF598$$$5K$oh_OZDRpAJ1J&!@7CTuS&M3b,
%KtJ;Lr+eE9*]`2tR=k/AJgO3\3>g%1P?j2-/lDe/K4Q+Tk_Z['1'_teI6/[AK7JpM9F&WY@T1f2($'mTcEA*A1$5.sd3DAth&\nf
%.!(V=b`T*(W#h.2%LH)kYqsVo3IuqETYV.FYF)tCQ/7=pn\7e%5:9u_Ho[R`d.#3Bj`%9))Q*Cf"Y]&J%@QSR#Wi/Dg#Wh._s0XV
%>H'/k)msg1-thIY?p>i3a2'>4*Yc-^S)!R*QsXCClo/lJS06/u(:QECgnme^3LCC(/18?$970C@A';]D(Z>VSR#X?=&UO5-G$YT%
%Lep#XP>i[p;c(ajLWFHtdc\\loWAbU+_!Ig`$_N"YT.Q2'>kekNdo/G=?36mR`-b3G9BJ3UWVOokQ0cfPtMP:BS+CCX;.$)$WIVY
%UVb(^(82PjV'CSG.@1q3hkZL[.e@G^1WnYdUG2:K_p'"=^j+T_-^;M,*hlA@a^M^4bD])F2b[s%%3C(N4C6IX-g-&0-Cu2;cO=iG
%9I*0Uf_6q?2T4"j_e@%:7k\53"u)^VWY4:c"?W#V@?q]C9MY4'4EWHjjJXY$PTk!Ra[+6L):07LpH]mplk'RNLVF_`fj[Tf*2^W1
%jR@10KH*OcZ2:Gi4E=G6#K.TP%NGr)O\H`Se,sW2F25jSQ/7.1ZH+cO0$IcNd#a3QK2C'n"83dFp[ab'EkEWM!lZ%8*)c!_MM">M
%T]@\DO''b-6L<,BNZuLHl3s^S89lu>VE'MRoPc(MEtgX59R$^*+H^I+VL&tE%elsLHlPP7\!`mpcN,5fab]=p\8Y!4!=T=1qLr%a
%Vh7AIaU%Cp+EG-Y798f:;1#Bs6`r/r^54#rG=-?W3<Z'I9XcqujKOob[lAr/.qL&X>Z82"SXhtTWH\]ln`+"$;-45hC>_o.M,UCu
%^i$XtSD&N2HQ;Ie7Z&^?[FQ%8g>O08K>NQP8fTsr8eam-ElT>T)1DN)fQ!>8_du`d-&kQ0N&kiGQogu$&p#O6cuHjfT[eoU`rTO6
%YN;u5a!GWuj2>qod<SIG3$`HJV*tK?P9:c@b]r1G10BPU7i+l.VR=mmnOQ&U&[5ZCQ.b[Z7u`/#+30]M2%D!2(q7:Pj5@4T:)S5Y
%.QqNhE5j+baGk8\,KpR-@`BQ8<+:lb(1eK26m;^,VC0P,YWq@-'oXjW#mt>#Rmn`P)hu!Z_DiT+bB0>LmkVl`TbYMc(C/J%qhjFQ
%iB3;n75;A5#^=?;GJM0dfa="=/hUtH1XY3#A4OgTb<46>2Seg&#?Vu*J5ghkMn]<uL7YG$X>l";\;!&CiZ'4R6H/I'<Fd7pGeksr
%KQJ?U6"`NU0.2XppJ>G^S8c-`0dI4u`8UUtLC[2"#VD%-A0Oa<?T7>)M8P/\hL<@FiXmXlR3Zc3&4B;0#=r*/AcS#5%]-IP`Bd+V
%0K-EE&XO>"c")Vt!pI`Q66$UdV8,h;#Cd);@Cji$"0.:!H-Qr0'(#C4*Xlf3_^03jjR@+[U+Su3G.>ID-0+3.TTdQXs,G#hM-Yl"
%!/G&X$dq?Z2]Qp3H>(7$i<WfABI?p3E%$ts>0LsDE$-BV,K$>`4#M'j_]b<6TBK5a#m)>WTTKu?-G"n8Y]-DJL^YGe<J`Eh5=^D0
%a,,Bom%eS[0ZKi.:j@X<JN5)?,&m=i*>9LQr]6P^%]=:\n&lj4@D3O>(uaBkJ@K!I#`gZhFd!@Xk3R<t+?[m(?T9/J/u[=Qp4Ia3
%]WmcJ6s+\Q&Ya+FqA][rd&S'Z2E3h=2HMDR%`US*":bV@PELlUAW.!,,?nY4f-V7QGQK)(])hF%Aq2=CIEV6qD^Q3'Aqt:e0nc!q
%89]=N\I7@e@96I]Lu>5l8JVkBjtVf/#9I@;L/&XHMpSk>i$!7jB!T3>lknH5!Y8.EU.#+oU$ui;^d/ABL+(ua:!uij"p'eCc+VW1
%T*Ba6k\7=)!Nr0ERl]>'!dKMibF/EMN?.4Bq;3)PNo]tR<.HOn2uJO3(QR<XA=i08qAZaqH42rGd&9J(&GV_4"AS<n9]PCim'iD@
%TRNB0*;Zcl@g>MLUGYqGX9;^#M-5/LCeUK[J_sL[NV@9:Enn-;#/>342]n=qfXHTQ!>,iTI=nhZ*cW1m*C@@c@sV>h[."Rj/k/^q
%'^$#>/_"tMh.adl&F)?1:eYt,@BAntSGP&51kU2Yl&9Ms%bN^r.5Cu-:o?/Tg+ZC],3O_C8Dg)Hiun^6I;:7k;F`1'6YKX/H\O63
%&9AQF9Q'qT''pZT:AKX3HHO0G:qf5IU1t4:I#!g.ceU1i1,Z,+.t@`m*Cf6@Fl]=@%()A:]IcKm8t[]JPOL.Z@Y5!^%Z</+_rQ0^
%@Rg<gm!*GfCI.DF:A56Vm!tVD]n*%Uh*(.ADirpEaO/ig]-uAYHU@iAf+,$oa:9RXf,NKMAFAi8*l\i!OZBAs+A5TC:r]<I\9X@j
%(ZQX#\1=U$-e$gDj[a=ZfYA&6NqC>7@T&[1'nM/XHH@^$`<rq:/<f6+3Dd\6n@ZZo_T6`Ri$X*Gj.,6@'jscn<gY8?qGk@@H&"8c
%G]8nVl'>s0H%R1Z/mo[[%FH=iM!'G/i%e_`*?]:M:VsP>RI_1R.b7:4J@r!`#4e':AuXr5ml,j.-*"l"`*e7AN]4Xh8[U8/ki.A+
%Mk&gerf%abiS\sugr2isEkEP?-"h7Y2tT2FZH^\b``*@#i&#=4g6(L@/gA)U>Zi'+Gf+Kq9GR.bR9o3r0])T6b#m%7)[]rGcF#"=
%)gjY7N\[EM@s"@Ndhl3qj,Jj'N*P<YDtFFVK-QEH7R!!P^uRBY>Y(_[B85rrNa`631bMI4d!I.Z)a.sJCWn3`kYn6kW^ZHt/-822
%g[KS%6%IpoSDoN7[tqb0'Q<IYU5VVJ`>bBA.@QZ%]EJEi@i,BEGf'NX$t9I\)kFB*`I`>%!l?-TLc7as7C44o[ihp0ZV606pe0"%
%9FgS^cY'V,4"/sI9MqFPif1Zm8=sK.DbRr$n%a2.P8I?<1#A9!"pu%(%4PuWG@J4Y@Yib#'Q<J*a)F>.j,G*ZGa)s`GiS27Hs0B_
%!LUji)("<fK9ZOaZZ_?fR,u\"bV@tC7%JKqMDneB8?_ru6+f(37s6\C2s+!`$fMQ`d=`Zn\&Mk;SDT=g4>\j8KK%B`S^j59D[:s3
%8\k_iR_["A*8lhG@g5+Uq;#G&V,q%[IQ'7Jcld7]mm\t$0YL30U3FKYmhisdiSBS\q5B8.%F7H[hV1A@K2GI>B.Ko7U"'aG00$H\
%08HHe<]df1X"CX+'RD/C@MaQ_jDKbTQ6jr="F"Wi)@skZO'pG3=Bn>_`k15AR_s`#6Y`!N[aD5YYG%h+MX8>Ej;Han,^'RZ3$HX&
%20P5rLX:'P2r/$jH;J)p].%MKbjM=HX6gHk_5Knh`r^2d>k8uWDFgXEiJcEK$#j#X-[&u$B74"&DG8'+/5GQO0AtppSCe9"oM/?j
%Yo?Bk-n1S&D@GDfa8mZ36^8MIfM:eQQk=Gak/_Fr_Ot-jNpObTU(O;HAiD%eb`do&3Wt-sk]18o#&p6^iF$h=(laCLVIG.o,,dK-
%)cPssRW`:%3n7,p.`Uhp$_ia^a._=nI8NKI#IKu3ftpfNZl:en$nf]jTk?ke:2Vut5P1+3`pG\_EB1HH&g@auD,IngPrc''C,[JI
%a:5%j@g]nHb`;'['-DplLH0.88)A6%2]Ai<]lRSn;6</$(67d:PR'F0@b>QlT`>9Y\=4h?P7[n@j3)+$0*QPe!kj*$!UdtND:#nH
%K=e,B^eikr4f)8JHOJV'Dh"#)V5#l!.El<'%dleLLL[bEE&YA#ZZQM`h<:P-V[2=+@g\b7G&B5cZbne[RKXGkU2+5MnXC6h@)mFh
%Vgjg5dk\fc*%8*C").H2pZ?[/]2=$Q*.PuqL1[4+OIY'"bp"\af&krp`Xs,-XDo)!KPc4/gJ(Bg18CD-ghss@NeUuSWM(UX[]nS$
%SC'=_`;1m].[B-U[MsohHIg@V?J'W[K\+'-"pKTJkORAg5]`Y#Z&%d:gmu4jRk8G8>*eF'*":R2!tHoW-FR-?p_CqpCc@*.Tk=qW
%G2n"4e?=^;]2A4@3t31^DG3MsO^l";8k?7lh/B\*RmmDdF,7jnR+uR=MPSXRSD,V</d1WDjO,/i(QkWYi-&V9KTSj3\SY00HHto4
%'^Bl1i-%JnX>6FQj[+[R%2:.uS#5,;S"8:C+/P<aEGd_*O](3E_fiq[,"En^e8@A]`=OUrm0:W6Y+luX%I5*#LU4eP?uVnH`%2Wo
%=u:bg@CtV,%o]c4]-0&M/75p]5QZWT0kRm7Z!>s6SNpfM4XRF<k"?B6-8X5<PLhCmMpb=)2^%EQbdrhC0t;pCZK&QrN$Y`e;0f1A
%co?$/eSQWm=P["-@s+hgk;O".JB+B-Cj&de,-g>B1E0oMS"+Bq[tE+G-;m=B+u<"ucKGHFLF@G<KPok91X7>=T7Vn=ogoYWL'2fs
%Tq0L=cd@AF`oi)c@giX`F/pHBoGr$kKjUFkiS6]7TiXZ<2E*<s-kOmgk!g2/K\GnA5(a/T7:]eD7:?$c4-pm!EE[B62^CdnPQDm?
%J3fTU].GG?'!`MWn;J%e1O*NQRG<mSDMAWH\'/@uPK41k<eQTV,.GF%Ymnb`a?$,VEuqg7mn`(*DLf*'`.N]^NN%kGNiiHQ**rlo
%=kk9RRaiB+DOG8EN5Q0K?[?W0@q1lSEX.@=>uU9N5DJ-O6[3>L?kdKl?+eJ1!TD$+_DTSIE6C?XRNo>95T"M%+E1hq@+"$8DJ3ci
%%6/hV&l>gAj0q#kd%kSi<+SJ&i7mu"=R9nr#%rtQ<qmgRkA6WgK*/aqW(IukbdcC7].:aoBrh0+9F#]EQ'oh/R8'HFU<20pG=5#B
%'"8H+aoe;U9o8?nE<b3!\Z:X@\#j\h2s5$F=9kE/EniQ\`GsXOd'g=n1H9F-2X&tASBb6kk2-Zu[[#!+gVCkg[npQ7S'$[K%a;B$
%q,<fh%6CI;ZI"[Eo\X<5(L!&?8>\EZ2sR*?OCY,&UP?bPg"$nai/WMu02C2T'LcQNDL/DejO'3rK<bs`/DWHKAQt'HE!(l3K49L$
%_njtPPse#uak4Ub@3]j52Bi]3:;jSMB0bCn\oYkL1([E>/#RS`$N.>U#@e^"'k9TJ@iL1.SelFe2Ps;OYar%YpOr*@:uaUXM"JPW
%b1M.n3@.D!l5)4adJAYQ0aD2-PL0nn1Ua8_19=SGD6u4L><hJ5D)@$A@hWKk6SGca0ZH#d0QF`b&DPP72"6YQ[OqHF,IZi1f@XpQ
%Q4[50:;nPh)cNsFP%br%\a8XhN\[u$M:dOs8r7,4D%*VeA]6sfL72!F4&4F_;+RZgS?NG(+n^Y4&@O1\f6"$CiJNLW-Yu_]LJ!WK
%/AehIR1ZmtH=oA'j+M8?5mK=R?lNetW1%eC[Xe!k"s'@M"E5'p<Q>-mL&k!HTK$<u]aJP-0EZ,Y2q,QZ#@JK;ooP`a$/6#t7NqLW
%**o=@3'$N_i#]qB#!e.K,]JkdDm:`:;DlJqf1,?D0'8\,NTMJXdGT+`9Tb(gg,)g(:SLo?^'b%c3F*T=8T,i^e$Z/D1dm6g_s]o8
%C2,Tqg7$/=kVg.5";@K"MW;*EKdtFr>oSES6qYk8i7`.p%m;D]N<jnsnZ[n7[1sG_l/6;D+tf<(X0(k6Dbeh`pai^<[6ZUC(VqnC
%Mo&W7*2sC_6JQ,m6u@Y60P1Bo'no/>1S-Mof['b3_eI#:5Uq[#a&?UBr!5#-$M56%cDWnD%atV+)WE5+9Nr!Jirrq,,=@G3<*LVb
%ft>^fJ[FB!2N"reO(]OFD+('OZo7bYTXQ*I=CAKa<$N$MF9r>K%6bJ>>N>p(3%dUg$O:?8\BCIrT8eXeNHuc-;('-qE)l&mm"du6
%U7CjlnFWG`_$lnEIf1,\c.Ub^mKqi;B7kC@6<Q9.)t.r[j[?WiYg/@SC,U_m;of,pAkS@+`/30?<FLuk".0Os1]WKRhh.C5>37g9
%)B?"1q8H+PQ<<p=$-SXejib*QOLFC!AXh:'EDSRY)lWNe:,[@2i#/EpP7<eMG>L"d[`%W7kE'M90;CI3fbrHULJr.]2Q-V-aM"lN
%F$PTGMsQ+5fP/\`_?&>o4"6,UNNT5n$c6uUYsIBil^KmU)iBCqSC=aZ,>1H,M@GTJE@m6XYr.AF^<"[RR`t\[m:^>*O[^^):<!JX
%-JC16(`S="@@j,qcHcR')0%49`m,Z".Q/RAcWO4`4C:C3#,br%,7kNG%=W#)H#taF<J=e7_3ijna../q[`/dFFs8i7nBc,offTDq
%U^$7aNLEe5h(`IQYq[+j*h8$<+I\ZX$Sk"(_Jh1=,W6o`#YErFCrC68AqVD6"nQ=F#85eb7`NB$'T0lh9Pd"&nUF:\2KD9kml1t"
%O1uoulU:3.7fl((1;q+#E=i?acG[^YBADo7(&P,/BpfE[1)1`rNY&f;fRdRJ)A4Mn,W9TGnFgEg`!-N8@#/XB3==&anCWWiYTZ;C
%@7Q-kL?J&fbX'.daC/\^72WJQLt3Pc:!Jt9BaBEP4H(s`S+;M'i'a_(LLJpInE_uJ<%9)l"iEfh%X\XD$QH4I4Nc4V>,+fWd_Qe/
%)[dIB==@u"c6M[^:$7`4UlqLW0nk3H'ctjKZ?R<M$QC<mkWQhBKoIrknD7'__DY=4/8TQo@U_;))l>(@c=!r^62lbg=<0I2)j9I!
%c^][u.H'IQ0j3-WZ89A*/I!$p3eUOS'K-LTkf(]/KT/!riuBI`//p3lN.`dM2p?4R2FbI>P&)LS@qp\QV*XohOFjMF,@TVQL_2TV
%&iPWB*.(Df&:m<[RilN<ThZ%,&iQc;GS_,c@1*nb(oEnIZkTa;W8\?p)tdr#,$Q=/d"Q2h$R]B3;eE\.bYH#E3t1+D3!gN].sgLd
%@ppU?0#G&$RuJLp)/+s;@ppU?:=U`qNV9TtJSP`22S-Pol&DsP0d4c^f.t#X:SL*l3scj$:K]&!&iM_NcqCr0#oiH^7WXZq&T*BU
%'2HEa@ob-4#@)mT+1@rLfjTubJr7d"Ye<mj$Njgic:LNg",)ZRCl/4)+Dd-2W?T,LfO0B*ju!AMRpr-Ld3<"olQVm]N.d0>(l7;s
%@8hAH-#A^J.8((Xa"kD27q/7F6,H*T49qWs(g/+</W#[q;%'5!G<6,#Sl:B\('tpq5QMXZKFMNJ7M)hgYT]E_P`i8uHq"La8D';]
%-7/s()j2XaOcck&+)MTZ_T%oM%-VMiYYd-LU`5=4"Xc[&h+3EY?"SZjL2BRq1i2pi2:ulh2-QZODh4I6%@SWO&"4A)Y*X,H[OoHn
%_mY^g%3&;6l:Jd)fR3HT@FtWKRS_<iJ-DT5"6X(P0daL5`H(al</l`pF:j%59N8>H"rg>^BeYnpK2'&K=cY8DVSnMj3!L>nTZZWZ
%?rIkW\4)d+Yc4aXh-<85%Uf$/fcB#e#9*uL+ZtHj*,I`a6='lZ@,kMQc3F!3MBZ"Vi?2r-ORZSBK<Wa$L3sU=#TN/)aDBc[CeUNa
%*$o$'!d0+!PH_;.n/.^[Yjhjf??XRafO.IITree;2A3qP$jKGdIGepD@JAq]/Oa2)[S@Gn\t4`U!Xr<L6r*O>-u:`Ti!&T['K.3]
%`na$k@g[Ap7q#m7H<3.(f_@pX+Q=ec1rA/cko>D:G++LJ7)DD"=CbKb0Ol%h)4;ad4LCc_$Te[L9'.C8h#9-5ZUia$DJE8p,%3ho
%*HRa(%4Tf5Mj(A"%si%P8D';g?,fIg'Q0iV(()!d+R-!Zp8C2tm0k_VGF7gM10nKc(,d3>M+k:b=P.:)LF(8W@:Nt,H;AS"2+S\m
%p3![F;=,!4W>]stiHS<X_#_E];And.00NcgQ/eNbUBUPsI03\;,^GmslnGlSi%Z\5d+rqtPR50lfc>-/#.Db"/g^X(Aeo*EJ?:TN
%KbK!=18CTNZ"A"S(B.M!6dS-6<mf'&IuGS0:%Yj9_J,P(CC$CsLFn7p`pk70S9teF/SGT;J?LtgfE>Q6cP\?YS0]bmaC#8H)A4K4
%P>SOBi$kI*b\K>Xd_\AmCQX;YRD`l3d+HmY'G(=43]"EQoJo<rKDn5`f5Sb:#)/OXe@6!*a'D&c"sSCSm@*XE9\OWV?OuRT?%]m.
%QlJ*N)BGD8#iVRp^f(\NY/:m=3Z7$?bjTK4OD?u2$E6COCH*0/k@+j>%:KclWA[7OLDf[$6+DY;4QtmWlS/'4jFD#*%)^i4*IMXY
%rm=,lD@NK^<%D?D$"@`?p2UDm3he?t3_*DLd813TA8@T[U,p*@E+0Nd@BI@;#)RYrC(1tD?n!*mCRJl>-IWm)6U3M!>/Q9GmcP]r
%K;XFCf^KSs!jQsDB(;t=Ih2jX"(r'e*9*@K1i)Td_>TP7XPkQI`D[#b)O7Z@%D`&S=omUta&p5$GR'@`@LYpS914Ll.ZlDV3Pl[U
%_eX-0#\u-PQk:AV6QBO;L`Be3mXZRo7bH^%6[^C>S)LEqLIS"]HSg5GGDJ`Yd$@/H!p31"2>T$qkckaA]qVEY8on+qC.Q=Z:(FEb
%3<>XS/TW22"'^aDj+OE"JNBbFaN^C.@1Fc+5c_`_'XpKUX9O>5iY+>X>%0lC#I,2025%K6@(!p%@%::-$",N/ii4.:"7S=Q)E9Wg
%p#E8kpmPU=X$pgt:l>oU<J*htA6Ma.``)M<:,O#ZTY6CrWdte9PE&SA_otKh$)nE(G;h9H2$BXMUa\Z1,<?=*aR"^t'Cs'JeW<&*
%7<Tp^$0]Xn!*"aLN<#JE%6Qj[$TOa3`3VPhe.>JIj"=IC&nJlhMmB<NR8$umRTecYK:GUEa2/J47dkA^.2:<`V1u<cgbLjT)A;ND
%"A5L+q,OC(-oI+h.#5TK;FgNW@Rt5?f<8U,[=kTV%7gpI#G+2%*]8mp4L'"dW$M`B$Uq/d8m"dOJM`!VK=)$qlOFc>L53$ca(/%;
%fIcS>MHZ\cYsTdOZC>SYeM69%KYVbJcCni&ZVCq:ME2SIKe89F%n[lV6EMGWH'gl,8/AifK-R<pV?_,A27LX;iMW*eQ:[]LpjEea
%4tZ>=4"#DZVSOMnH^ab0RcnHJEd0sC`e,$JSdCUMD-83/)TIQJ,53YT1^(]>MLnd)@;n"3L/&Xl&ZI[!0rMo_\DkSDO\6"N3/rLe
%%(0pRV]jtoVP0n9:Ot\TZ!6>CbU3;-DRd.(VO=nSLJ:ETCCi&JF9obh,2s/L)JsYB;#t<(K6`coe8j+sqP/diMWp^driS@.#"h,f
%]ekkhVV_aI5@5jiV4$=BD6W71452Podi8g0U8B6!dF'&2Bs:*()CGV]""T%21<hf-&eBV;@&AJlJoV9t9EPWT*kjDN1aFJ#LSZ%`
%+u=g,`&&J3U-f_E9Z(j!^RrSfh2ur\0sf>]k:<^6N#N6#<V,6>P:isEN+Bj>&`>0r(0arUW'S:WQA/?I'B*V=NShssajNH-`R#J-
%=BZBj`KH`A%FJk=2TW2?%sTGbTLu77]18>hV,\9Z@`"jjm"&gR#?+f7j9mbDB&TX7;VFf`&>aZP$'^1^Hb;t8A"pdm))Z+5:)a%e
%WJ-/)WWIgm;OFiaVk#-Y;b`K5P-?go,"X:)cJegqK7e<"j/$1Z;C(DO`\Go'^b9*&8[A9"GRfj:\.]T)7Oo*5:3@\T!UrPH@&='@
%Q!`Od!R`Z_9Kob=OB*YCQ,F!WQk5Q8J2A1f"_ic7X`@S\_agco:,n8p`p;f!Bo!f>85+>CcJ[+.=c-j`N#`?[UtCtCFL6lPj5am,
%?fH&F"%TC#<pes;6a.?>@ob>E#jG'mS/Mj;NQB?:(,Qq.`N[=?`og=K6q.9:)sM/K@^Ka^/e_8F`,d.:RIR"+r_Si6E7"YR6Q6rA
%7>#LZNDEueBP^rt4N*+X)=a#VU;80OA!@iZ)@@b3@4*Fk'>dI;1_^9AHT<BU$WA-X-RB\n+N=n38@6A]JN+n.rZV^^Xn)'l:5Ds8
%nX)n#k,X+J%h67bPX*L_ci@j6`\aC88qaGg*H5]]:-^Wa:PI8>bsmFWYBiVV!^jj;(=HG*(E39BQ6sL9.j9A0TUcE!-Y"WaUo.J?
%&EA7[-8Z^J+[4A+KU*o&dUsbt6-i$e-tbl9#nAAjQ--&P1.+R"87GDV"Z(=Z1SNcR"+#/H;emMY9,7X<$6@Nm)lo//%<sL^2("p8
%J_hZp((_Au.Zp-)Xg;E^b!:nAH-i4s8aN$8S9L'F!i(AP%8:#;b]4OW5b.%4!K72aE%\\\"YDMH0,"MK>+Qp?-toF!L;QA(BGBJ0
%_#coDc.E.bU[BZ`6QBddZ]S;+gH<=s`(ULp,Ts&A!J(GK(Z+>t+j`bjdD?Y$H<;pprcHh/X:4;GURaohs)$mTq(&$G5GhXrp-hZ:
%+Q;k#h9(ieogt\U!LB<2Sk3X4^\muD*I%!3+[gh(?gMB>%J$NKs0m.BhsgU;X/!SmG1jZ\4,`gK:JoI/+3d95r"pO[m+.&H^<sj@
%P8\W;iB3rOX\nL)[*;%cHFDA5IY@acs6(<pj"_54(MoXSch*^`(pI7FU\7s[O3#r$Rku'5!RJ86dFJ'+<pj$pe;!'(=(U/djUW0X
%pg\\OLh@giND<K''L&]mXmDc7OD0mTj+iORr"rcUg;Ol'e5*FVXYM>7U-38dfP4C%[HkJ*lh=Z6c&m@t>u`4g:$`D%`BhCTQ&O$n
%LHbBFZ^<Bf98-R:I)"5cNEYmhe`gMV6EO\+l"ilXZ-CF!8G]u.7D3>E]#O&dFK:lk3g>,!PnQBc=_lAH.J<Ak>kOIIo=4&ge*HU?
%FcG7NiC;nd)-njQUWP-8<9DLC8Ybe.U1#SDa"9NA:<BsMh3,%teN;;bai.TBEjJiV`](t.(=6*=G/rh3rH?d]<NN9c4_nf7;(IC-
%A&PXuQXm_]C%l@jGLPXiPlcZ)cO6tK1+JmZ9U2*_lHE5<J%@*GRAk3_<GkE.\OopNibmed?0fb"\Z&Ef>Sr?q<0q[2DU*@7R4^GI
%j^u*Z9UGWXfB"469:'^"SLMtJ!oit$jq>[P7O)9jbO+3%`UTJ1IW;RA9r#Ei[sliU^VRqY6=TBUb:2J\)KRWQU#ak4O/lU+`aI:k
%28rJbY!2(BC3hBb\os8h2nKoEAN.eYH&V(#Rl\&^!m>(QPhf&pM-msMPtKBdIkVh=GcmZHh554Y2aA&]Dn],]dI(oM?6-/W3;/a^
%%6(^]Q>^#<c@mW6DpYWM,pQdFh,VOYIC:F!6e1CCN7,gUe@bS^f7PfKd^^37Ut10QhG+$tBt'%eRqfWbA8E!&?b^-`ea)O.Wh8t*
%PU[Y@kp$0%GoQ_HU/Cn0U[BP@Wl9WAo`;m7BDc!TpfGQS\TY+*5BLPs>5NH]aKqjlaQ/)T'RF#&4;5J`I_3LJ0:H^kE[EKn6Z(P!
%T!+]*9\Kj36B8%#?$$9]RUB:"mUgpta#H4eCsVcOolS\LR-Zkm1.4.f&/k5JqgAsrokpm=D&Rg]Q'nZNnI))7`:&\F>!Jq:7V[ac
%c#Ge0i3-7/^Trr[ZU9e4m]upG3L/$Qqhb#0qr=$/@clc.oC@193l6+3nr[2,A]!hcna'bkh/4LLL@M1"1Tnjon8U<mAoSd=+1EBr
%>spl#ol=p-VF>aLn`lS#`@IuoCZoYrbbn(VFO;gAF!g3bOF:Q:+03oGmWPVt7f1lXU-=-CaS/lXArG8o/mc:@"D^p$10_Ej8^d<V
%n0S#;CKAj%\_$Jtn"1S71<p1i`Eoe+0JMA6aI;b3rlq58?&6Bs)Vsl!o6T\rqho@!Q`8Y_>Z><=2P)?&'TDT=ZEJ.`_\:$0Qgc$h
%**4q+nsq:g/r%pKXB$r'1\'WcE>OBfaf=34)3);V0M:d"/T2^K=8gELS.L._IW$;Go59blof<PqA2K9Hs%)TPjd+BFam31O[7u@P
%'CtYmGi&?sE;]>!$KFA,#c'TC7'DC[^X]p"WD1\[ooht/j':W-&.EsYd3:<ul^OrhR.T(j-J!2eGonYt"4K'l>u]s!ch^5&D&&BY
%<L$a_iQbr20tn-7e67Up_K2,Yg81RQ)[B>Heo=]iCS8cFH*-^Z\^mt_k,)0[eoB54Du?d<(aZ7D(R)SiFh*sfSE$W4jJ"\H2aAOT
%CL#D'[9IMQ)r-6-pqR!J1#-T5a4<=)1o@]#IAoBD3k,_=ls7OoIZ28G]U,/aa/0K\QpsNSREj'6$I(NG;IH?UDS"M&1##ef$b]PU
%\si&&^T%Fo!6c3TB:^LbTqI[bP:)6Wb"R`h@ciM&8bQ:g,AY`jqD\.:q8Sa*\m_m=SM*V"48GV\WQ__c4]Cd,i^1#B&mplAZ0Sog
%)3aNI;Yj/&-uLLjo0o)CUAQfjS!bqPK]tOi31tXp?PHQlil#cChoQ\R9kC1jU7QO8'N]];l*KE^qP'4gP:qf_b"U![s-]cAe*'`j
%W\;,kC5fJPV]25jb/8#G'@TJ,R%B?5V55#A$,..h0V3\d+]%4i-X2D(EW:&hnXC<BcZb"Os(^iF=;TPl;.aG+g/li_H+'ldBS+pK
%2I"dFle5=>C[!HCR>G]8EG^l*2$4'ICfQt,C0t2qB#<7q=IZF-ZW6D)XD7GBTuSmXDbjQ#\7gJDoLO/*%KL.jkj-\gR8"nB9e`&+
%ZYAJ;1K):=\T$K%Ps09N_e7.S/r>N<%_::87O-O3Im!_kBY^lPBQgkHMaltMc1X]ba0`ZeC9=d=WO53&]]jD$l54h3jU.knb<)l,
%of>@8q7Kle0$T>JoCK".\05V2^bk)Oen:/cN9E#g6l1mq'gj$.,6&VQOT.el^WHM:Orlg$-7i\T)TZ!909[_$IBSP9rs=SNGl2Vg
%>r4`&:AjO[o<7At5KV_9l'$U-!Iqs`bB+_Z9n&1O]@gomM!B:A(q!-;KBq2M(P3p9h,LNY0!&LS;(a^!c@ASu'0BLL_9F7)O)^2i
%0Y5h*e^IA#@C#2Ql>4dDLWHj(<>3,/lJ5XYg,/YDG*4<0-!b:?;mf-p,5C0,fHdBb+QA<-4,`a#7Jb9SIt-/ImnZFDc-CedFkN=V
%s%^W1n*FADg%k(RN<cf]hiZr9G5aQbs8B7q#UdDs.-a]nS=TINW5W;a%9p.phq=Fdm*,4I_N*BEQ$8'OGN9gs+T#S()XZEHY?I^p
%>j[^`JJ*Jl?.<ceJ[*=q/gSqMV)%6Pa``T`dk*LO_j`$n-8i;8ap6`0dAG]Z8n[i(?i)0uVe+oL)f83MC\6F-`+BdjR>#HnQ'tjs
%VStk[]=N3L/S)#[g6n@FK$7b)?\psj%AOXa;PFaLHWTUF*W<+kDA`=cf-j/D?+i,d>^L'I)oj_4\hId^J(C'@ri!FC*Rfo/*7lU'
%>u\jXOM>&ScYRmICo0eS:np1,KlO3..4M91*3p<*.Yg/iN4uW0AS-=WB]DI`A!Ddsebs'A"-Yh3=O#<EFGS`;b+eY(Og.p5`SSI)
%qZW2FgIGk1Q^QfDApB^]?=nqYRGm8"^GsFG0@OKW@:g9iG[XVi[(jfn0,(F<c3u@50t`H`.JuAY4qhEkatn`aW\$bKdbuS1,4SBQ
%'Ak1#p6V8-`jmj!2f->?+CNW+'5m(hl*(IQ^l0.Iih*XNI\3)_^+F3=]uT'lmuNH35H!+&g=p80irh$XPJ0'&85-A7nXmQkc1],U
%d']`aDk%E,^))@b$iN,]0?r]Riu4fblsmc0QeT:$/ueYJJJ<O9W-fCtX]\X&`/"Op+3s<6U<)o(<QF&=o>gW\QCBqF\8;s::%n4H
%pslENWUu-5b_E8tG.AkogRLLE3rUYp!.Rf5ISXN_dX($l*eR-^Vp%!)C!b4[E+n5%&R%'IGn-5[a0jq6&NA89]iK=<=i^)mX"j]A
%E`!]5o&(A(6-BE#*B;%+]#9SQ4%AIXB#j\5ZX_'442r!!1fJ>5:qqQ%_bD.`G)V:.FJj!$cg2K)43")hbfl)%ZXZ[c*<Xg8^@',e
%C#YE%R==:mOXaYMeCPY[m@"tQB):;\%:d,$/6+1uA8e%o`Q%*<[=2hSH-N%%6G>dgi@=-FOaC>u$O'gdDMibdaE3EnJ^GsX;%SKQ
%O/m/9&3$^Wo7Y?!hd#iA4nI='PRF8He52Id<+\UE2E/PlBP7SgRXp2WYLPQ7%F$k",DY"VE/$\F(RH08gMZ*Fp@rC]7a1`6YTu.?
%Dl)3+]%LmSRnLTXf,-ZbJdqQVL7c>U>9#K@W0pDUTIVI5d^@RBoYaK(Lh!$Y?OcRp)+r_`q;9BSb>i\^`8Sm6<@6VZbM(hp7tp\5
%P;V2kVp$-pVZ/oTs-ZtID8ut?g_(_*^8?,kY")E'M21?grOd<N>aKN`.5Pi/T3\.Y2E0+IB%l$6S!tsGc@s%ke)k8rgdE]Php=OQ
%S*P,J\.MZ>cFKn,9V%ZPF#.rVVU!H9\USI=:AS;^S?(pKM)lFa^5#%!fl!.K]=OJ#G2fniGC;6qkGDUYqee>c\BkOo5_efa>dt38
%T9=!JVOf:mj($BE&lZl:(h;[Acf4V=!#afO7Q6.I9lF%g-oU]q4mJ_4m>bMQom^efZ@;ND58nF@e1BLe`gt;rUSh]F\ZF,a9VW")
%]W%DiDED=UGF`YbhYd6N4qiEicF9)LHH>/@I]p0HgY\>f7np^n]+P5d\]6SSI]p<iDf;if_#kd]o(L385;98:\`bnofk.PG_HY[K
%k]Xj>N2q+S>^h!ODFH2rD?m!oqb2S>LT9>0)V:tAQeYqAqoqDS6J094e,QL,#HeQ_bad_Y=P3jaaCp[M>ai9AH,io2gk*P]jS;g8
%;lYSac(VbujgAGu&6o>JfbQf;dbK&5HY/GW6q[_k]#]&0U]WQ73aVFM+.[SuE$]D:I:Rr;$!u7;W"X(kR0c;<U$*:"75L@qV\^W)
%k3u=X7:3]6IDYa2DeI/kKmq1.5MW+f<aiS!h(CV"qC$ZK]e^e[\;$?>3k1S&oeB2R(BS5t<$"OMKZWY;;>q;j3^h!$oR7n^<kV`'
%=.=rF$Q5gVO*#<5T)APl;=!E;g.2s![Q.+PU-.\0URO;<qW@!RA!q1oPI+*0p;O#X[:XdGGM!k4d=OKmCiE:+SmShF:JZK<dS`d#
%M"l]5TC6p'ppVR_I:p@^\%M%o;g?V&bA:)e->Mi,FY:0.;mD&bSe1eFHiGj"5-HR;e'77=)5gnT:&Llr9:kR"i0$";Ws"1K*.9Zq
%-@;0U?II5F7=>%0Lq%HMTrD[8"MOs`,N(o^Sp3lIYHp!DV)g"(Uj1O3cMf8I9RK./RJ<KLm6'_6T"-W\LEpi'!0o$]9,d;A3tZkB
%D^Kp)&DUMY4-fBD]q\h#'2I:5RX0P]4)M&QeugJl2cK%&dJbk74l"YIDL-LVXHTC!Kl%n^I,WZSkf>pLeKcqaQ-Q7I)>R$[/?!e[
%T'nkeG%\^/gquh\rejogXNhufi]tS+TrYYK'fS'#9]2<<RT)*56JAoTIXF/cAL\*1ZrZ4PUh?QcpNd'MhVsO79Z-[Qa6Usgo%1BR
%rh:$QnIhXOGZG)5VH[X'1*fPW+R/F+h9(kh+Cch8dM'WAX_%OohuE)RK>4DX[p3E.rq?P61*HgYQeOsHPNWL&<R6fad[uN%kG2</
%Ac1mb&,eAb2]B):\m_hEKm()5:B#H6WkS)rqMHZA$:HB&/C#oIg5,;c%7ZV%Kt.\M&W[J1iIBfN,4ucKq8LtLDt.^0%m]V*R>qNS
%p?sU2$g-O@/K#$Z=k2r^a>kTB"K-(Mf'G4%1K2A9!rp0OSDZV53i&:.rs<Fl(f;KK:f("(=d6ulA3j/36otfl8jl_4F'!@+K)8)E
%rIDZVahM.Qg@(g`4@c!tqiI`Rn)VMFQji%#APs<9#DW=q?/IMEKtmVj^])FJ\,YQns6m/kqWiY/m=5*#5Q:N*^]*-*rU3Za-1!,0
%]s`st]Z5)>_s$h(>)uqY$O'nO4X2WDot+o1-LCrD\G?lmdeUeqs')Yu?99`G,2%qRm(0lP4:p+;FnT@?#^[>8fp[]q@f)JQ<$uo'
%cVTWiJq'8&GJ%Uuh'dVJK3mHS>HGJt=!Yk=lH.Y-\9NXoQ+gXO^\4/%icp:YkLT?]HV]F[r-K@NCb+T"-3$\UL"Q"-KJc`Q!V*Qt
%iK/0VLXX>L9Y;CIo_H7CKd(jTrg<`5/@HMeWrL2T2[uUDq?!]pWa-N"M'AG;qkUV8*nPZ=9R6E^+_d&ARi(kEc_H14P1^Obr`QH#
%8RE>]I4RL0-p91F/haYZO2'r8?M%1DO^s1g4uL<HV<L#?SGK*4elm$RgZSRN,VNl[][8s`2K@,Lp?ZQ.;;#!^osltHnho-t](%6?
%$VS@Crld[uO#P"4!rBd/]=tG!mEsJ.E7;F/n,0@B$6-aj?PXdQA.3LWB8K.emH+O&J%p)]DY/#^Q!k1L$]Y%GqTkNfq9T$1rn6E/
%?;nC9q0`=apCs^i]gf-rI?nk%'FKR]+j%'>B'>3bWpT6.Be5,.ip#u7:^Mh>Xdc@QW3Hc^/_&ga=]c;#XkBVDrq-($;PSc:C-aSM
%I9NaKIK-P`5:310Umi"ap.+d)[eiJ,3&E,`PA]d`F7VI/k3YML,>-l48P^>qB'[R#---i\&`m[EID&=-XIi<+m2ms>YKSODY/Zt`
%2^Xr.CSG5Sj[-S#@=,JoWU)Os7D3\QF9[^GGIAN@p'gX'qpWi_@@.T(MA8p1gRWT@d,SY3s(8o"bhl*<7?%Qo7>nCh1Y8e;qUeil
%B7krdFj)02PuOm;C$7dAoPU5/gL(!D?iTfNJ,\iMs7II`rBGf1k?n8Z\,X?5')q@7rWi8^s89A+rjVpP"!5YKX]gQ<,&^SQnntVd
%\bI%<$BZ(Z\HZO-cAY5dI7=T69:CL^=]-^H=g[Q$!V*3d$c@m%[MSE+Mf$.3AsU3lpVnH(K.Y>sNC^&^@4dd$]"iuN:>,$cb)^N3
%A9YLu(rK'0S.RBRkM8,QF^^[s>":64XV]B:2t^L*\2(`m]0Df]Dq+Q.W:6(ago1I&/QboMh<8#E5G%Pd#Q;*o9^hY6DXC50poX(f
%+F*\JnC1\0;S>6WH_.k:60I:@[9gJ=pC.Y\.aWA22Rhi5kT-Gal.)5TL?5UVX[S=?B0G7ZXp2.S-HOO=-_HFU"o&3L=050QB@]E_
%,GI6iD'"h(DW!SEZ`Tiac.k2$4gH>eV9rELHPo#lCG3T'RB84ME``d?=h,8-WOI?*H[2[&"@lPU\jk$0rapB^`ZKV)\m4Re`EK%f
%k7ba:=Y[O&RjLbgT]=.U0'sT0d_GRK^;i.jbXE)#I:VuMjoE>.i&NU7i#21E=]F@2P<lrN`o-$@Yj/qSgS*JM*pCq)-eIdRj&f4(
%Y7/``>fG0AoLJ9[$'\R4S&FNW_4!Ud/m_HG0i+Z)%=)lYhj]TK:W7-P1(tV7QJq(lrcollCs/ifqDAdd,':Og/.6K[kX`/LYo_5'
%#)rh*WXD^@d[K7K;<uepfTeB6H[;;HIb6:;%I!2NI2O&jRoJ5-AlF`&p>66cQ[hlDClD]8gTI$?@Dk&gfSG4'SdoiZaIYcZ2l#og
%i)`&:6)R)iD9mj4F.STQN,GOt1]'icZ-F.:.7KIj%Y;;O)7T"aSmA*"O3F.O)@cQhPs3?X,_G9M62L#X`PY$1_Yhf#4eYr'gX_o-
%eVD@]k,KZ*ROW]H1L\NE;&4j_Rk/*Xn$/Y29'bReCfjYIjeLYd.dj3;D<61Ah(hdlaA;,@m7nJrEoT=2be4,=a!Uu!e>RN2dLEY-
%5KM:O9]"WQ]0b/Bki)pdpl1N%XS5*ueWFJ7Ai/87l0q-TbsukojSU&o=:PMRE$up2MA.97B3RI!SVH237q>cMBJ*L1qpkq],V;^I
%j2bfd$qZY;O,o@^8g5>n0B;-.B?//_P`+;WQWC0C`sn\cOUmq`'p,qN`$P`(=k!ll3e"ui_n-_2X4F>7'&WlY7;=)!Ggrr?J,V'f
%a>q]J#0ao-=81+'>h"'W]!:Bh?$Pa:5oUuoO+%bi<#k"T=/_67]n1-5Njm(:Gmh:-eQ^mI8O\hJ[NnQ?0/fW&hdfr&j,^iMC:D>m
%HmhqZp-/?b%[7KMCt*N<Q2]0k2IH*#pTs[M\)",6K$/&/9'\RPltQ]\86SCnAP"6Gj/<\<'N.mrP_ReE2_0\(M+D(!prNl+5J)fF
%.:M>U'dS-r(L1b[36L(@I$cYY^2X*i?JEd$YpenmiZ]TN!mI1^91HSegb:q:%NRX$g\odIdq5rtLra6YpnDBu::c?i7:k5]>^XT)
%9+a4Hj=[jPAY]1K&G3%G\,4J.H2A\HXck:4fb>N,[mrou2JCg/M>J$CQ6U^3`r([*A!=Yn]`u;7%YD0d"5EQ^Ht*etrZp7pcQ$0h
%S%L+BcHSH3gsE!9"\UdN,b(M/H)LqTIR3(N`3B0taEoZn/puMXJg[,4J"a7mpLh`>hs%G[B]dV[baEB;MpY3NRuG%#\BP/gnY=XC
%A2$f]Kq]Xs:N/1UXgVQF/E5tKm:*:%m`.`7*A6!6I.1j`d26'-L9pR<[8)i`[/NY2/lALW4en!ScQ?dO[2TQj#97"_DUS;PD>5oq
%6X"*IJ;2p!(UL59gLJ\\5AOqf:[rcXL"[C=$E#3B9eh"n7^,SDKr$Z]l2C?CG*^HdYPoY_Vqc*TNCM*>.6?Qdhb(RMXISbP.FFD`
%^(7pcRFl`Z2Q',4Om`k!=m_!-C.&?MlDU55P?D>T$YrHl07jY=agoXLDd0ZDnE>JPb["Ej<)NOc\26E5kMhCK).@(C.=6q:4K0sd
%l+/*o)Eco'a,oF#Nl.tX3gZW'5'U5bDCbM?Fi4%3Muh.W-JM<sLpGF/4h'cY@I^+<?Y&>>+2/D0[O\c*Yf-P?;UR)HqG"Zpkp#6U
%O1/,,FG!;C1%3pL6tmh#h?VO/8+hD6k-e-_*p0hTP]sHXbJAA27^OTB*S]dsc3i6+X6o>II+44uemTpX+-$U(n8n*Z0uu+iY;d[^
%1)n)&bdW"hn[D;/g+.:aV&pd1<]!aSogUGOcI=3KSc*Y?6nLus2=uoek$T&kW^,aX=UuE&0J7d`-ptEaGdMr[KJ=EO]PUU-K=ka=
%pM51m&d:_gh5(VPP4]lLWhIu,rLt(DPl=g_;RbKX/.]fd26t>RQEP(^%JfY.@$<8/h;1XBBN9[9K_CtV7IIn'?Ctf;D`71-lqP/t
%mgYQ#7;f.O/i)0So%lL/[/.UZj-0.sB'OIgmFI&N+6;_sMWUE;^Xl[Q;I,&Xs1Ku&)Mi_^Fa>^n17iXCnb\,I+L]0R_'`^u16Tn[
%ouYr,!k_=<%L(]2%)$&PWY7,Apo(SCQdH&eDi9k+C6*Sr2j@$^DsdS"'6G.\Z$>_KlZS&Eirj'af&ntp7q?-LV!YDP]tUm0dY"2g
%ZB>[cj0->9RI8Qp8*"K18ft/pR%sCQpLB6S^n#p;o\_)P#go;k/p7ZI<Z/8:*t9!SM.uYFJ9en?QraM+gZR6ReK7CX],\66453JS
%ZK\/9BX/ThK>K&(X@_J5]@?SH+A">>Sn4=m7ML@pT9Pd/5#R/Q3SXMtVs5rN1uFc.T5=]@/],JImE#=qg?<e[TP((S,s:5UIF*:N
%!;>&jl0iRrC2P.hh)ioSn;K?QQ)oW7>jW&sOYaQ`_osQ3<`*b"g?n0:&8jXWX3;OiL)\OKK^u#N_9<S]d\kI&iQY<HDc(T$QTmq]
%F7HXkq^RtfUjPi(>ZSu!5&1*e7fHoDG_TkU1VH29Rl04$A2^J\.0D]An5lgFRiZ7RrPYK*H@%`D>!L]hU)ABQ]9UH=NdQW@kcrao
%]aT0&,C=(.NK[IOX(@=Zr_u[r#M%&XmU>;)5QCA%=.W;rn*8>kf=S[[7p`5gLZt!eXoBW<nVXU>BiZAVR.%naKt)1'g`ZW!3$nS\
%VsYm@`\&jj@MLXhZ&AM2(%RE^-2]Rt<6FXHT2GMB&QYYgnE1,&>du5"^n2qN1Tm=(46.L,F7AbF\=.cDOFOBK_4Lo%RGF]II#\'/
%$G#<EFr0Ga@IgV0@sC,,XRuqdn0\uO8d3NB4n=YaJA5]Z7e[Ys4GQ-'l)3q#Ab_$Ur^W.b@^Xk-5A=sk;DqZm=rB*;b5Kn`nr;G(
%VMg/T>\5cLL^1hQ40.>YH6="W]_3*rl,9Smg3`WZ?(Bf^9i[MQ(/bBin,p*;[V(u?*db[EpN`fK.N:Pa;tII;Tr/:Wm*@m447h9q
%/FV2^j[.o%7SJ.2M=kV)gX#bM4:_B%3uY^"]Y_7![=1IVD84A?8aH06TWS0RQjAb:oR0WfV1T#9?E`nCEuWIp-]d>Tm$Uj]"U@c]
%1r#f?muE%;DW:NT/:LXV=\PXCI1\$XEq&nt_4TGaDl"9)=0&ri48C=&h^G\I?E\,NgPE.AHNN4:hJ?tZnm_PThJ>Ce17O]uM(Ba5
%/s<WE]a]JfkYR)KmZ\E8qCltALZ\o=5Q=ulmiQfQg\n:l>,epE&^RZ">05K>),;<=k1t27Ab:/1oM$WqLi"-HeCP3\reT"8(!_TW
%Etlmmp.j&Td+TUkE:']frd=5`!numU.U11NOk1ltYsp_#O;<_2ZJMX8j5!U6nCP'pQmd$RqrHLem<F*<Xni]FZ*G;b\cI:3\Q"Ng
%J`'e5'"A=I&k>IH_]?pHoM6INIsQMn6GVn3qiH$)]_CFYVCj*(n91"%n'6A(8ik!RCh<9gcF\+Ep$,i=crP.je(uBRf^)nXLVJ5)
%jgH*(;n`Ysr3>,$ZO/o#@$#^O]lT,+)d_E*lI\0OqMX26L!8PqXV2"Q_9tedf=S]E\Fm##o53s]5r@fuT?\aqCDRKthS<Fn`>^?4
%<kRbE[4Q<qR61'K4iQoFIJnG0G]59^V8^]-YIs"En1):bf;loO_Hnf-g%0*OHQToJ'(R<\>Dni*GC+]:`4L)qp$@[G"MZn#Z't51
%Dgd]'oO<%$S&r@`]R($W4)ahgj7=;p#''+*^@:>LhXRdoF,P(iHWlB[]_Unk`-WQ:3qlqh?KSn%mBs=qk&IF/T=MQp=1f'ANB?T-
%6!Ejq0@'.Fnl9>Z>:FJ4HE1nrn#\6tp:SY0lW8$%,e3/g/R?):qeP3JS2[JZk'W`<dG/3J[lCj%]fMeW-[.muJ_n8m>j+_>c@ptI
%-MblUoWk_dV]IKCcUBcrGB;M3qW;%aHi6!lXIeP:1(OVP\a4aQ0m@lOG;=A?5)RRT2,7@skP^=Ugi\FckUt_ZRsWA++6SMUo'&b'
%/'c\jaU=QOcM^uqVe4mDrM=Sg2ja!Yq\CD<<SpENGj,UsjZT4I^/f[1@bC-JRsNDiq%Tt+@V7>Q^=;]PM/P$hb4lH"lW_*Yh.af/
%GhEH!Y'hfn^3ct<kL4Kuf4R5/S%]^/i.ZQuf/cQ*ID*VpoDICc:1\lg/bqNtJ(UmKLS>#,o9/j\3Nq7%^<UX=FM.4ePd!!Z(QJa_
%O8P?mr7P7lC]6*!YrdHEIZ^,O2gi++Q(rusI/U$'R.'ZkK+$Q"@#KDE@I`XXE5=b@\m#`+p""`MO8B_ONu,8A&tqpH@CLPd>rXmt
%>$8os_:ZWt>lSQtTi$;F.)49mKpTiXgd7o:C+ahUH=V#p?9VX'/iGeL&S3T+\<.GB(LslJ1AT/RY'b5nG]Zr(/J],R[MEdVGDhB*
%W"rN`2Pf*H<pDHM3!cTj/hQcL"%rZ)rG!d%E?AGCSjr17&dRgF;YDAC?HV)@mjqbqQ9._MKBgi^7DAIK2%R$S9Ds0Q#?Ja=m4IdI
%YbGDTbF6)K]_/#mQd_Adeaa;T,F8e?r8R;'SR,JPmro8.)i9ZhgeSp6XXkcWd`QmaT3G/&&%>V`*dYYfh:GVE,o<YL=0D7\QRbjK
%n%hV5])\I+H#9M.l9add^D^@iorZC2WRo[k]h!Qo00F0SSh@JEea'[6YZbl,GH:DjrU"@7rHRX8=a@aUMe`.:+5ND:qGU1`MZ7oQ
%eaQoe?$6,B>]7IYEhip<rOF_<HtI6kd?drK1YLfrbs;/L/`"V"ekSh#hqIaO0"b52$E)LE`VO.RY#VD*!Xmc^J?fcC#NEe-Q[scY
%V&d(-m_XOQ]??s74a:!:%%_B(6%@nf-n$_a)o5Xa".ol@>V'4d0+Kr(KDNF[?Eg]lC95bKLH!feB4o2+[Hs+.PCpQ(ookAaGl?cP
%s'_H,7qqoZpJ;8M0?6"=iH&?hZm4h'd!e4B$XGlm/jmV,YS:i7%grcuj[8SV5r`1R(Uilb<?\DuNeI#4+ppa^fbRb<\I3E9[2'Rt
%XX1`lh+foIKB0qXGdSIF(!B'Q&RQ&s9Au.8^(lqY.o5-"oQ2/".>e#m]f$r?^DoG<Oh&Z!&G]"1]q=pe[PjDiaSrSs/on?\hiAW+
%o=[[J4PuA#p!pdP>q0pDDDJaFSZeZe8>X+C8:"QG<TM]\`/^o+:O@+/Z(@9iBDG'.fN<%4YM/ZDZ?d=L'lBe;JK8Y&iS[>=fG<dF
%\_CFjH=b`FN_V4Wc+UfNHB:fge=5jhZ!'5F]kG-DR&Gk]5u('(??ER'FELN/1?Q^&=#\_h<bp<b)]P2*03Q#4FuQR`C1j;BfLh:P
%7->(!m:[cURu+"?9>,!^Fak5[?g]R9qg.IH1UQM42Ijjqg1IKkb&6M0h9+kqjlU8-Y]HAjg0QA7C`VildamHtr4uEH?OC_Tm2gAY
%[o13BmGiiLm.TJa&Ia6X:9Ck4'*olL457g3qjiqr@;\T]XJL*O*F4T*TBr`$i_"GEQ=!tf`lcPP-glDmYK+QWD(V>3?U)RaT.__b
%QR0>6=PBjk,dc#d1NCbJFV>:B?!j>T/c!M$P/62/E&'$eDC>&SrdM.Ngq?8'?Ob.,jlEq<g-5lJ;tlX/GcL@WPY\J9DV*;CF`f!Y
%Icl]gCTG_GbgPTG0,%WpC7/S,I\&![oR"4,NKpVO.A/lkAlk#O1V<AhV5)jJs%7JgU`C`T;Rp[nn#Di5hJ98PT!N3dKC*K&A`Y4b
%IToEV?aSYWrlRJghVU5=rr%5<HG<h#0X_LX:MtLa>;m'/#=LT"aPp@g+"jVMlbfhp&V)Beq5*lO@J/XRj_.*P?6!h6'$6ocGtgDI
%8OU84Ic\+d*1,-`a-VtXppdk[QT>EoAYLQOLQHb$4#^8'GtlnWEai&Cjg$slKA9u:Tmu@@Y7+1V9RH4"6sEt?T/j%Kjd!16oj$]s
%-iB^/?)['NB?fK.rVX73Gb3eu5:bk<:0'CZn(aJKTGD]/$b;8YPJVCU;ES;<?22\Y[g*l82u2+jH++?e?Ut]3_SoApqrjc[R!uSN
%8`V,W1RIXpb5(.Y\hJ?]X_ao=jLtGWWtYMRo]iu9<4_cfbq%DFqt&h?rN3$TGkG8%Ats[^F&Q2qB\tYq.u1T#V71bt&:T)</O'rY
%moHkhhRhi8mH3i>f\+"5h?Ok=BC;P8)o_^Ge,80Q]?j@q,.d,f3:Yj)*brj_q.&pl4T1XQ(6lkf<Rq,V'$1WTOtEC,oPiP<l1<Tf
%S\>cL\C>G+\\(,Ik"^i^ZWsYX;81*d];roWP'You+J1+EHbsX!I?<"&o%N\.q6Uk$QCA]".n4&6,T4.pRtT0[7aERC^"60DjRR%^
%WE3QfkHGfK5+gmP+.nDTn#_=?>L@2']m3Ile@XO?jDH8I4$DK2XgO0"5qm_LF/A4rrm'DKkr`UflIo^B>e`hKQ$VnqUGk*[VeY7<
%+;iA6X6+R][[D%l+2lBPCM?pUC8I8M]2iW/[+/J]K)PEB?MLg3/T,KM`6a@EPKQ0SFkV<555EF'qQqif?=rl@Xu@=W]!:2l7JCe%
%g$Pmm<4)\6D-7<9Rk]HID`fHW0;FuE&@$VphohL=2ju%rs(35[)Z<j;@Dmp@"[;M[GgC\7CXjB;I^!AS]&ko3Coct)dZ<5:@?54B
%ddoPHb;<BY+BpI`@88Utk0i\iWLo*t+_e\soUO:#m&i4'U=nQ6*802,pith1eM9oa5;XQPG"rfkrL9-X92YY&D*P[X&kKsP]?TW\
%F3D1fnZFGs-#7h22_UflV.JORm!O$S.'g1!Gdhc/lOHNZ-7p:<$`#_0ThmE8P'UFBc,ZOh_:@3#>,N2&*Jj%B1U6/;\'&j[pCkl"
%Vh_P%Llj'bh0(4^$na]Xq:9!MRX@q'AJR1gS)&PYjZX9e$*4`pn?>DP6GMgCQ@4BZ.PcLAG\J^7P0]pRU&Eu_Djsh8MK3]_HP\=\
%K,:;tC<sA/+5<l0mUI3L@+1`O>8Un:GKU`l)/QM#e)SOm<OokD5UX4uW$JDAA6$/P*%g`gQmrDtYH^eG/CG>s6MHWRcOXm`YJjSi
%/%pdiqD'/=#CJ+,Lb$/$+J7%fQMmY%8NL-P<[3[Qc1jVMd@WC)HNJol4HhT+X4nHf^+*!RoK)oNk"f%gX7Xk-BO+]N[J?_[g;AA"
%d9,%($?Z5jKD8l(nJ*OX&rZ0Z_%7b[0CE??<b\Pth`?Xt'8:_4k"oqS"S7nTe:-k<[%+F4.$rmhH)$[1f1@=t7pF/f2'^LFE_T_m
%lbeEY1:ue_9Wr.CkbP3EXmFeCP3iMSk!f)h6S/*%n\*\Z"]D16H.</UE[tM>V_)S^m6l@k%^5t[;*GBppV*EP]"Y_BnbR18n/3*m
%Gegdr(@mkiE@r3H5Q'9(:%kd8bObh[T3P#RdC4ta@[;u2X,qgX41uu<G+Q1qM_;IsUZIj&#OG0k`8l=o$&O.dj@\d.7C]ga+=qH%
%5qXC6Bp(E;HGnqM)am*.O^C`N6L)O^WiR;TVKI<$4s:`g:H/#GO5'1k[FC9#k"A57Jf'4c&6J;'IH7*m:&=-hB4/.\*P@E[qG=ZX
%VDa%^4l0o)m8PC(/n:*.pZa:.D-upup(G$+Hm\e?pb*8BX8P_ngT@&;2NBD6Ya8=ges/f;Y-.R6D=(cA24[aV2a)(/g:?]&&0_!V
%KB5e,+XBDOdK]N>h,'*FBNm*tA'mVm/md3!&)ObW:iG'VT(i4af*c;#+,mi:C[pA\)OtM2ApLYfP,uf=2sFdbF#@NN]5&Rq"%UV!
%ck\@*j)?sV\1cd-gC-2U@*0Mn;qVsUB<)%"<Ajg14G]Ul,`XY%b.\c,%Z9@AZJ<+4Q1UVrfM+3`X\8!AErV5W!IG"-ekdO*iY8pY
%:/\^s"bV3gF;#*[TutAdqe^V6o9ID3f)!"L\Y>tsUQOT12Ml$mm7O\8X3%kn#&\MAMD)SSeLPBN/2kV?5$NS(G3%Q7^Y.dWID-qA
%>+#6!E4EL6Ik3P=q5=2@H>RFX6XNYmg6:QNU\8cqU6*n]C%_+UHtLhL9&H$gdRgXMO2]>;]Q$A$I\<N1p")Y3"e6tMSM&BL[nDKe
%Xk[*;T/A[1p3`e7*a&i:,0F&22&JQfc9j_!D+3V**b,@bnK`DT=qDZXaQd67&mos(C^FaBbi=SiMA79BE6BA&9.CGMb(ft-W&o/D
%gZ,>F>MX.of*\?+dZCAnA;Xa=qmX&q0`K3gQ*o'r<6bkS$E8Z1]g-0c/Zms7=I\L((<p2GMCg(lqk5/)f<$o-'m6F_)Mq`6f9P.J
%d@!gY30/h2^%5rXAc<i%lm<6Qn?6[adY4fb;;Be9es;L]Af:qmcA-(69S5PCYX0],8c2N4+,ZuclP;[%IN]#3$2U[sAg!j>J^g+_
%Ggf5OQ;(JT+[;cub\ndMf<OumqAK($o,TQlptOpE;9T*\a^LUA&5X>:U,X_5e<JN%M?OGgJ@$`=c2%j_A%7esd-lAts5].DYKT'I
%'H`4LY?6o-X#4U'-lm0GeoUK5CkOo/WVMrVHYoi*h#=O-?$F:b:QWm2FU!7"g<4e&<Wno7fcjX&0C)D]Q20ZMWt8[EE-1=;HNW`S
%DP;d(J!ou(?a]lD,OO=GiF6Ugk!QI]ep&&R\Z@\6gM;_u'k\(rOY*WbOSRtNFrd$Wj>1C(D@P.GCmGOn4*I.58QsI"Y<u[YI:Gu:
%gUM6FmC"ls0f(XUr1,8M22dhXQOu8X=`#qHQM=dqc#"uLLP#e8*JOR$V>9]LpJsY_S2j*S2Ai\p=JK`%?bfR2af;RcK)_QN@+J>?
%07jqESA0a17]=:1n[$C0!>.:%3^`d7]Pql;b/=FV%d'R@h+,mEd^!\Q=9bZ2S!h<G@5Sf0jh1Tb`RQ$egB-t))8ddM%'*8!Hn_3Z
%DkKE+fp2Loj\=*X6?A6MQ\\>FE][1T;PH+*R<Z5*^Q2QMZV#[G+5l4`]cU/#J[J)qFg1HUZ%"+jBZ/5#q=AjFT5CJ(L[3./?Q5E#
%[a<toa4Z?HT$]3%D[Wc=P@PkmOq!VdRZ=g"C+;becFV^T&1(L@5Dq%9qe)o,mcr8J08N8JpY#>XjXJ9tXDI&-p"eJ]d:G)lTq!60
%q-D?H/V5(F(*DiW-us:W!oBe&kP)t^WcHh:YLdg(7&3Sm-E/[?(?]R"es8e*9&qdOD93]p:cYP3?c>erWL(fKAF2flO&h\WcU@D2
%'hGZI5:O`X\IGAC=CMr-E:]'9lW#X3g"X6-iZYLoL4emCF'rR7Ic3,rrBpduPGMg?J"9iJD/X9qrc0o^6WL+Ld3$S7g+oaDp3t*M
%@2G$/L4*H@32C&VNDWnO7d1nNgN9r0o,tNo!6)iR&"L4^Xf,FZ3(T2^Q2R,Ka)*E9H`^8'et*XEibmgjpq<T^Q+J1[L5iPss7"KO
%WcIOb-*)29-*EK]F=O"G$X83P(U8b?`VQP/V.:Y8=+-KYC[`T%BMFa&J^(UuoikEF*UY:MF"pR^lfKoX":VFLihsimMbIl^b^Zk:
%I![TDe-ErtkjY7tYr(]Rj+MYULV?>\n%9V=mG5fQ5/-H;U`4pkM>E@,#l_Al20h-r.eAb#Md'NR#Ld&lg*em!+kT_RTttXu]*Kg=
%msP(HJ!p[?a7`*[$(h!;0(`6EKn9qq*aI#''sm1J^AK7Jh^uU)^=he/Z#d+'rICHC[6,!0(jHen!S4WKC2\VcXdtV$Q@.g\-grJU
%dZ5EB(lOt="`6^d;/4<D.tcVM]Pt#\P:p`/6CGGfQkX0d@'8%tV@Ki.2)=RAW,X&L=UTTqgY_.6)M]>&aH'tS8<i.mWFEfeIl`R+
%-%Te.$j/PsP&!HA.Hs=oDdVD*^3ugcCOkfcLULoe3..f:P="/CbPQokn>mTpf,8YU.`c\!<g$T!aUel&?JDm;qGfAlRrlbSY8RpI
%d%ig*]%tjO>>?i\,hVq37.Xq.[P`h"EZ@Z@%)Os!\^,S9s/K>/D.2#ZK)m:Eqd.h*`oUtf>1kDia#:(Up/fZ7S#Z6e&a[lKMf5b(
%bBs#)gO@GRL6dZWh_1*U]SWMEcH.6P(p`Taie''BF\k&dZbEVJ1_'n(kM)D#5DEA9WCe<;#3,8Yqe-P-@e&2p.G%Z>P+n=$o6I$)
%<`a-5l)c%7`!_>TR#bG/D=KQOA)2YnM!*(7ml+tlC5)<VjXTn^:$SGLe(-Pt2i"G%Cq2XR4@ZC;_d=.f?^mjhT=s/SAQV/^IgtCP
%Z1AqLp+Fou)X1jqdgG]MJ]r.=>8d93-luthlQ,,R$\^bS,T=p(KaaFHNP)rEEZL']1uW<5=?c'jP#Y@TgT)Q?@?umn\bQ"Zb=s)o
%dVb@+8OKZ$$Ro@P1fU(c'%^H*Z&Osr#'QG`Z$A-kn8r0@FEL5':[0?W<f"H'*?`(&ZF4o*Meuu?FEpBjg.`V906U$o;<Ib8Z<8^6
%VR!&)>U"2;p>>NAK?m1KPL+#UH%5!RgUkZ$R=NLB1.[/SJK-h?O&o6*^AE_ld0V.VOAoGl?:Dh!G[&.#_q;TW>a\rDKL*>?0!=)R
%S74K1Rp&pacY";IMg82fs'>K[V-cQqjkD-<mAGl!<H+D[3:_iCj+Y@Ef.gfZZK?KER8Jm%NC19&o0;\5N06>2-5jQGZ=>Enf"k$p
%XWX$D7Ts-#*`!U3MK\]p7@k,d;U%UCA/<f6FO6jb!j/k^.CKgOX`1ODO)8cY0%#NZ'j?"J*Ccd;eDF%iY34+)[dG>4Y3O0j5K?uo
%K6R*YHM3`)-gA'f!m7c+m#V&-(J8:[fLIcS)pN]LL7ijR1Fq(fIf/,-.,2JIF`:S\Q(-Krj2?S7D4)sO-hV+f25X#eql)'uVQ>(:
%6'ksYEVh%^dInNYibE<r4+-=2B&\g$*845E"q:tA3"Xk):9NKN%LtDKW=1/Gjo_$Y:g)([`6[RjY?iiFNM*L.De7q_$$i3hV6YDW
%iQY9MaK:QT\Nb_#24-GGc@M[)BI7T!%<C'g=K)6j3keV<GZWK"U?A,c6^gPX;##mk`uW_(hXKh$$<9?VK(?^<^L@R<7sM*UU7(+Z
%1TjaHNd[<pmO4]1kX<KQF(mbW_MOb<2(=r87/gc>?$Hnt=7X(9SG[Ra[M]@R]`/kj[C?T6ju\_V*I^*'I.__p3H:WsmM52!9bE-7
%/(@e8_+l+/3,h%W1\nqA\5Fcgq[R%K^C6"m6+gJd=gb;2+&,lXrMEKfi<1k%p:#9u!<"4@o_e.5m_\D*8d8"<@*@=ibhSC*&=Z2c
%"HPT@L6c=>WSg?jdl)H[jgB8DF_+8odSXP+BH",[SlnMlX`VD)n`9XiHX6$IMB+Db?(81mr3moq^6NobQ-Ag8Y%I-:*3uJd55:f`
%cPJYXW_eTDgiK2MVnUddW7YG>eXW5^IY49'$ubE'o^jCFcO\=?[i::U9kBg%*neRH9iAoaS9[/!cpgY3-QAO_kXln]%t3p@3>XMO
%XhA%5(Ya:f:\#590CRBd;g'e@oInqlCicE*A<NMD/(362RifGmgM@Pm9jM1[WB??(gfo1Qict1Lgn\pEIH`@iAJPLk,7te=Lake,
%Egu?S=dmM`=\aV67cNMU(JA>_Vu>-Eno=r[;mZ,W.GiF@-o%RqMch_5oKF7u^*D5N^*h\k$+K4N_rt<_T<:A@4gWWPm#1K7THD>5
%mVWM/$XObr[Zh+<`t--Tk350J_FP'(BCe(U!OZJaCqB_lGhNc<U&$@o/$>1:Q,SbZmN;)1167FQ](7_cLUCdC,J@)gj2%@C'.*Zt
%hh5'7@3QsboQXn\WN?Jn#O?AP\(:jL"=!&@orD25j_?DjY^c\A1,^6:XA5N/_,H#'gQ`7O8ab0kNT/'SgW/8UNG)[GH^VqRI392-
%1();?4W3Dj>AUh+O<_A[/5T?g#M4-CDq)X0\labqVOjX'g<`H(/n05,1,j*^A?g#D@s<It!utl!X1+S%R<U@8ff87+g.lFX/ADPG
%=fR_9l`&FgH:ccuViC=C-(?eeR[>Bsk'fJrH^2mIrGQn""f%'C]28o2Hg@*L+HFL3VaLqr$D]GZp^u1V$S.'[F>L_NQD%ADPJo.=
%.$Q;r&@sX&Q_)JKUm2A`fqce1WFsu6aYFQXXJK(kS]B(1LJRL7lUp!9=@4klQ8T9&C\J,gGue`b-=(F@Z5_]OT[C2T=8,Y4/)uR^
%]C!;flc79a/stcX)U\Cn#;OE](0Sob)5#\Ih:j(Sd10<`%pfoO-I\b?ShBbG<,Ke@\aheLZKH"k"_!g4f;E7sWI8\2A?Q*[g_&V*
%f1I$,Ls3`0Z8(ul1Gausbi6lg.og<@qpEd_Y2PkPr!=+>b(\Y;Yk&Dj\62\2+TO+u9Bjl4mQj"h$Q$2>g3tmM\9>,3>T<9'KlhZT
%.sJ_k.J[5n/AW48l6s%8Jr[J_Dnl"s_.D[QF^McS3KChUV-me?^GrNf^nGS:'&!%.Za@?+fk[%&'@EI*kC]a^^JD.b]$[-GQ\oQi
%FA'+XG?Am,D@q3p&HoX=LQ24<M+&KfK6SQ=4;,oG9GI$iJ0&XLNJpjuqNgVk4;s.7T-ok([NMC6TC54Q$fi83FoF;)FQCST,1\YD
%SK1UC)Pa8_=/V^8;7h&d6.IINo@ieIQP=TRaM/$)=nCL%pLN!m>'`nsjo[3jng/3p<?NbYF,hXNkJ^^\[k7qpVgG2p--t`,pc4?_
%gLq"W>L;eaIMSB.PUM\fAKH-,k=6\oi8+`b9n`JcmhI!a^9<aOl[BOrb[4T<esaCMs!Y=HkKW8;7b3-:pnYERO"h$&]Erqhlpmm3
%1S3t;*mkIb29Be<na;0K#Y-o#ClF)06Ik9;*kc?6qGkGNGY4R!d>.$4H_0,q7a'90+W/_([lc?D<q&+5@*go7n%k'NQRSi@#<h65
%HnkHS*du?(iZIQ=VpccL[TafJ>_?Cf)"aZNHEH;.[HMZQgF-A!O:Rg6BTXciqJCISamddkI\qH13dpE$nE'=<VbnsAZ?Hh^*[V'9
%[Sk0LZ<g#8be?SNE'R%OY#kk-ofRk-*A5qQNgLl8FHSSL]!]g2&-C];)84Y:1l?f;FOB,jQIK)\(O:cjdiXhV.H(R<O_!P>.s+@@
%>+jo"YmpWE8*s?h<:.,`7Z+Pm]fb\!I.RXcUO77U1Ds$5)]KQb>aoj"8&u]l::&#egAjjpZ'Nm$'L?(^4p4l5JWi3j,sK/HO!t"j
%4S"QeNO;cp<?h**P,>@t4s%H`R[f0"M^'.^)Fmh0B7Wen0=FUCah(LQF20!h.mlc6=jVV9GO*iVlDBL"V/EoDpCHp=7X#^&rpeW7
%>1f*mRYgq?\>HlDrPo-XrHR!BNF_o5"3CLJ9k7VVh/mG<h'sXf.pF@V>H?7ISqN#1p]4CmI3d#5NV-laOMB.E[LW-8e\k^09l*%R
%Ks1q?dYQ/sh5q<^G.:P%>88>(2B.V%&'!6M=Os_CF(tQcK>b_q6ZtPsRPJ'MlSZ]UeF@0.9)]72IJnrgJZm<5QdR0!EPVNuZZ:LC
%5#Ss=[(,McL(R4/Gb;uGo)Y`:qpXN!&\&2jdecM-3bT:5HEH-q*bLV4@(R,nKm5k95&?(-SRj0@T@Jd/2sde;+,Ug/5nU]:h<LWK
%(in(*NYTXdC@>TGm.*#Z^Z2&WNu,C$RJs$_i]UGd?I8H:?1'ANq5ejjdZ3BbF?],:CosCk-OMI$M6>,q;rN*CHmaY4k52fBg&UF8
%*=h]qoS.I4oaPC+s(Cd`[j+C`[,M%5Np]39jHZGunl!WBP'83jWhbf%4n&=EY5Q6?"IUO!A26kTpWi4#Ssg?aL-Zpnn.EAkpO;qA
%Pl%AY'&N%_rj?it;jgRljuioq_QnYTs*PL:og*mc6Zr?TQC-Ja$N(#;g\tTf77$00FG#eNKf_9%Il3s[%'C*O:>L>epgmRf>GGg*
%?n;/o&&uhmh9XcbTDmif;V1W\jkNZ!BJOsM$r1V#G9-YEdR;.F82![7*J9OdiuS(;a*u(Uh*!p5pfZl!r#4DU(g9.olPS4(%;fY8
%W/phb43IM+eq`e#:8=;*Ybo-A9U`;ZkrHf0dkPLAE,9.JWO?nt$P2%iqrG]Gbg>[qb4M_61$L9L+-[OINii9UpQK*(mWd](G@=rm
%i`[FkEM$5iAp8Ze"4C_/n*_#AM(EiZHc'11i,r`=oC;mNmhe+#YrhgN+!*N?5A0F>\c1gRXJ'KJ`7ilS]9]Fsfj&oOUi,\eX'1XB
%,>1ipqsq!8^XSTc+#K!<lJ_6K9tl4!^7S[0YY+&HpGFq@f[3X6CMDkI6NF@\F`_UlOMs`WVWVVFg@!V6iVR?hgcC0.)^(iD4ruhp
%3fVMfqFkO<IZO,I]'%:;HDPKl*SXf\_g>Ff([n8?T6hHhQEQhGb@)Wt=-14QGG&SCGKKEjbrhfr3o8Q]dG+WjRb$g%f0u[Nn#Ca3
%KR6^7'BrV'd&+f=H?Hg1]s42YHEYoIM70WM]9UqtFn="kn2gF5qu-A7g2saAY*ZQ??@,c)XS"+Qn%G>u)_:-[?Q=J#,^1;shsAZq
%qU0\h>2%Bl8_*-=Df9)jX^-/@OaEp!Fu<XkQ+,r/a6EKcrY<n2Is%rikP!cWYE@=@c\?X&14+.6IdZiKYLH:@@p3'iWun*h+6gIV
%\nBUQh:b\/Y91HA7s\@Be.$P:hkB8U@bPq/Zq&i%YAL*/g:?^rmG<:I^8LY(/Y&CbE3IKZPLFZc^-+T^Qa;"Oe/!flp="@oe7O#F
%qqRr7Y5qFGs6LYm;U[cImRqAfW=<Y&7!bCgH!#mqH9A@4\\gIS*N87Gl1Th?/9O<#]<B?@Y5L>obimUAEZ]07cE_bee(+b!rC!jQ
%7QOk))kI!,^9O6_lcrV9RG$okm>e/Wo_N'"gH"^m_7B4&XtJOJr&F-59C6l:p\@m&Y<-r4MA93=j_e&<Mq\0qlZd`ZCZ`+>L$A,a
%oNkm+3\u-=5@<dT'NlQ$]&0oJWR\QO?IpRfcd0$p:K)U'rVj$kkZ,2k*WJ=/D\b*S4n5o.O2p5O?8m>J5(3/g1UYj+j^E,lbiuik
%gDTA!kk/UbS%jGV8aY'_)"-aX4rp5m?:Wn_<ubuj%eXu4SuZ2$bl5QCks&Ld*8k._hT<L.pfuFXMh07noK#ronso`/UMbDMQ1J;H
%GiCm.(I)5P-<.1@;hKq;G0o4*0>5XPl-"(D3;!3T2q`ag9AF;%f2S\fW9)uG]&h7+Y:.*F8?Ytgl>Wh+qekWJg:6'Ic0j!MC:r/9
%4pWdET$ag/SF69um7T^a.ih3!D#YQI<P=E1PnFr%I(?rCQ1OG;o%Zfo*;7fece6KTjb:Y%UFlFY5O7PSA?rDGVnkYaN-MKQj)\CZ
%T#'tVp%8!\Rs=4CqKXdcNs@?6o_GZ]0\Dt20=[LpUF2I*4_%ms,5^W\j]QN`BbG,Tf8S*uI%C*/g>MReOo=q;qp2OSVh-b'l[.gf
%ePaEMhGV\JptgcgrRq)1-Q:k]]H@$QT'DlAaer2jS5#RM_Z&=u+Fg7N4ns1XdZOM#A8ZL`o!B<L(Z3Nnm`a",Ir;tQANkOp2eKPI
%Sd%`4H<?OsbPI_U]JX;65$]nEahu?#f?[M[CH4rOl0)86)9@1d5I5f]S,%0FR-N1BO>bQrFSCi.Hu:TOo+M5BX@N0-&l/aV[m$\=
%drK08C3qT#?7ZT1UqOR5GG':4&=(_9:*!,[O$4lO/YY@nLBksQg%>7l=7iu#o!WLTk9t8gB/e?#El[[,ImiSlmp5ii!c4Q?BPtG@
%Ih%;%q;!U%.tpifNU$"RHT#9+n!ur:`9+9b*;"0s"(SX[`+EA%&nQl`\&b]j=neM78^fg"@Lc-/&G>j?4RB:fjF6*gTD2[S4S5?+
%)!d4U3]M$Tg</X0l0?uLIJa\@"Y(PQ"?t,tQ&_ZtH=jA7_U"44ZsJB5K-U"LD7\s(-JGN.diI]'gR-fRoQo!8doGZ*U[.>k4":W*
%#p`<\F[,g1H<koWp"Fn[fdgKU_FWuM&Cjpk#cDGbO:9\!/>Lgle*OVg/ppc@=Wfn6<\6(RKkbUohWoDV.BQ\!f!sbJhFo3$S<DPU
%KTt<F]&*9Ls84Ai!><8la#?fiYKD3)?Vf!*hfHBccK5YPa-]T@X7i*Y5/fQpC"=XfK+S2dAHuT74iL,_F;c]X]ec9(`9^/&*4k_&
%aF2\(;!"=kf=m_[AJ/DB(?'E,[=A*3@VnF6PQ"JSD]Zim^\D<!38!=T\i)pP0J\='q/>PjU%K5P!t3^H&!c,#j<e3pQ'c-B);sl&
%h<j",n=T*$ih9%Vho#3Od*6$A_A=_$_4^N\l-CELHX?jUJj^hS=SB0kPO=:#0nFai`W#RjrrH[Pe/Heg^RR2/l:)6Kr2Z/4G^[Zs
%S^NfSk+.0FP7_`'Ia,#r&>+u*r1h8L]dO7fEg!XAF;1)cs&3tJGG*sH?H0-eL'*i"KM9%F\V@2i(L'A1iCec!CZ7uE`?IfpC\kj5
%mtFrI'qtH.iJK251jpsI]]Gn0bbcf^8Ra_uE!I]!!9)+g4n_qq`)iH:oiJY"+:HPPcK=0QCGraJo-_`M;&iJ\Tu%kGi#ZJu)<a/O
%%l'S/S>#a%q+%,31_<_%n'Q*%HUaEJqY"I[?g?^4P1qctOa8?e:@7MQkMr#_AoY3`,N$c`bhQTgH/3A(H5$ZbdJUY!ZiAJGPb9TL
%7KsHB`WWWYkjP2G*mS=Je^1@Gg"j8>M[hNS_qc`rBUQ@J\U,3a#Uh)HBXStYUKLAL<O(3kCG!7$#HGanbD!=Z-Uu1'2rJ91iE,G^
%G3MA@q@NZ%&^3`?.]URBfOWn;C?DN#98\448LrB\C'(q6WLtM0N4/G..i_T#Cc%X-`RKH5/m`t%9bRY(02-/jT6he_dTOl$$s#%)
%c!oh/a8739&Z(]bKD1KW,\2dqQ.%Ota<]gDprkn#P)Gj<_Mc4O;F7lfS5b2rWggsef1mAcg^R,"jXe[pf&tOT`gFJYX5RTJ.;%\'
%@:dW.iUR^e6bb^^&QD=@q&2P8%A34q4]t-cCIOP/EV$.IMMN>%BPlqC<V."f>ng(MU:$bD-)XM6eI_N@7,%H`bE*M$DN,e+2&=p(
%^/o$XT9Diq'Kan2Odqd'd2'3tGhVNC>t7c2-[g>j:3F!_Hd3\HFVdlPPt%u@(i]t^+D=AS>q:f*[,E-<AG2t.Vb%"cIY9(k2M\F@
%)X0TK;Jl,(@jKh=%ApWNQp$TPI\>8h#[64cB72"%,0*Su#*;Y&#;aZQ?V@VKs%(L06sE=5+2p<F0op6SRP[c(Y"B9f3;m"biQp[+
%;j':7n3Rld845"<reRcjm#iIk-GH.r/<85R2.quLX/90q0Io-]r)U]\';`'`<j5g>.nIr>DASs;p=><"FKENYL\10b6+g?`rpOF.
%'b:Yq&@8@DN,tWfr9;72EQ^k[l5h@-ZjZ<GQJnlZVl*`Z$K3LHZY*0h&9J=fn]brpq[XqAc+]@rm&=`)bSHIT9HiE_Ct@gS;DI6%
%4<F#)("PC:<oUuE[P9(?bKZJ\D_mSU#Jg`K-.ZjHc$>&*.=L;.ISuYle$Go'KEk5in7FL:V'nX5<#r=T(l=hbi+"rC+=?JXX,3<L
%f"hJf+LOF$l3)^/!XOZ;KpYFU/nRn/WVEj!UeSd(`;WkCb[.E-fpV`7!;]0o^?#m'E\<*TcE*egSD&%2CQh2HF&D=oe`>-1d,b$Z
%-\o)Y`h?G6eEK$84[RN!X3%]PTdb-&cbOA_?nNssgA>L6cO/Z?f*XJ"8J?S@@P2(:4SeOS\sSimIogPF+p@K]=FX3tCifcFBfMq5
%VXdP49V;+=:=>E\f^U>`3jmNg.kR3ihL]lkBPa7A/rg(J-:6^E`QL@JM\84_;UI>=OHB_d9%f)9XXN-dVkGI8*0jQ4(T@3^b\Sm!
%A]toM$Mc]Da"Z!ZQUK":9q/\G!r$Fq4'@uHAEuI/dWJ?mAsDTQ'P:hGp[%t8CbcQjiAAmBDBBDf<S[!%@5+EF2'lRn#rg=O[FV4`
%R!6'l%!P>_n#<^\EOWUgGABNqJjI!sGK].N[!41\DF+DE;d,q*j`@m<(T?.d$bX"):l\%[BXTR9"HB5FT_P6-oPF%h8)-]K%qN9<
%U>j7G=@^eqWiYK9`Eg$67s)SD?AK[h@Ui7u?(*@oNrP]s-4=m":tkihIRhjBIk\+%c5\KT6,iD6^Hmi@Yr5^s7*JUTliF6,V#H_n
%ZG)'6UFHnYA-Thg6e.WL,JtDd43i$ckK<,4f(/06WUX\Jk9J5j0R5hpCcHnL"\N3coC9,-4#Q/n5,Ic<TJb041_i4pZRN#tq05_8
%!>c6:8LPs)oh5<b]T6)GkbdU!ndicm`u6m9;#8L$f!qENV15k8FuWOh!qi+F-Z=;-Z0H:-L9B>'n\!TA$s5ZDL:fF4kMp5__'lKZ
%BLhps,n05>4_IolfZ]EfU3l,YD3H>(l/MU<YV%)$X\IqA5:j1fCGPD[Bn\HlD$?/)Z]qoS1W/-+U`Dedr^\cL-t"1[@21&GoM$)c
%VDo!e>T0b+WQM((6._sQ)7,*G*H]k(<?sCR5-Si6!\8tIln],fBjk[.>-%&i.H:4j;q-f[4gqrQ!a74CggYHj/B:))6-kJQ!RarU
%-@M*tko1k*6=Vd6*qhXICh3iQ%_,)WrAdmJW,Mc4h>?ut1&S\,/gXkZB?W.Wn]_kEk6mV524'@7kuOVOjlc232m#[7X6MR.bGSHT
%oBCYu\U9c=9@EWHcXl5/"c>h!l$W<;Hu1?UZ0?AEe6^$t^:(Du`CA;OnoOW\Jgr"iVXrp4o!MK'n=!#5bKo9[T%8d@^*L1F#@M3>
%4mPo,X$5:4dEc8qa\#%Vls6QdB1KA@lqA\m-9m;52QWE'jTT9'lQi1/:u9d?7rC^p[R$q9+ZYmRNGG7<9/-?"=#p8tk_B@>PqYa/
%a4(Kg.[66_i\h@CgQX\+M6"AgN&:&=+slaQm=&iL.P8fD9"ufG$tI1tbqSFtWD:'`)nN<d?[GHk8]OFJLf\)dC$<\Y<bD>;cpmE`
%4e]7:F??+RjK@64-jojuB@.9Sr:lFK>B?'\\:D,8^Adnj[Zp./UZ&AQe*bWc/fRHqX!bV,;iO,t>n`O+0Mu^5:Eue?2qd^I&M5;(
%cl%_`HtK*T6(R0r&XIC0=$(i5N43!O?B@N]0%@'EV_@;"R2Vt@)BnFhHbJcN:Zaq))qorJZ>9MoY8kT-!CL(!BFGF9aTq8l@8W`E
%pKEfAdj>5!Zc'+Pq.PUqZqOURP'g+dVspb<#usbriDk@+9ioQYQ(9/OR2:-UTP?r49QscFA"&EiH54T&WY'M`:KYKY@bg7:+t".4
%_tT&=1L'.GUU=8TaLp"F0%O4.'V2mf-/>P7Xd1#+I$te>Cb(U5T=A&XdV;ctW.hTHqTeHdd;V4.C+1reVl5t%AjsL=>]AGqT)8>/
%HYm3-N#HOqFOh;IKlO!MT8U'N*fX0,C7.9\CFO-2:9DeTl@YLAe7'+l%4%@dYGM.p0%&d`,A"&.A#8lKSSLYOU.d1iA@nSeLb+df
%.=%>mB/W4oV<b#SFODuIRSqBN+0umHU_&K*_;suCdZ=]6O"-ThCQq)4/j\)[J]^d<M_Um5YbH/AG2:2Ojr%NmS@6YJC!kf;]q!aP
%WH)/s<#)bD-%tdQG\CWlNO4EM.XGSA$!D4L.:Y+?N%#[DS<jRaQh;[ig!=CFWbU_Vjp`hY]dZrcDk9ubXZ'CIQ=7I0C!_0i?oIjr
%GAF9=B(ou<Vi[1=JG!NN-,E1&7UHPo(Df$&E]i^-oAOFgD^5ao<^'d;ef/d\qeoLcE0HJ+e5hisT,0nJKYdH?.i>2t*n#npfW!\&
%/M9Stek1qH';XBW"Z+B%]tpiu.H5J-c2<b2J17GId%OAdR5Hi$j;lZ*\^A-g-c_BhPRB<5W(:FA[RF2nKPkP$pbc@NlueT2H0U45
%c!%--r.)Rl+c='01Wc^Q2/5##E`t9F0,Y/-)0*_u#TDXTY)<K?o;_GP!g2OQAEIHMUKX+Sa5&SA+'Uf_Y@rqdPF6]]*043B?Gj<(
%)4>baZ%KG'W]N,J>#^i1\e\r@'k!T7aNU]@K8o&N'ZeL6.pOm,WQ`#^[J>54d-Aif[WjP'+FU5'^Q;'dCI-rEcF]h-V24G!bKPgo
%RLQrh*!H-lKgIG.-(^N=#Z#GdjbX3'lBmLL;WYH_Tk6aYE[!amOag;B6`ip.6[2"rG$S0t<L2*qkEg$NX#Is8!nfhJ1FbDe`aTY;
%O8G>kG$DV(<m?;t#/.]a7S'o;W_hoS=5Jm1MX!HO&V[NVW*X@5WFM4)3*.=HXN3;o<jK23/@rH:6UcV+CK9OHkLVeu/(cs]ml3"C
%e^I^WT\Vh3D=U"#>YOOF3K*3\e:PZD0Fi/L>2=mrF-C,f43ph]>8p+r^$NC(2(V_G5io%)#;&Q24aCg3Ot9dN8WkXqeln4^Mh[Zr
%P!pm$8[;KQY%sqt*E6b3Yn.1QSM`d%iqm^TANq6uS&+@qm;41!0D/F_I8XDFg9`[cYH:^o^5.BuBMr.@dTW3+=&ep11+BEoO2AeL
%-7Q,ZaJ-MH]R5Pji[."c<OQtG^?YIS7*J)bA#9/=^JqlqiUPlWbF20JZrX-N=B=3cbc6]SRPJSHOVY!iSE#U/m?um;\fqmK\cTWZ
%`c6"kOllfrITD9a_8A=UXPm)'gbih!\s%L5L,'rOe2m(.U6FL'(*E9(cf_lW^?-70mch'3h9!q;l&j<Ko"sgZHc5ZocQ1?H:X:RP
%].<!rdWN)_40j`Z(Ns,;_s,ocQ/u&7W8^BW3=0Zb*C$h_Zh(Up2\S[%GhV!+p%S-Xh)`ubI5gY4]]1:gmHuY]g$b\WiFX@H;%dSe
%]<g24I^k74199#br+*R]@6`1Unq+?u_2khPAD/&Ak70.mN96hAaZY?+H"hJK.C7XBnZf!nA3Zumlco5da\MOkqN7*EpQV$2pThE#
%en\K/:Z:$ph+^qUhec\/j47X^YO`\t(8KSe'$8tUk1Fr[Y?P!07Jg-YcbC1)O/A%)qQ"+[R^>i@o&&JF<;P^R]W)Ij2((gb%<h6X
%f44B%c)V%-*=_BfGgF4aF&d2YB$X,!*/M`^.$DYMW*Xnj^lj&Bf3A6Y$BHWB\\<5T=5DKoV$Y0,oPEX^H>+b&nk%H304,DnR?<kZ
%`nAQN\8<N=HKO+=fAOo"Bh^=5`[.*DM4s'#.kK@Q:GR&p2/ZL:)cK]OR&`/Z1M9AfK6&jGB(<=LAPAB!g0!o7CD-NmL03PpBKi[S
%/ZUNWWja7Y0?lZra9!qelq>OeM`ACRQ.VG`pM=DM?RG)TD.6jnk3g*CI;-8a)F6<MfG>2@<*!@X$a_+_0.j4XQ.\!\fU&I@LEVPW
%9C,<plDo/L>F*p>,fWqe?PqMO]#;=iXM0M8VH&J$Be(asmZo3nA[kfGS_08eVSG%<_Sj0q22m8n[4&:5/ZZ(0!7aVL?WpBFJ(3.T
%mDQ`5cJg/aqiX[)n6:XSHss9dU_QGeWrm(\,ke'GodL\`.hhg.ZMN;'0+_qHYqN51P`1l>'Diu0$(WZ9)(U[op8,m]D1<f]W\p@"
%Q^60g#j5nj@UIh=<BM<S9C.R336:A8W-`,cUgX0tN[)<d`4iT-[3[?uf9Ou)+&e2[fTq^H)qP[#I(-kWMq4DuV+*&g]#M'Y7Mq51
%qXIU%gIIU'eh)=g,"J\PnLK&i7*Ss6MC-Yt%e_5YDAu$pgh4@.O\u<1kBaabC.,aF$8mDZ(\e`i2m'fp[jo2.0WJk["j&N:3Q&uL
%c_tbU]PmA#VJ5raXti`9.j#'B]@lSd-=qbnfVTj)Z[+8(bMgeu/ZXC#Zr2UbL8,f20E3P?j_3rM^WO:4]Do'RW`7R2Is&au2gY:,
%>G@'BqYbp:g$)Bes%>/F'T6k.lghg[oZY#K0BmqcIJI7/g30[#9q1^tWBL2aik/tbb]1$UE`47gWeNq@]%TjQImD@;^PVreF8@Z0
%)s`@Kk+'0*ns\8FBr0^UcH9Ee$O`pp4U^3Q_2YjGE%FO3/)V$G.[5Tb/>YodXfFCKeV$i)q,+hZ*(GjU:K@6cK8F>#!mp6>[A)4Z
%`BG(G[A)60"HhlfZniM79d42_=)_1g/_NtLM8%c&3WjG*B>K>.,IHaJ6a@I$E4,po8@CA0G:+8`_5AZ3>?0Mk9r5pZ'j!eO#qn-l
%,)e*n_+&$Yi,1hs7[;44Yp*Z@l5utUr/hfJGk$Bc'W`&q`[&_gVq$5ES4,`GXlUp@e8r/F4khOGE3=>i@49p?24',%1khYUs/%)!
%eEd@VBVhgGAIRX[]fZTc&e\Q`U%j)<kGGthikZQ[-]=_e'T0_W"QK;u^GYmCEUR8O5[7Zj>4Ht>Jo7mg@nZ7g;]_"dX8hJ<O4j:,
%eK_(QEUR7$pT2+*YG#f4Fmi[A',Lr*TlF_%lJ^9C3<mejmeppb/!.%eU=X'1RCJB!mpF=YSq>Y0#Pk&lKmDCo>;O,lP1$;:<b;0"
%]N&6ad,9V"L$tASYmqu8EP2NIo@-C3"VG%q:^n^$ZjtZ'W%%ZpA=Z^t3t5i[b:S=VOc]6KhiII?<UIiS^1>6*>3oXjrHMFG,#u5-
%/tSJSQ76D]:8A4kW\i2kldG'==J;^ijej#27;KE.[3F?]a4;+ug2hi9GK"[M_kO\@H&5M`n!PQ,FAlQ'm:#sM<,J/uSLl[qP^_\@
%XZ@cJ=9NV+;6K^k^&XXM(LHFuDN?P94r$)[Gi%gbrDg82Xm0T%'pi?`(C7Gtn$ZI>a`IM_dM6N[h,]5QA<KC3R&\&LGZZQ-$r`RP
%YS(_(cR')3JP:mT];:A?\Hff140il\f6+^21H.2$ZTI\t1$Huf`D+H14?QcV0mY3/kN!apF)VP%_&oqH^l>>\BWn\b]T95oUWo`K
%.t0A3B_f\G+u?DSOrK[W');HK0rem[W\%ld=]pPU=1>ftIi;7*j*>,^g$+Qg$a4/cYDZ],H\l(j+:,-I>J;Tcb.=%E5:8s=e'?7_
%qri0LhP8KSAg6KF^MiDX@n)J`J*o1AQcUdH$&/nO]K3cpdAtahc.\PsaND^gcfoSWgPPBgjSaR4?,mhrH:tMBcXa66M-a157nCY#
%qq8[.cgNI(QaRi/LVdCJ-1kt\@O1K86<a&_Am$Y2UinIH3`Fs"+Dpc4F1u[6d_q3JA/n#$mn#N5b;oE!['3]L!):>2h&ghgbnZ5`
%Cb'J,gI-L><L#9b-3$MM"ES\iDInm.S/OB=(+D(=1r&=NrqQ-paem2j>V'hE2,t#SIF3Sg)Q;Ah&`D5@4?]i4i)\h/\/N2V7Aq\L
%.dAml'gZ(T!O,r?=K$K*%'(idXSsqo2ol$$-O_PE9^0RY7eY)":(3L.:>,jj$.^t`1-#nY?1UeFV?7R")IG,TGH?qaQH?0X_JN.W
%i6cM'&=YKs3K)Rt^asml?VpkC\#7bVoIe1U2W"lApXqZ5UuSP_TbPr,!nDG4=^2%fNG:>M"?fg_FY4;aP4[84WLNii;WrG#Q(%@,
%6N&h'9HO:Us)R2(\dSe0$Rn8kHKulrbqIXP<FpskmlbA-DE,t&k&m%qVQG"fMca:p/U8skKi8(]DAI#"h\XP7niJ%pMa^5mAEVY-
%Q$Y),WlKjZSKq#S.5>F4-*0:P[j\^Bm[=hK;8[[9[4_NDVV36Gm,YR?IgpMEJ[JL@AC4TR:!ekpZeFm$<,8nIM<[E2%1d-C8?:\M
%X_XA@ek%dJWj8!J2;Yns)N:7H%AY6bbt!_2cam$fWs=cYNu/\`lV:$qnR<<A6Pi?d/=MV:.YW#S;:e6hl(M.3;\G#N,6n#lo;G5F
%([A\I0_P&hSs!24+0gVKSWf4=1`rug$SO^jEE\)q4g3pXKdm]jQLaM]>ZOsrTPGg6't^QOX]E8sem)7SR*G2/Hs'l%)"t/EX>!#*
%DY7RpFd_V8^T=Xk=Ujf&\Z@K6XSl^s'rD@878`1-aONDC!`cAf]C<&MW`G*cGSoOCe[HQr7A_n`iF.1kAB:I6^$m_"Ed]NqJQcbb
%<NAG&*nIK/eWL:No5?^,X!?N.M):0%TQ7pd*i;O#Q.leD5(]Xa4H,pdjgN(87M<l/O,;)d5h1;A@K(,!D,&pVW@g;LdahRn_Sc9S
%5j>-L(EV_:#o!f&XaT/:iI&u6/j,)0MlM`,FFnDg_S\tY@G8hi/#Up=iF2_#VWp+">^2VN8L:hd(@_tN]'qERpa[>-?0fAF3pnG5
%3[6l\[_oP<]X<JH4Nq^i-).HF$P1]iWGqEUVcOlT*Yr.SXgmjS5<D=Pn!h)]0L&/Qb&#F._\X@p@5E)]@K+tK>WoJI4NtS-0VPW!
%)</>2<3C/?PoePGI+.$GCg"nLqJD#\F+K8X&+`5B.Q+6R$P-0>)6-70oj;s2hb%c98Ndk2k21?Lk:*Jcjl/2e[R9"f/\(:(s0fg1
%^M3P]_g9el>*f1/^$W$X:TJWs@?[F3d0gHmh,Du(KnoK5*>V^rCKu*dk<4NY??d<*-!@B),;H(p$P1^FDtOhG.WjWX^=pif[,Ss?
%r7_]sWOToGolG%5Cl;Qjgsh%5op)"]pqjp:Eb*$5f%+4]DUjGrNTT6OH/W1,.sgAUdh,m%KngOhE##;b"McjBiF/E0n]bEcQu<1e
%1Rf^D4A8CXX!hIla'(hH*p.84.T!\O$P2j:ql9&:k_4e+81PTt=iZ5O7<Qp'00Cd$U=f*lLK+ssm'af(2bdV'(bT^kD245RR-$"`
%bYQZhG]B4cn1`b['1H)'(EUR$QF(9_0%hL&4O!On[+-R=<;=>Jr7__9Ut/B6(ENcj8l*l8*qoF\]8WPU'uu_TKu?6)h^_TmF`R#T
%W]DECZ@/E4]RO/Y*KhjsPR4?&ZrB_*P7t,3#-:3QeQ6,;=M#up<,eUlI(sg@Q/7<GXD8pHn&ECR#9>TN*J6R7]![[<#?P4t<`_fc
%qW)Zgl[/%:\c2,6RI>>M#jn114S?2W#5X(HqKll4B!nIB)`(c<?aEMJalSLR^FlCq]s4d:T(VPjg\0C>d1=h]=kDO,_I7/do\O#[
%/QrssgCJX02`p?N_;4PHLAeR<GPe`D@&DhMqq\fp%6O4"ki;HsbO&9do@phQp?d;)g"GRKfU1sk2Z"8\Da/_&0DBtPFoAON:2WRI
%I6#i"Ec6/7^S<W12Vhg>HJ9M]2g_I1L"Y!ZD;j[NMRMa@Cqm_lpjMTQh?!>p8(X/MojM5+fF7?aG6]KbL(?o=Rbnu.i;F^Bs#>;?
%%=EV+\cXsYmlGX)G4*[]DnUa6m^uTO#1m^@?0L/MAu=0\ddY3mTa?5B]YBrl*P$7)lauMsh<`i[hOX"^INQD[oGH/_YHGp8NZ4e'
%Xp"!h*FD1;ecl38et4riZ=@KTGP@TXI=">cc'Ppss-hS01qCkO`>fiLU#kp*>Q@AI/e&\^c;O\>A$123=M%?jo@j-(_45#<0'r?8
%e'@BSJ,!a,TC.I0iE6E`VqEd_\HJn<GP6@.r,C!6oq'K8m-ah]TEi#DZqhckE04^WF>c:jf(%$AS9]E`qj:ML3&i"Mh`kA_0:Mb"
%@gP`G6Xg4d[#a&G$^<R?fnW+Ro2">l,Bg%Fpnd_iopHBP51?.l!%0*,(Ku9a5:;3\:HIE_][NM7;XiAVaMPTpmST`Pg>Lc52eZt7
%I7qc,qG?Y:GqdauIX\.8pn*o3K>Hc([DD1u_/T%_R<ol:(eJi@>5f7#dj#qdcFtIB@:LDegZuHY?JZNV558^FKF^\&$)G;b4fp00
%YZkHQ?81nC<uc7#cN$E?9:)9"q>PD&f1(R>OGu8rE4EG@*,LA5!QCflf1PrJ#NF4)gR<-YEM^-a1&;hS%]*HPC6o2C>oWauV1)`:
%D<,Auf7CL^lXQsHU[KMs`gl]qDs[2!s(D/Q=nk2Xk]M._[00E;V3%K%Be=Vk="_rbg)_]sA6O>2bpM$&SlTRRfp`g1cg:=`?'Og5
%e^p5FRHFYl%_a[pA)M1^]`6$Pd=6Rh+0<Pd=eTbsTjMGXl:fQ+CI@&5\0MD64V;L72?7P?rUT9[F+9R,&`S!=jO`b'\V0#+a>j,:
%?fk^-\,Z(l%K*O%atW9JmcIr=jP%mJSJKQ;j_**<9V;6oln2)4`H\mL_Vn`s%sq6kK3qZ`;3($_2HT%jh?$%C/j,F\S`A\>Oj!9d
%d9k55HOJm*f'fV<il/eeV<l>h4YbQ?Yr3Z"aNkqQ(a<X2L1ad)Ze`csJ0Q<=r+.XB`3I.(*`6K.cLKB3j4qt!+1p"^;hrrJlCg\&
%K7.L`B%ZBY.Q)S@^\,fX5J6e,2+gF?jf$Fj&/m^<0AjFT1]+MVF8Y1Rm@9^FR-C.=j`m?F"9&+f;qI'XSPrH[#ZU5^2Fe6<Vjrac
%cC(*TEP-%1:(8k9F\Z;FJ+&o_rBMF:h]3oH7uTjQ^F"tOpu,rt.-6;Q]mAf2D-/Urk+bsaKo(PSY88psDfB-YjPEd!1*iK"rnp$*
%T;.a9nB]tUN`2fnaO!;E@F!@]Ee!je$A4Q1LZn)W?t=GAc**qbk-PLS<b:$>s5:^7FlO*iSojis3]pF?BQ@RD7kCuLV=S-TjT.,Q
%8_E=(]>%=ZGaQ$udd?+aVV,%O;^pK:dakVj_IA-8,0g-u-BQ]49pUP;%+?0o\L_YBK`Cf5A*<Fb(oo9J[F4iue2E]]ej'7EOXX!r
%R'XVPJj^Rul4JU.IHm.\HFgZTcR_'dDYP9FS\<\>g>G1cHX>i(kIPPdQKJcjDmuWomclt-eC[pn]54EC$\%jD:&/n-CME/$([84O
%l[>B.hLWYa8KF$W(u`%,,pnA>h?WMLmdB>eq6uPbZTNFqZWfUTR:"[\f;IM<7V8Tg\`KadO+k,7I9,_:C[ReJh>W'9]:l5T7)Z@)
%]lnhJ&)JDcc0Xj?+JEW<epi1:g%jpCF5N:lfB+_>HV<tN2k>.D#uW_=QcR2(?;A\R?[\`EOVI1d.#iR<0]l!(nUlPecVo7<Cuo*;
%1?Y)>-L#XCX/@29>"RZeP&U]\<;@&)Lgo=*Ea-/G2dN1ogP#1Qqq6b=^9.7CSf4*bWAY2cHI)&+CpeWXA8ZC,iaHGCc?q-mFj)1e
%G_9,(^>.)(2bn(Z]d7H.[Pt?//(T!X3ACfjW="!rT.IX/$Ip!Qq52@0$U*t-qn7c`X$6KfoR=/d5.&fsoDR;9)WANtT)6(kZ-Ad/
%UZ8_*::p>q4@e.IFK<2tV]e0!4;u/K+FN,!a#B<bNOeBD;e]0C]0ICCDd_iQ\*=g/^P(C@S$^k<1[c?*Q.)4Ip";iE3(8,Xq"X@A
%3%41[EcI)klH\,UaQM(<b`^fP:7QEDB6N-6ReGpXl_4.KZdCR,-_Db&+86:Ak`m7DoZ5)=*R?F:USVHe\3S6GI23,=pM,\1E4TB!
%jk5FGkEEH>g\XhaZYc5ce3@C,-B6P5dWOE"WLLhrM;2FLUW/8aJbb&4%VAGke=&?O[c-CXmkJ\6(%&c)dMh4,\L_(?3pSl\lT`tT
%U'1R%GebS$c]n,>Lb^h:XXLdHRP8k_@*TYN<d`J7;Jg*De+Ql7Ph)?=a7cm_4sQaAg/TTd'Sn2g:.P?(Z/79\?(/btZQ2EQ_M8!A
%5;6kp%%kc4F:=6&Y/.W[8e6Y"gia+.+7=4ZohY0`6QO)$n6&9]rSqG/nFP3;51f<'P\>eKL#N7oB;8NXI]9Vcld)fg%*QGnrbbN\
%53<F75PokMqK-/k[P)69a+!d-/cTcjBLVbY8PNM>KndFQauYL:I=$DjRGl([c8r#l2SR`odJNq1o`"-o19JH3a8CY_rN;6@0lc!6
%fkXegF=qX[`qB/Co[q:Aq-7Y2ik>82iq]TnYG#&1g'*oV.16D]D!5W(_&#8hW1+tTA\jYW6oY=JqJb;cA$*7';9,rq(0lF?@OWeC
%n_h/r6Du;YU5.H+4oG",:tRi6c5p=[jfP^PRZFFFF^dSgJ'KJj4KTp-N:GR7h/7.:mhMp*r&9$_8($7^Geaf=3Ae3^i#JGsjg^A3
%RR_.eA*Ei&"b18-6Z9.53&Tpa<p(<[POBOj(I,TnU&D<C5&\_bb`:Wss6-XHDnl^Q8N4J71NhCSmhGqE96An#Y(MP5!h=c>nm_T,
%qY>!hK)4@gWoL%+)>]Dd2mLi7_6,RA9\lMgR@)6JpKS(82k[P3'*jl]XC4>,JC:mgIeLEt6+FWQ4C"L;/Qjg)eU-B.^WD/%MsmtV
%BoZ!8-F\4#RKKD:Zd0QVQ+C[aYr"sbFYT1+S#d*k<clo,Rk15>-<Ns(9brDue_XqpNS&`]2BkP!,Kd>=c'U__4kc8@HI\m*Y.$;)
%k,&?"k%R19UV1`h$_O=Q9?tMroZu@FZ2+.CX7'OsqS"o?Fn7IT2`3:-0'l?D7h$@EC\e<?A&8O?NYYeTrb<N@NjMg)7kjO6QTEkV
%9tGc[]1pH42BuuQ;0%8:ds@d+XFI[V[6hLM-i@4r>$Tj#L@G#OWQ0D>=P$,k>,sK>^YX"#VVe6)e+?,sBmnf%8hcc`a.Jh970`T_
%$[!?#p\(q@kFUNWFulGEN6V>[W8dX>]>7;/i!XNWUFJ0p??2r]S>kn,PF:7?he.YeQi(XX]RtZmc5/@qVD=Xt^@H]mO8bkA?4"gq
%etrqHnO>B"i<>flUW6Q/',HA!Re,J4]lVQ!`@cAO]KKK(aS?JbD63u"S3LHIVDX:%5@J+GDLR`>=1B=;?k_9s.'3Z2>YIn.HBIeH
%N8ULX(0MNn5,SU+KCm$F!(;B.,T@IdX`TU&(_65jka)hZ5Wnu%:)`#QiJf+n7hq)]_24`YRm?AQmYUYVlI#Cl5t*+Wb.C_U"g8@#
%H?6gOK*EqPCb3r/hnQ<Ph]aFpc`s_fR01>f-B=ZaB@^DUjs!:i;,g'OZ!S:+jp)*[b<IInlpr'Fh20LqZ$6nZ[rC2>oKUU3aCsed
%(XIPE:u;$`m.,!Y_&bWB&NhVlUgQ*]#7!1f#;RXOf/SIc'b*hY$s\tB5.Eig8k;&!I&XitLm'KHqU@tTHeRV`!V,1?Kgrm**dc\s
%^ed,_i$a&T;dX*Q%Qdudjs<_$IJ2kpj[ARLlJ=]Jjj@7"_Eb(]a!3k'<sO'=&8YMl5C*CZjr:E"Y0(^X,^<n5"A"n<,=qSfhJj]^
%!QKaL;S`H)oFRu\bkD)D*p,Y0_X*,C-ka7CHk2@$\56rhYRBOP_49BIlVi&<SGF;]<MLYPL6c.-U<=/l6(OV3GaQo\51D3Pm9^=m
%Y]O(6r4Q0^(o0ip3i"i2p\TT[KCPd.nSnGT4c:/'L!Rl^NF,npl`mH.:m>#27YE1*[ZT-kgm8^5cka.tX`te4ECkOjjDTt!Gn[W+
%fss)pbXA19))RG`4`fB9;VLe;U`p;'D%I4-2)>iNgOC&;4>KB-EH*\INK?9gVbIa.fDD<'fuQAGMpc3["2R9bhaWhm)]FD![#dDF
%D%p9<^*mi11k=8t`fY)46Cuj\1,\pt*&KA=/_L,;1IPD6Ut&P22OO\'g8L*G%Q<q(^_lCeQKE@n_TVMAj0//X85NOCSINVdFIIT\
%+Jn2XVE_m&lUGcA%]'o:f)?#QAPrh5>2D6e(h$\`8PiSX'<+f34p/s$[/MUK.m/VsLNH&TgrYjs_tZ3L[kU\q(KBSB@BtlS4<#8.
%JdY$Yl(Z69LsfliZD]g[#7?Q*/e]1;ifIcKm.U0*"Oj3@A1I3?MLQ'#gbB4X9-$CWqhI-5#'iY#aV`ZH+r=2_-FuLbH&<jZ/t@^-
%R[Yrr?IR3#54n0m,^X`7!ocSF,UH'WSCUcYl,aLdTBT:hIbu@@&p[=;0Tl[[Iua4gbZl&eJ$)p!o%D@&d8/%1dmi\8XcgE:$#T#X
%P`2D_C/\[RP7rS2#EdNEamsE45qKQ\H)1#HllQ$]'C"Yk*^2Ya`du*cJI3s^ojW1pnfZ@<&tWbm$kS=W)3iXKduWBn9[J^P3p&O;
%8U%215[F=,KI(_5ASGFo];'*MLXnKOI9+*(Sq'kN28U+9rH`2rMmfI_0=LRJ;*;:+J*V=q-][1Ah/=dFFP+Gklp_V)NW,pAZ-Z(P
%4o8@X2))@^rGugnFh)"[imAD\J`7-/YGOj`;WMNBk[.L1YJ6d2<jpR+_H('QZTgC\D\l31]jEQW?etJJa#BJ+k+GfH6]KQuZfrSi
%p<3qYH.RpIF)K,0'9*NU%ZS$$13VBf86\nTNW,TjY>4ub9+URp%ldY\"i&:NQR-LmO$,MqkHSdmr0h\]O%4e?O1"HnK\OS(/r[+j
%g\'3X5+$]\<h&+-[iM?-3mjUSa.7/?6[o'goU*)E4W);e\EJ9S$Z<\?.96@Ep#]5-\4QS)<9_s"l2M7+T$fhn#>jDUp$e:[I;f(N
%"dg$>"L/PU/R7WaQ0/@bre6(%omKX+UX(;l]=f,*38`6P*Zr-^9'!7ALWE3='TjUf;ff/hBprl(bfeLP9q!E49jX^Z?q\p)gUPg2
%:8VV2dkq*>agOE=bLbHRa4<ndYIBR/Im)Z&It,65FoU5\eFppbgE.XrbIYF^I.OZ5IXA\Rqu8kC?EV&7DP'/J8)$OGG08"OSiq:E
%rGlu6Y&#I%'tP5_6WOu@BI/h/Bi0,pgeWFi@B"$hic=IbFu5VGqWg),-4oj*YSoL/`l1"tFE`4ipqBYHi7I0&Ht%.;_qM]<KU>g&
%-"<W4G+O`7LG'ELg]LKeM=/CTgG0lLP7q"R6a%FZe#WJgUpi10:g/*([eAnA:QDinj+X8aKo)4SCF4a[.@%P6lEHjOXHJ#q\^\_h
%CAN"bF6`P`D!0=.q`=_E;dRcmBfd59eOkrJ+\uL8r"UDE6Cq!he<Z",$$ej[drLQp+]#&3^Z?Y.6Cn`5H7MC@T_*@e?A,S(#tb*4
%7;e<'@Kp(Oi#7*MQm$6d0_-$<):Hd7rYLJ1ij%frqMW<$RE__]!\pHh3J!h=7V4X]GAqNqF3rJ"0/mM8Z`[<ShYLO7[s"Ce-g%qA
%p"N9rg4@p32R_hq48LqM2ddTFT0GVUmcr?rpRp;;=B\6U+aXqc<RjS8K;ICO;6nL+K5b)@c4q[PhmqDR1=6V=9pRL"P1Y&jZ7u5k
%M<TcuWG28j3iLN_-:Q)dkkg%IfZ2\sQ+0-um\)(LaUrskXFr?t9-[HGl@`/9QaF7rh\/+Sm:-`%+4?`6_P00q9#<$,HW;=N3R-Oh
%Cl$habYqZS&JA1t74SJRQF48gnJA<2@3[CtKU[gL@"oVQ9Kp>[BHlA8)oK/nmTj1I*Q:WeaS&S"eu^FF6bKhT\2gtK62YnIHD!eh
%W@7F0CQA[;cAJ\EX1K^9rcG#E;.,sVREj0Y\6n?b1d:cj@S,E>6hg2/2?q@\;tCSCC7fud-@Db_SWd!1JIhEb+Q8"PkZh6b(@uN[
%\"34`U5d(.c'beqqn?0@/X#_1gd28;-Y(&+ce&c!K[I=RXHM(kA/HS5U<JdN:I!.@q+a*TL3<K`N;[S:/>ueT^#>3?do9<bRkQ=0
%48?om'CO%O8I(mZI?tQ;=dJsUB]uuE[iHElRPSdj7Zd-"h7O)V^b4^K$0C1d`/+YB-k45dJ;Q0@I(0:7&L:&8hd3%k9A5sP7s5Hc
%>F.!)e&PGC(cYF/LR[GL%Z<7=71]do1H,:HL_Ea*)uXJf'PJWK;"#K>Y`5l<_9?a.KVmAV)63OXK7a_t6WHft@NqZHr='C<3K]G9
%#GDk?&'/TT0@0]APLmfNJ'i\9Z,qcSXobCVej^%7c-T9V)b!h=-ph"b9kG?LM'Uh('j-Sj`!:@7AC/@nZ_TIS,oUIW]Z^0*cjO5;
%YsFQ#U-hDsL=9/UB-3\&X6%u\,6O5*\t@6P:%dA[P7`:_YSa4uc"j+/",]oYZAmfi\'.Br8uS56pARU2<$LL"Z43qhM'Ns88833?
%`2J.s8P0pVCN$g2CLXt>-uHUmg1IDe,F&99dY]6d(i""$O[Ii9QF)TK-<\7sl+@`cMMOB_@;BmS)bD)MPQA%0:+GT%#FD'BWniln
%pC"T3UW;upUl*$\[cD6UPqRWhr8q,(ME+H(4LT<$j(o8&7,=f?On34\j3!b\rUsB.Tna/r`qe'-:f%3ko^1+g40Bi4@Vpfu_+sM<
%B^/cPY$SgQM"PT`Z_D)J;?E#(>'kQtr]L.hQ.ifcTg0m,3$$;A.qNRm6VXN)OU'ud@;XcLBPlLt4[#l`X-DeUY^5`@M4``_/b7;.
%p[VTl&6Gs9qVk[k=L`Q">.Bo`Z-^k*&Ma99$]nPoZ!&080K(aB/hT/"-H'r<U/"eT)(Sq1joXQI^AQ_g?:+j.HWXm@kiFnj'q=)N
%K\>!FU`$mh'4ao%O&Rjcboc)hqT]1&_sUpN'.UD!O4Ge8gl%hpB^O8@.FqVNgL.B,CNuI><AdgL7ep<7Cbi-+[QhLf2]7NBmpGUn
%HuF"5](^AlDY[n=,H/(uW/!9&,AN6e4R];;L5mmg8G1bo;>f^kPfm&:WN3]EAZ`^.eF]fLjaR(!6W^^pX#"86?T)T2XtIuWf8[`Y
%YXt,3pL0P\*9Jankg.-Yp%cK9/bjHhZ*IUP]i/^161s"P1\0J*_`X80_&)EUh^YsXG]F]N>?ptO=gRnpYS?eWc1Jm/I%G'KU-9"s
%j/!gp\uF3X]iJA8o=%^W*;af,@A&*jbhXB/>[P!Cs5lu1d[p%@='JfIZsi!Ja%fdsUsSQ+oD_qurs)a55N!91aVTEPoD.R=W6^[C
%h[$T1qt]p-YLr$E\%h@'f.R)Oqqh%%hCehBoH4'TrH@#dg'uf65AWU:Y1im=j1!e9rq83_Xlgobn"4[qf:Vdjc^4,#DBEHBiVM9b
%nm)'*]=`PeDi_=#d?q:^HCZ,MZb,lM,<]uB6Yi=15DT9U+D+sMq`Ff)e6)4ti?]VXJfXh0J$%)$hZWgX]<8QF\,SG<g2G^/iAS*=
%fm<P"lhMhoo@mt<RF/e$eDCK1mF_K\(Y+Vg2a?'rpu9\1La??U4k%Gj8sX0P%ZdaQRkA3PjBK4`3qU=0%+he1!q91DVJ`gQS$lI?
%2;Q'p*6TmIL2ICKF)7W-0s-W#fH*:q8_6\Ch(cR*V/$9d*4)G&T&4ukhs*$ZS%j**P%f/e];+[<cZFQIBU;E9GM4(^.QNgWaBQ)a
%o=)0sQ7U4rBO&=5=pFZ#]-U[&cn@Q34c`(lQV?4M+1=!E]B,O;X6l1N.i2$(6,Rbd)O0]`0qT@?%BJ<]8U/`B5^(9$FWKANe=bjS
%!n839NM^Vt)Y^4t1f#6SB48<A;_i$hr#n?hibs@9,tl_J72tX+C-4>0P%ON7a)qq-@*=m?a`\Qh/e(l@D&Sm:US&4hMn\KXA=$QQ
%Z34_5Q7p/+$,HhMkn4VGf4]@;-iDO@g7X#.#5.:sgk/A(Qkk1P&LJJ.o5Is/%):UAXO9V+]jm=$hk]B)/:)s]4#D;:d7^6V*>]_-
%U2A@ugE"<`R3k_RVC<>tJS^+r,`#IKF<Lm8W8!W9#gB.@4#YH$)$4i/q@k]tB'RqQft'tO'6X1?h&p(JFaOW$XVi0<NE5U8fRUJl
%k0e8N\H\0#PB[EMT:3]m6,R_.Ck*EbOW*Ti>K;\-g0V2klD)?mh[pFe'"bh.?eV*HH?FYqBWao_ZI,!$dCu>.>hVKHc$8jilI:o,
%f.]7XU!t#uZZaA5ghKqQU:l_&&9#MTUJ54<^ZA1#l^g?NLM#]4ZiN;<&fS5n@0f8*gsc%&6D[7A:.'15SJKR+AUDd)UlA/;em-6l
%4%gel'\\d.^AlbYaeW\9VGGrs."J29A8$5+CI+=KZ#5PH0*jN[='I'?k6N<0h+&]qL!P%Ib>dcR<#sG1,>_QA>![d,[**:&#R9^3
%Q7gAHl'B[79iC^j>7bDnOoQ#O-:3]Qoam4RZf_Z+0+/7!KDQdi6$m)N.mc>TFrUOo5+qt/ef9Z2G%eqF6\ft6mdI)cEc'bW7/&l`
%(g8BE0L1-?'qQ_@c#Pq15oLgmY$,S%T*@=kACIur0G9/LJnu<k7S!74;o1Hr:UCcl*f*RNn67_-69%mKOZoI2;[Bcfg8VGbl"Cco
%<&dWUN,Xbj_.\d\E1`LArNBpMRVcN99c>N_h^6p0Z^:HFk(@`CSqXkobbuH;:KdGs3EiR=5lSj$*U4T8RO6KA[6R)jXSFheM9(3)
%6F1/=\fqcHfDo?iA:m!i8+D=T4DMg^I$l>KEJkX*Nokk\*''J(/8=5@>M<?eL=0h*A*ah+%3O4[F;tjF3^U9s]\XhN_NlBp8"1!%
%VF_]3g[J.gX*MQ]kj7kS+c*.K?B'-502PHQ4$^O+_fm5(&5Ssod4grWd)e`o'lH@4MrD/QC7.IM=9M!O3L48^Qh`l9/^29ZA9bg3
%`rtp*L\WAR6Hobd9F+\C4=kSIV\^T+oum\tGnD.)7eB,g;[>VknsTK6"VWP/e2`Cb#@GoP>aYhWA&9V.7fnr/Jf;%,EauO&a$,lc
%-6/,-@8/X5,W^ocL,^3I78mh>4Ynn)-a>-]-YQS-"t^pojp5-q*0:Z?-S:8%UE^=IX'gh3U?INL,r&?D:K(oeiM7a(,\:h(;p&.!
%aPkZo!>/;+0*TB6Ma8@#bk]*lEBLd*ec[aAD@Fr&hQI&;M$qCbTWM]2PXb'!gbK."[UTX23A_/A.9j-,&Vip\p-`(<8=ng.&Fu/X
%N"1W>is:ij+[PEs-r%O+g'XZ0AbDLi:e!JPV9iC,7939g;J(`AOXPi&::nd2bthMtWUhi:dYM\EkXQPMcGH5D87esiH^^4oQ+==6
%(1AWEeZabh@RARn46n]:&):?M1^mU@KOoHrXs=7^6A;:H.rqKX:Ip>o`PB&M)E%_ZSdh*Lj9,oX^p6k6P44X_H_/1X\;MR>W24R#
%>*jrk/`6EFXXHb_[]<^[L.DEBo9&O`aJ5Gl=@s\A@shh@3,TH7dlPs)NaUQ!a\d,jBR\GO0m.HDWYH.efFshQn:j]Fp:gP"_h12f
%V_d1M/I5:09.Q)'FaO]&U!_!A)6nh2`;eehTVG+\iYH\$l+GRg2COOdiYINuF'*T2rR5_ZD1WID;jRT:F<hJ9Ln61o(m,7?(Wh9l
%jX<QTN[FUg(lYLM:)j^b7,NT]aE_5^V4n^BEG\%(pFS\&$0`0[2XqSh:b:lHnI;%2#!$7B%#RJ(-TFi*B[GH6dTj\RTkG@A6"^d\
%"[Xu'P0+m[Y]`BTZTZ/e5YBr\-L3aTp?>N%i70")+ULK4CI!C1/POT]7l,0V8DlN!Y4/)&@U>YB1'_Jsdq$D8#\h2M6"l]Hn4EYS
%fs1\@i@*%rQ;t&K&B4Z$h>c-(;mnMLYqBkJ`0+R'R[-BT4#jn96X#IiGQSmFcJ]qW'!Le9F>QFQB`K,K='Uq-CjuT3,14V4>Z2nV
%3au7CVR\I'!e=lj$:=M.[X$5<?^?;0OVGl,!Es<="5`iuEu8IN(0Vhf-_\rhK/Q/a[#%^BU(2OgRQY)_[cl=VOV$b*dW"9cJFq.8
%\/[mX9CKeu4]sS><A\H.d13N$#YDrAV*u?EZ/ek<%Hp=3[;YZ@Bm8df>Z+BHMj/*Fm2O&'co'YED]d[.I(t11e_W5H4*,iKosF\g
%H&7lQ%<\K3gWTKAdI#]SccbKYO118?!FNJ=o60<bo(@0JFQrAlk4/.nj7;FmX!tB'AGQ&-4l52^kjn?DkPaN&f%9$.qrRFIqHA[&
%8aA:?I=(clohG8DrV?/8qsrnKlXP$9O*tLRqSlLl3&$F2)5#-oSG>U;O/]5#QYu8Ah1]?W+.7P&8K#A)bOrcfmQ]]*B$Kl(roWfI
%^"KlCqaep&B6""sYA_1'4l=V=h1&op!gN=o]Y$I75%]9k=HSZg7XNT&ktPr$V&T6M:uAc(oL>CigPi=RT0I8ONuGugfa&(H7Qq11
%Q5"P6'J<i`GnW5TF@*gr`iAb/k2lL%dmqF<\22.pEI+r:mD21U#7I$@E8%Pd!h@L/KKmB@!6[#_FXZsfOHBD+KE=&jhHHS,dug=A
%VD*DM<-1=q_><CYQPN/3oK?d?oekaYN_ehl_c@8;$pJMmg4D.:;]s<0\Nr7p4d"A?R$r%>q/hA>))"fIF^^9&7F9l;B*'<7L*KjX
%U19f*!AOWh!\?-(PbB$[$Ij+k]Po$S'7q4VLj`n1*mP..0a3R:D%,<Sqk4kqet\jJna7aW]g4L6[?fWAP?FIVDdiB_/6_BR]hW1C
%PON1HI/I?hm"kbs0Zj?9RD#Z=JHeo5l*9nS%(O6c9bt\S#h/IA35h%KLk$a")oORA_-tG%/<12F5YTF%C(+>YbXG*u;H=ec4?<K8
%>dg'<,KN%r3pi2:&hXL>@Oj0)eB1?k':TH4`1FsI21k[DIA0#u'J`Td;@C]RCra9P-q2>P@5uZ:^op6ZSMX77p(>dgV#ohIk/n5A
%b-".pl5gEV=,4JNGsA98\uVUF,RXS+pcMTr.^oBMkU4@CJ,Obd1g2<HXlT)a:&](io5uUQ<^1:tpq1$s:2FNcoKSA^)oRf)Jc15s
%]Kls+':5U#QS;Y6M#G2oVmr-"hXr9o'.2I.#fs.k*?H2-(`]kU5TE-mnuc]]@_*nbB1WX=57a74F@2T*V?aiZ5n929Ut[q>"GeK$
%RFpt6j]s[l@)[R*0B&[NqRB<U1-)e^_'Fb[X'h"<8@SmqF')"aj42TU^e<mF`u#c@<Jum\]lOki%QE\,2B?'WAp?$'=!R7MNRcc0
%*KIs^=?V.s.C:tQl>\Am*nN_ZcV8"#$3+3hI3!+S^aB^hn!+=!\,Ue7]nKQ:2r>\LpN$+]0LAcXTAq%)b;1H=cS6HbAad<@488ib
%m,82)FKj(DE!*V]lWC<qr`9ucg%o&eFC,][@5-:9eF7:_c>1!-]Ei;V"8Ac9[)a@)or)>+.kcJnZWRK0+u#Neq[)0rWcfhm#rLUd
%8F]G#S/C?eGK6.;$#Rh+lsY"_H<_tFcZ'?tM)SN;fPNmoL>b1ufB<A/Js\#+P1uSf>YpPO#tMq&5c[!_.=R8VF]3iU+:K<Cc=%;=
%ZoOGR.Q'Sc"EBkkWDdR6[6<VhB1Fh+3/lbukKogCe.pnFE9?BtSK)o,#Xp)%N1C'a'K1>l8<q0-`'/?!^<&WBNUp/Z]O"]=cO7*Q
%:Ub]U"YnC1BCj?__;sg?U'D^A4,5'<oKZup'Zb<#'pVCSM7=S"BA/7*/>?eqN.l4R'j+qO,7:,N^'\3k7U[`D[iuA)$>-I<Z1kmR
%mLp_:<[(+f726&9HpOj%:+-Gbg<k"2&OmUFjiCVXm!Oe()@(8/#h$UO1.E9P8==)Je^>bPL7l8sO_QcUCgH/WZkOoS/j`56Hbsik
%gSC3Eflimmeuf<U`QS@?LgY`a>C<UW6J/BcU6f)8YalU(#Mfc=2HuQ*?<#jek%RS;MKu``k2h7FR^&2gZ`^`Q=.@"KWTNb/J_J7#
%+uJO/'%46(#Wr85%X+q(G]q"M1sLtEg#23W.SemnBus:)di;"_A]7shBYrPq@MDU@\d5c1Itha;pb8(IT#A#(\Xp+'E5QGm,pG2J
%mKrVOc&%1Wr1Q<2e^;JDTPHi_CH5/L7HQr=6ECqfbk)$k5h*)a-nO7RhqFs,aG`juhc6:Q#-T9=TFdY,7S=lI2q43T8m$?eI#1Lm
%q'!6e&6J'-!Qsn*"%4W$,9RJN.4`Gp(Ds;7b\0_D(.ThcQ#_,0_dVTBWXtii`FqF8?-@DrF?B;mD0]m8Cr8+J6lSh%X)2!s7,>Y0
%K"\403et+aV?"&``?a@T-a4?,Z>G@_J[p_7'An!8^BgVAJMJ5IA?,;Z$2^m^?;34)*$`FgpEYS/$+o)`5]rFRE<50'C]\=FV#b+H
%X=7#;DqP`L[03<EY%\&9Z!Ma"0Kdt<m.M,dAQ^RLEMMZb!0ak;'E`'tOBPC8\ZQ7coe!"MF6ill^<+k0OCQ-'aNRA>J6;1s+?::D
%(SRH*qRLCr!_Sh>b@9I)Qp]I.>%KWeZ*%+Z?'JjG#G)]e30n?<`BhQ7C'GX4QV@gc3a?@.]'&s,BVitRVQ0I'Q^BpgXp&m\bCOf$
%(D68u#;7:*&En8<i$AL,Q,V$c=AFAmpp/Jhd-Vbb64NMlE/1B:jk^*Oe/Ve3NhmL<@KnDFLdtNuP&;+&K8pS:e02sXdLs&!7ZAOV
%.+p)s[1(IWrRcJ($+01bK.0SOe-#i@]IY"[V+;bJ*<-ApRMBAOnAu0%n++R'#%lVQbEZ2A[&mPLS9^8Gg4UV^9q[4WL1`jJ!_E&C
%'fY.qBo2G2,Sqp1WVdjqFm\CN\f[RKnuli;Vq@T`@Za:8WR_3@Y\-t(]W*Pnj]!baRQrH!2RFc]>l`RCDZnqfhnJDG5g$Z,FRI1U
%,S&o$WaCt2\NRo@`C$W1DQO5PapaSF/?;sakf0G0$qW;VYoBi$'jB"%k,=\8p9rJt8/&;>D*s%h,#fmIFb*d*b4ppO]k4g<mK*Y2
%+@(8BU$\e(e&ghll9-&sS.#NXFZ86XaJr^LnH5rX1*XO;R#_o6h=ZZ:!]qJ0dPpqi96"8`H!&L`'#?[uE;2na?Uh\+#o>4Yd5?IZ
%]>p8o`oHYRV*"6F*Mmn/!lWG&89ThTH0a[k,'N[@0h<TZ!TZo?]3tjtec^+-4/pdZN-Fu;UmHVu<9=^N:U:2"GTJ,(9fE/YBjdh2
%Z%rT_;io%TW(06'=49fr=aWf8QKrRGN^c'gYB+_-M4,LKbD$c;0*j]4";7(C_L*m]lmJX6BWOK4'R"[*)*8h0M9J)SZg.nX>8X<X
%bWF0AM<"KcqA'PS>rOamcU8NnJS65SnuOrAaeN'j8E*TL!UN\M)MTH1PEg%'o+agf7#fg7I2HKEI1Ibl/p@>mRO&&/E>%!9Lgn;Z
%6@9Uo4+RqYlRD!G[L\Q.Uhu6k/`Bm'0gsN*n;'5k%oB(hC:Y&s*[L=j:^AsEW$fE=SDVMR8E..LB@M[o9%Z(;g9cLfD?sGN0<>2#
%k=bt]@?*]$[7oVFK.r.?%SDeg&_%>bJu[Ke2)RHHOsY2>;$ul]0URHZ0L.pM5XEaUP[H.i>o(_)im@'p?.Q$$.Bt0eNNnjMTRN87
%TUhLlg`e.uS<+IN/$223jjlOhf4m;`r+pNe<pc\1JQ?Wul@#(XHii#b/-dSf@t4tH"M(+SjJW7'$50,MLR]KZ&1/+D;Ad<A$d1Pg
%CiQgu:6-^K$f^6TQmPPbQ*&@t[SFB%g8d=T:>99J)=M6C%kW$djp(_<ecaM5MtY"4&>ti12H'<C$5Z<E="W6^VMR];$2N^#E8<f\
%'\c"189ug<.EJ0`r!5<fAL[9AKV"D_M?D@ZBbRoTVEr:3Zt(GaYj"^3WHa+VU%17cR<7cqMYMIIOC"YH#jqqR<DiiHe"Gm&5^S7N
%][)]obZg)n]Y(B[Eu:_6@^`6+BX![WA.aBP)e)h>K455g36HA,75(/Ga];@do.X1Lq$r3.h'+tR/3OiVM_X_S_eF5n=i+Th6WE!.
%eI<?#WVQ&\5jbgb9gj_d#-eRV`.k6"MEdTQ=@=p3Q7Ste:(@1g;NrhV@[S2[%ni@lo%YgTQQL?#(hnX?A4<IHq,4YQhW(,3VF+)!
%"<!o9S-?JS*CN_\\JpX6^k3(eXM>c3*.j9>Bc1rG>L3H4]Je8'7SX8n(6[rC70WQjf.>nYP+nMTO%E/)1lP8kUjl)oQX-4^C?ZH(
%2*<X-]9t9i:3OD1W75\)=,=d1ZY^S2$-&g;+jUb'@u,8ma,f8F=-M*?QoCN*(9qZE2)Q`l_B)Lg[KGt"PQHc:Su;l&EWj.EZQZs(
%pZ18,cC@-fEWVqhOfOuW<q*'th#J!bl6mdC7@Y14$632!*s\&LSI\pd6]%PmE-.,;f%":u.R9MA@BiiClYhOQLN%:_&LcfD0a\m\
%JSdE*"Y6/h-SXQSeC4oO<hFEpZC77k8C(-2*+:22,V0C]I]c@?&s#AN=:TM)D9B>XKqtSY)kO#mB;U2)FkDuTF42jT4Z(D_"X"f0
%$cO$(DrFBEL:\ct@W%b;3=l98>@V.V2A"h=]MGE*p66/8T;nQa7F'0=>tM&U.lC!_iLn,iYdj_4X\3'0G<+!4BjZZ48\X[o"VVIL
%@kPhnE0*Jjp9X(1H@*d=;jtp3kY7nfI4d6?&s((<OOPU<:YN@n!poVYFM\Fh=t<ML-V'?ZXf9.PKsW\<R:ZZ$MW'FKcaEo&N^;r0
%+Z2:R,#/k+3;(3>S0JR/MG#ptnn38rXKn2qlScUg/Am?qeCdOtN"p]e$PXLoNUpA\H(k!T"7_r6c3Uot[-IukAuHZSl8h<LJ?4hc
%fU`5"!il,A2q*n%].tIn]a\^tF?/P)<h'95[;p3VSr:8E+T"u:`tM\[icN^el'>=nKaL5T$-siRn.c88iXjD0HEu.rNgu;VgN7uN
%_[Hg-b<]75eA'?4lS'mhaOYJclu-+MmT_p?:Ln=S[$gTk2MKHPcG"1pW$mZ)D#^s]e6F_*GX>"O*WN+a_5?hK;oZrtk(],)P-"_n
%4?tCe!.GNMe?5oFH3RHpi!Miub\U#<CFH^/TuaY`(c?]F2UCF["g4*@J3*-&C#U*LUM?.Z@bC;U1L+lddS#PGbRWclfd_';e7;u@
%5O?lRSr0euF2^;+K#r$R98F!_j@O+G[rfELV:H(g?A7TOjFU,';&o;"ld#0c=J1*WX-D`2C3/tbZ)(<"Kn=h]:oT6Q\1@$A":#_r
%ir)OH"mEq4V">(%o5(S0&4.q(S?=[b!XTaK+eSr-<EgjY`Nb8[68hpXiE6]AA]s\@#Nd+Ii>\('XK`'t(_1XTXG3>-)IZ,\=@0Q-
%^`ft2*A"LiC@TsCYHLF\FXjC5>?#AaA\F\RZG[(N1F9I9\p>bj5l/B4qkkq5A2o06#=8JA-?*fO3DU5?JOS*H>=fa).Li67oPg(d
%J\M222+>"@*H:d1kNEFI7&i-ZTUK^7JIu2YUps#-6QAK;_)\KpDF!sICd7FZWsV3*#&p$(JstdO08^8JC^Ne;>K12q'SZ$niTj_^
%NNM-Q.aEPhc%F8P9q\@]7r;79JO#aOcDA&/4oe[R\2"?uRZ;6?%LOhg`IbLk)1eR3'2+IbW_b+Q"\W(4_0oP$$YP4^X/\K=.N\[Z
%3jE.J&mhVc5p-ZIUTYLG2Og`N7F!`rib#Tp6C9&7Mnhi\$9TI\gUBP"P1Z:Q;ZpWteIYI*;tD;cfRUaZPZY7[UB2/BSXIoeA_JVS
%!_!F7"+p"DM/Rs=9Nh'kCj*JlWY.e:0%oTpJc<S6JR^q]K:9_>5\_W+60rhMg=`JFRq+Nncj[dnHmRjVM=4QCiH'[0)7n69/dDXB
%"i[e:Y/dqmY]QsbYGG.G>/1psX>+!IW<`ngbQ^UFe<qpHWMC,le:@3Ge?>:<plPn7*(MB1(nfSl9qGlc&^ZGlMTS6R7mMQ]]@(aO
%1\%1m?<[rJ6XV%qN(7lk+G.nGJeUnAi%6tPHlqo-gB(*#=O7Xf*Ru`;*JT<NWn7'&#nO[^.Q5V)*h^/K&h6pF[u,mGEQL=L_?T,H
%Lj*jg&_GeP"G5.Z+F8pQ@0\u#6cqaB;8JBCWKf@^/M)AR+"Le;n0/YV&8r7X2\b[:2=^;N1Ebq8.2C:ATaiO"]]D:2&VHgsp'Q#S
%/1%Z)>u-]91Z<fR\R(sXr,D\i#&LZsP:a8<^`Eh(ZLEoeD><"[A1kUZ.YN(p[Y!sn;AdH<__V[U#0[]0!eC^e3\9NB6+o=LC:#4<
%ihu9rlBWo8kFeJZ&GuO1)u[@ZXW48t7fbns;8Eelo;7HN3fK%aW0NAeP5kb-1gQJAb'_B,S)+U_UdZ^G6EVap5=r6S-&i!a5nqLa
%&<$au7ce;OV&$Q^rrctBOWplbK#ft('c/!F"C_N8"t10r8T'=DL&s(:d\=Z3b1=-.A&1&K67-8kTcMNiSIHnOLF5b#PibQ^gi,ot
%61J1jFtck^9c1(/83l99M2Od+VPW:7D$1)H.N6H?l_3DE.>IU#\9CdJ8Y#%maC?j4Vl;^7*h+ekn31.FFtR7a^tYtH(;XRX>US<T
%Q4O+!g'!((7peOJ.f)ZcKcu/;AC2MXdBl0NW1p0p@4N<XPChh8:a=*nPglnps5@[9(%Wa!6H!-TEnS.!P8_>V"UJ0VqZ2=Jbc4Wu
%MK<0t$O8sn-aJlWDbgGr=N+^5@V'a(5U7kL!4`a(ng@as+U?^5A',ufne(NuA&p?;'^q_7`"'-$_Qbt\Sf^lm(Ejh16s/JIYeIWB
%)2b@$JU/T#1WWGRA<+M<K[pFMQMLZs"2gePj!5eeTHhEg^1d,I#jEW@,5GX-i0T8lGStq"&?N2.csb[4_h:uS,>XgW!K^:X_SeU%
%i7Q).NfopB(,,e]HkNY8?'+2@JYnY<kB`tlJIi>AlBOuJI!inKJ0R<Pb'JBBM(fAk5=et3(+CsBV94#7K!&*Y<^7to)%NDM.EBUr
%`M'H%:,-gB.fc=SQ%aI&:ln4@+m<*q>17jPp7`jAOjW;@+P!Z!lMt[Xr#BR6#f3Bnd=)gd^T@nuI'GGdYdpe0k,h[1cIr-Uj8J:6
%EuAW)`8X1*A5oW""=l(sNQq@Tq<+5L&m-us.ss"<fB'P,`!=abD)IoQPM,QQkN2SR[.!WG")<k18S%"AG+@B<OQqLt)p_''0q$K+
%VXB.VUaPRfPr"*bedr^QA1QILrXCA=,X'jr7V-4dE\k3<'GK/8XralM>66agf+9a^;08a:cA#?3k](,d:+Xt\^u-KPO"4<W+;6Sm
%3o1.G@&O1."=a;rM1"tJF;3*7jm^P\%k=+lqh5l>0;IKn$Z%@h7H8g=*e5L"`"uJ#2:QcX4_5sik4(PJ"u\<q/^!\!rXW/NO[Vr,
%^^50#aoDNBW.G?3KqOH.GQDhFef6UrcuB7JX@]K.K?SiRlN%>dKY:RIUacY7hd[%tNtS"8:(qBDY"ib1pt5bnK>E\n&dc1e^kK<+
%gl[PaXj+`p2`ZgRAKn[@K)(Q4ep:*>W*&2o=:H.7%UYV8(ud5+5(PPQ"FQ70jH7<P%',?u3KktO3aCE=MDYDaiL)6_nC")KW9G_`
%"ehXR5_:.u9Ndh6A]@i>=;^<h0F*#GeSn!I#Eb&2b>am((^pXp<mN!,CH=4*9W`KPF[09AMXkC/#g*ZVQ]8@4,oQMP>]:7s2T.$-
%(I1mf$0##7PhE9l\Ou^Mou"gFZ';nOOA`H'E]%<V1ej[q7[OSP5mtZP2%_B!N1(8u*;Mi3UjTUgTj'GK<R2g)75Qr%o8<"P-t*8q
%T/7dU3Kd;gJdeZ%56YLr#Y^%N[M2uG/QK=oY6>If!fUR*0HDHfqhA8Z_e7d7K-<u.X:A@*cP</p:TX`cED_fB[G)DE%%t$shu]_=
%R\Fj5^J1,63EDPH[g\1)6<r9sfJGi`Wl9549K&kpN'/0)JSM:U)PE:Y[jh]n!d,gSK*PkrMP3,Q#6mq>0$=fX'L!h>/+TD\eQelo
%<C$)^#b\\168R>jc,"@3kcoROkZSRQ)IW>LAK"uu<V-09,[B>$LuS2j9=V.gFT6^p(\+nVqEY&r$+JW)&MQ"8[k(7L=dL_/#Ubkb
%ef&73OF2Jo\+iH1V6%jP`#eQ4OMH"U3J5`pQ3O;HYQX&l@O"@q)p_nj"_*:-YgO*g,8jUKYDEYO)W1*C%0G%p1]ZKV(I0rp#*fqU
%["GehmbeV>^deD\'4`Lp6#1M0q1_;/!$]DY!@!ii89<FrC_6)1&SO]PAXgUlga<U(<4lc*/1Q33*V#g)C?,#g@87OoA-s4k=a)_j
%,%j%PQ:[H8!&@B?!2!GLS>X8p[u-g\+/X(N"W%;ZZ`sSrG;_"?S?]6fF,5U7gq^oCK^s@#;WT.#N$H>%L(>mUFMcKHL;-93KpaV]
%1lDI&I8)DInO*p9#,=Cq!P5RqRVfVk5*c^W80HMX1(7BSU"amWFqS@0C"i8MM\&/cMpWYUcIuk6_LY_=@je(mpUD=Q$W(Hr%/!W3
%'Lst<gg!KhGO9ko?J$+]0Prlarq7U6K.j?G8B$2J'iUsHT;bY;!OAA;E@`70]Nk!1VDS2%UEtm#IW#Pm_d*Ke=2DUYKM)A<<feqk
%e4WQ$`/BfK%1a[2@X/_=*+7g:*)rmf%cFBl^j%4nlh/nh$P*KW#cdN59iC,`3=YMbppM+;-r@edJ)d\S?a[t4+?[*09qMDrZ@/@o
%1Ej6tBO#\$&oo^\k<TY9/2]F(0fK)h7K[!VVm`RC7G)erV2b$U*X<fB6U=NV*;?%A.4#D=/@N^+Ahp]trSXOHBZKp<&@T\c)Rm-L
%#hWO_.J%R]MWBs.,VC0Igns-:qD\a_@mT)[H9i?2KOGo01H/tpSC5S8"KnX<`+/hc0]0g'UVk"**LnsA+Ub*'%'DB>Q"]+tolVq7
%Vm+.Ur#l.-VE.m#c=CQ7jm.qa@Y,\\r?mO>9t=\OVK%"&>&(BZs,#ubnF8")<Q?P3'5,ncBFrVU/"Qj?MG-]u>.>?+R4_t%F@06i
%FO@MGG-g?FfD/Uf-/c)jfG4+@!V_rt$M2oO]c"u#K1VKjcnX&3Po.-V4+Y/3Zu6rL&rD6&*"7MhqM(j+8P$L%:"VC!KaUE=#SJQe
%\'0LH!"3M%4q&X<dY53"`h-`/iS\uY#2(+(rS%VM.)(#NpO]Kp&6'G>%/ZfF/;S9:I9Rn[6cbn)f3g!lFQoPO/6`X>3LL*'q`H>B
%RZ88YO;LJF;YMF$V(NZIX-KPrLg$bk"-ogk5WpL*cVP3OTjm70=4@qK4#1VY/iPJB"jjXo']DH[+AJYcFD.J(3Yf0>Te)d9=%0c2
%DjrW@Ng2^qre$>5286>b%-Yq*Z7>gllJO6Ys*=EbIoCP/]UI`Sf"nDn2m&e1[(9;<^:/_EDB9V5dCoI`TLTI:]/[N&X5DJ#<ET7G
%7UBkR`V4WM]/h=hP2^\:;X^8$Jm<D-3dgiD[O3dhT'!#aE;5_ikgR@2c'=Y0&(Q*H]W57ac#(8rjB=3kl8FKNC^!>5%'qrbLOXo,
%,;,,'f#T9Bb'`!.C7kP2@_p"XN^F%K)8h8!Z6`;n`tbP#3Kh9?WAspfNX#A$8:of&n:.>GnM++'0Nmsc]qS[u@&%g</kDWYEPuA%
%TC*YQ.5jfMdj:;_"Y?,D12RL2'Tj_)bt-",9MNeF^)E/gf`8T!LI0g?!]_WA+;J#Srr5`VRWmb!"1RnFJLSR].d$YY#>$EU'$$:0
%PlIJ1"=DFlRi_R[K-XnK`iV\rMBO%BWAqggWeRK.T3]in,ShRAC'KY3,mHM5ef8@#UcA-8)Kl+363&T'9Sq_D@I0&MM=V=ACIkH>
%B9V_flFrQ&'D<ho"dK?RG$\2Y0Z_L*&O]!.!?FX8R;A7UCobZI6<#ZI\X/m4&!3fPg%qCBR%P)%J0G_5U5**/G/eUM_`:hMifkM9
%-CLu`;]r_in-k5sRZ0Ch04A^h3<+89Hk@n@YM?[9\YmoJ1?@c.fLFGa/AhrqZrOC;im>5ZM7RS.\'tq`;R,;40F9RSOnnI?Lof+M
%]%KE9#m<]hfTC`B?79aT3Bm"84TQ_Z$t>@)rtt%`FgcGHWe_E\WBbue_,1N1VBHNTi]CWATm3soV4B`5W\GJ.alq`)=\fR`6?(X&
%lP%PScXu.e<J;XL)X%=iJWq6M&+Zl7Y_7o+7TtXlO%GfC?BO)P9:V/8[-a@BT[>'LcUSC.]B6YKY"Q.$+V2C)1S&=(D2tjaaYi"t
%g>eP3=om`iEVSNh#9X*`?'nYd\L<]We^`4<*1)4#,4H<"S<*bI14g$E:m-\SLhC/E\e]LFZ3-PmUmQFt9?oi.a@8Rh<Q`aITASh3
%M)%J'mK-k`Unt_;#S]VV#2V/HOI?h^s5ai]Z6$a8rQ]".;o1^8>rqoT*kN3+bG%XDljVr"YD05'joPN>5qJk^d`,1*m6k)u4'Zi"
%espH,OTXTn*WrttFDs($-\d&q$Bf1U):+W.=.Z7HNLZ*JfdG.8FB'QIDd.p`=\rdb.$X!CJnm9I0s6?o;H>&kks.^H=LNe)?si)[
%^d2oA9Rn5p.@Vp5`K>CLf^La5n&(PW=<Od+b(Sk#ln2jdY?St5;\njoLs\07ab8#h<8#+UOW1WhcHfR=__nH'dTdOFU8F`fFBDUH
%;6bWG$XQdS"h6jd)X=>Cd%IA]NlOh1(&#ZX@5PtdK:/a1L;gIn`4,mH0N(M&5MX.VgWFB698:>J(`A^'V**Uh#A6%u6YG.(1)utM
%VA&XKBZ)l#mr>(bk4pu'JS#o/03Z=7%7Si5Q3C$-(D2g^ELemQAMlKji[G(#KI%&q+B0d]cXeS&rQPF9R%>/rJaPPi=c5U0*@Do'
%12O)p$Mrl_(.'U?Q[N>AQ0(&i'HFa5DZIA7F%-TmI'GGdYds&pr]Qr33_CR5NVjk.VQh_<d.DMcdi^,Ao8<b#kU6dpKX$##3)-%b
%\ZUi>5Uc:^4.=k-8OIbCGi(f6#c^;'Pr*:CF'nOg.E@Qu///t"7gP&F,%W<:q&5Qga6AL,fjZM\&_*&hFbIBZ(0cl^[#\UU5:)7U
%dc>D^ZBGQ6*)b2jRH9s1-#jp-)@Us?assD\;KlMh6]qp$F?X>OeDL@h<CH*]?hC_`']pnS88:a_6BF9"UI<L:^5i?[futKp3Cu%<
%PtWkE94sJn.[A?rO%tD2RGg%_,AbV(RKuEuGeTCl'=8q#2gnXZ7Oh!F<Rkli>(!EX9O`ncl`*j<^f_N.6]:$"Sq3D*)C.g@ce>Ob
%BD@c=S.W-`I&*I[J9^$I<M,/00-<,&!+[5'7R0":Uo1LkA$V#L!\QSr>rg[Pm\COO?ZO[/M1t:r71E!'M.NA[Rha9d6uaaHO:)>f
%9bpX<7E+ah5nKBBZ&:MlE\IcjZ;EMJil@0=aEYSmnQ\dU.#%2e#8&:R9LLe+k86K#Q`3Q&.Br%u*&DCZN3U;(Q`Q!SL(rC#X>U^4
%=9,BK$fV)XCtI.##fgY?:BIpm0153TL]Lu&[Xd"*D/i8R"l_Km%*8'5l9.Z0<BrAIhmZQ6XU$>$$:^[P<ttp-2a(Ioe4qs`dpPH]
%6!ILU7:\1Wq+?<p-?5lp_K,>SQSC;;0boE6_'%5n(^ARlL]d1%-)ZpjTE:"0\,tcB?UnGpKna9k)*\Ce@:usK*;mE[$%,\1$)T%I
%(qu7s1*"#Q>SFat(+:)!N2EFnZ,=$_3,T:e,PBT4is@c.ZKj#!`!cscl+S4O"^UV$em8[Ua;O&I@HWJH%\4&T$ffu_'Zbe25M3@^
%DZVU#S.J"ZX?CPlF6Q^lK`E9=e-a%m>qRtX(VB`<R"[-5"eS)B=iti%7GcF[:YVPY)qeDY*G6\$'`O/L4$"jp)6Jl=7d1r>/hZbJ
%.$BAHqZ6f:ru>GP7MR@(c]uOIWSo94ja)b'.`QhNdprtSCls&q64hVS/]C>V03WDB6F=-KLqC?dE4Z,88PEBb3E-(s`Y%n`J:^TU
%a,Rc6R7,\2eSP7,`S`ta&Km<@1]B:l^uehJKm(L$.'ao1J[WRQ3A)W:Ha5`-:bH&^_@i9)rRh`U5``WMedA5>MfM6Wj@*8feVUXK
%"`_"dB*D+%C5>9I;\uf/qc+cH44O&BpF;@4>H=4[hm5Dmou=agG;t*@mQ`U=in!%Hh162fDYc9fHaX1e0<fm:BRES^+P1E#\;H1*
%7L@u';%_PTlk!Bbg.Ka/[6TtY1`$=8\*D]TPc^/>k*W%+rJ%p72F-qEA/;2QjCJ:n'J7Mtro5G22CUX7Nr:nS&ru0.?rW:>df)7r
%`7+htgbm"Nn<ATH;PclEP:roVd/+De"H^b"M2!.<%ODp.7:,TfY@49<-n$M?'Sg_U=0suYrAW,A"i=VIL8S@9bsC'`T'Y@B9@="2
%^Mo*5>ho,C4%LpX4G`'Tg3Wr[eM7Jhr(VM@Wj$NBE'h`H!m'?WJ1,UMe8>t>"=R*2($JgbeU90>7:)3`ltC/XKKE1@L-Vp0*Grua
%RS;+('hE`kN%X[13/+TEpe:^ZrUCu]dm9P=rHF-%RM<sqYWMhE)^>uuj]S%`ho,+\FuPeWCIli>96W@+6OU)s#U>fgiMr1Z3Y3jA
%,5*:JXLM,RX`:,CZ;7KP&*O0TfsT>Df4r9uGcnQ=/^&*,%R$L<%/(D![eO&`jVKVg9TMe7#$BbV8+JZG\XZh@Hpbe""4cTt:FrVe
%0mY"mf50P;f%<TQYE^3K'K7Y6MbQ)3EtoFh^qdBI$"3m7C8E\#pgtNN>&<6l,u>suOp.StE"s&<2(2t@ZACZM2Bbi7C']nSG?jVK
%V%sE<:>0`\>ne/rW5BFPKMXSlMN8JabPseRn'Y]9P9bqO"l0-nV(b.HnU>.q5qNIG^d',<01Rl4Dul7/(o]aXqtG+eo>o-S-`^>p
%M`esjpS+/EPp\?Ijl,//Z\U`5$P@s>gmS(.HN-q_=]p/tM%BF(e?#n$2^BKA<=jou-@!WS0;M"^KAu:>&8"HBBcRB-i;dh2_U\`Z
%hp`#$Mdhp%#-;q5$u1,W>T0s/PHujI+q+()r$<O(NNioMUEeR/.%lug6h[+(BRMU&,FaogBh3F3_)W%22+^l#r"@ClOVJuFneYZ>
%qoP6$0Y1mN;3Y;/a'>5(4=L,ErhpqA6BfKc3/h/7KU%`eI^jq*ptf[j\c>;ap`]^[M<NHa*/$cW#3DD,8nf]S66cVL!>qI>'M*uI
%j8]6(Md8nTHk(:\`/R6RK/B8-SD(J+GS+?@o;BhNKF"gh:]j0-4NhAn4n3Kpb_MA]8d[[5V8d)j>GT=UOIsNhi^n@/jQjhqE7F?-
%\cG#0[;([PlGhCjS`r2OL6f(2Hf8H:=Nb:7itGZjgHZ0lm>3U>#6V)A>T#G!9@ftA/0?Z8Z\M(34T]I'aK5drC/J<%YeYK_&J-?O
%1f7,i&;+lIm3gf^kL4gI2!s"M7;+`+1@'(C&>`o2+gD<K!^&X1GZF-$fX$3#r?s'8><U11HFseIl'aWJZdV&(aS&mud4-9r7-FeV
%:cq$cHOu,Le4t@3]?"@&hsOC?D*0_3XKHj=>"SM4rU\TM>8O`FT(_e7#4$-1(NC@W9'p641kU`bYCp4E\#sXY\M>$_9fJ[MZ0&%F
%@Z2KML$^3X`%_7%J;bC;N94hJ&b5J'=Sl:<-lW1d_?=q>_Q`ee^e:n:Vd"E>Jh@IT83N"MM)S8>PD%$!;$e+*s,1p'f-(7;1Vdm6
%GN>lG'B-JIZ8%B_MUVj#r4OQ,cfTAK6JW%HqGP@>M+:H7Iin+160!+.TbHd\-OrEl=E13U&2(1K'etkE"sA,G+=PDE&c77lf#PqB
%.S`s!dWnW`!e_[u![.'m>[Y^W\mqoOK+/SU<4@,,TRrTfr>3/#a\+C&O[O]IOgdedHiXf<q\Ldh1Ih-(#C9=]RY&(ePS1_OAKq]/
%;b8T?-k_q-E=3Qc-?AT;m;t.i=B<5#PJX,6Us64i,-Ni,RQ!nQI#PZh!ET8TO0d7*8:[1CehX+2`g+\EK.tbMqXM!jNW>+K9%D?1
%G[[UQFqpt="Gm,=]auKPqN_FC)*Ao]\=s@O)79_I>.Z9"`[0-6O;^0C'=%1LT3"cI!fERm:=9J81cAo::QgPE7p,-gG$2eJ_m`BX
%V5l5]23d-X'B&r!D>0&Y^6)P#[%TGek2]6J"!ZOF4P_rm<WNaiICTV2M8kh8le2$lV$Vn2gQub7O1_3tUuXhg*=sBUN2Og,mX"m\
%=_m*DE,!Nq^X;Z%Rn?;5,,E&a9d;<*_>UobJNI23F^nH29okkDFE,G"?;*l9N47hl4C/:6@[/%/RoBPU77e2=B'Br=adbkg(Cs!G
%'9:?)U<@9'V+^nQ2HM_*a7m1/_3]h)i:c*&CYmdocJC#ZEXP"MOe%Bqh-8.m):!5-eLRf,FS"31D^*Sg^fuI)MiB$O<G]7f:3@)O
%s$JuU\A37'e/eEg"a]6ZUm-$17%P$J&i9Rj+ih51+qt^^5q1sk!L4KmT9.\b;HTD4Cm`_p4i[K#A6I0:/iW<rU+q<lr]L.ncX1XA
%jC/)aEjF_C@M@`fWR2h\bsJc'^p'%E8-r,-2?n\JF>T_hg,4fiB]DLZOc\PXmCBkP),jJ!cN'u7C^Yb[<WP5jn<in0hBHFpia_Oa
%=;X`MrlaORb"4d4;XGK/T[&!#g(Smn-3Y9-@g9Y[!j;g@fdAGZAg_ZPOgp=Vp.7[9jsdl$$i]YI2OaNr)[6d/m9V.7dU597\EfmL
%[fG0]lclBrEoId(h2@$i8LXLfH3>,>&Y:N6Z((8W,B4NF3DlYV\N^m36,_=m9W3"%g/"UgF+;a';aQnsrtN\uT`<.#./BK%"'0bV
%FIn!QC6Cq-2Wuj$J6XFk?/igI6W?r<1,,2cS58RN$59+l`An+G/U0$*AR];'BKELLn@$FS-(ZlR-NeafV*$$W+a"YjA=P#]PhF\M
%'9V]Y]JHeW`!!EP![Eo$d\^FO:cXV+.Ybf9_4:T?O]Nh7.jtkS$$kgPP!oSDPMX%;,%ZVt9OG4NJ)&/8'7b2]mcY+`KMi"])p5>@
%o'"VC^A@arTbNk1?HUCH;VF*(mjKVGOK+caS)"RXOZgFW5bm^7U'/JY[7uS8b]T6FAm5Cq9Wq.\`Sd%W>U/U[ciCnB!h1A05u`9J
%r;kE"+JM/<(Vd=WKF\jWBS9;l!c;>&?52"2mS"uj_p6IUf7?n]"7/][Fb;bS.%d=4.ZHgrqL<[h:MX/aPQe&Z&::W1+NTjn8tU4t
%]l-OHCs"`H9`MgYpCrE,r/Q!-/cT8&KQ+[%n$pj,*$TqBf(S5,XPg&Dc)%3eZV<^];psF:mo1(h0hs(XH?$+gA3Bb/a:0LJ;#Gsk
%X(!"e6tt<QijQd3aWC1B4Tc'Takp3.A+;tRc>FME,#Tj8V\7i+13MWPV%fW,l@@G<l4OE=G8%MR&`VR(_<E9:<%,FOV*sjt6`$$D
%:m;6;hUW*]'Nbhh5DHJ*j`!)sNZir+j-N7KjMKY3MAn4t/+4VJICOm.I#paq;-IXG`WWW"%jP$182+_G&l[-lRe?-f8&5mK.KZKN
%UsYO/)^Ps<Z74HmF'--VBh8$D.l&^2i^e/UGBNV%$Ji.*NiGd=`8oRNcJ/eSAhJ.?\G7bC`*TCjjX85^K*Bp?[!\:bgk,4[^NE_(
%i$FHd#uPN#V<KCZ:]4gg2$a0N:EFY'""SJDQ.Fhb,1oC;Xss?[JA;/)ra&K"S7fD_Pn\id64kYl`4!i^qP;sE2`XuHjkKe6@6p34
%/D/oeIFP>MMVfOg-LY^BOX`u<_U@Of3DHT.f5:Lb6\7@CVDWqnZ_J^k&RP:H!GF>jGLO.mb.4#))AQYk<2ZcSjklBr8\;aeYTPJ?
%%0C]O+;d=8YP:h+8aiK5Wt[Bg>K.3\">Wc9+'ZBLh4HV&_ac#eOiJJ2)b"kX5^Ad#;M`O;II]alc_<p,:ID<ESWhRS&l%QRJhrl1
%C0VtBQ?#Yt2E.=P..Y9l%MS39V;[j?9BOqLj9$RAZW:^\UOBN9m*gnZ4_SG\#u,,bEus.F%R#9qCFUE$qYT,dk^hddmF(<=BgTSk
%WVeX)o*YYB,?,?3C.#*p)@A`Tbhp9g>WOgA&r*drUI%Q+$,Nm[%bhF&`M2b>8@CE&1?,eGh)an[I/=Dt$n*1*>8BFE7AXuOjGem4
%n8PA/hlcA/Wh(2QM&%jidFA/Z'b(0P#IfcmR_.rEU]D6T,EX8KUpKN<qgfOHml/lP<YAo,hU)N#M*(JaC^5LWZ#5L!e0`s>8Aua0
%HNgZfaR@6Xoh91=EeAPU/&V(=ETIBm-2^Y5/4;o)R:!`s/68XafP)*;>s*$`%uU5hJi75XPqZW&lI[m)mNc`n[iogaU/ClR7=orW
%ra=&IE[hPd1=q.-rhR<tIB25G$&iO4F$"9N<s-*goc2cQ2fJgW]D`=EXB;S\3?r50@%a$g9f/).B%@t.5N2#Me^(3SAmN#)\=:H\
%(__Mc3q0i>0KmXf!I,)5-i&0QGDD\cgml=4k?cad]fDu%$'UcB"VGslDpCs]\@a:rd#0gGCp<&BlOlAFmX*i]2f]*%C7Fg5g(fP]
%YMIWo+.j@qXA\:*XhBT/Q>*K>]+r@D%TO/0npnlC+UlY55ttd#&.aY&T%,h=LYk?FV+#Zs[985t.3V^!"EhTrbA?Yr9N)4$WZem\
%aMi4o!:s4OFbCGOeB$@'D(JP.&^)^`OfOa,a&,HO_&Q_F'o$dLqIeL:5pP<6KrH6Z/[HV!<lT*d67:m:+<Q$Jm*O0q_;;@EY_Hq7
%j.0k%<'!%LS"5YE&@q=+V:4QF7qH4?^a&*P>B4n/I42kQC[a<5[?%b\h2k^(fuI6;]mb7#U0N""\OL+U!.Tn$2(p,7d`R0]*c7pb
%f&:o<qZ<a;m62r?1Wd1_b\COb8[XVY?IVGBo;o"rT*$HAJXOQi/ipQg*8S\>Ld%W5g%fSBb&?\UDCQggN1"FC2%$gi4R(e@NcKD#
%c_@L,7df3JINOqV!DAWgmf'<<?cp%e0Et[bh0]!s)9[K*-+N)>4giO92(D!P^R%8q.6.X;br()SmJ^#$!Z]9.`rW,Z6e&=SLOIK:
%.J6L;dW?0(Bo\O0Y80IN*hT=WEdug2Y;Ijj+,6857&,-o?3t%/]I:I;[@*>PNEOJ^j:PHY^9I[fT=o"6Qgk9Dacf:$n9Lqr6NT*G
%iJ5g^?n4Xk4cKJ!<)#ko:MHqc1>SH(/V)#@oSrBX@BM"3i6EbqW?e&"A_g7^ZB=o6j>987`9c#Oe(f*g7A_uc7>;lo#Z0Yp"AG'9
%TPLt10u\Cj8T3Lu&UbU*n?6FkF-PNYRdjH?KQ1X(Jch<MX`7LcD+bkKV.dp>N7M%P6eanR#*R]gg4Q!iY]%&qD@WKd7IGmnp'lGT
%/F7f.9fr2bTae9FC*taj!kV:;FE<eBS&m+eG-U.tf;50$dL2RepV$%4gUMod[9`R:mh-\PGth)>@2X%c.3Xhe;Mo>=SZdWO@QSZ8
%5=cLJ<*b`CZZUnFLI`5C'%RnbDoh1Iecm,-dt.327:)`WoE/kHQ>6dmpshd,,_fV0)Gp.:mNNu-3PP%eoJEE:3M@*SZ8N;fWX5,B
%e_Bi4;$ftd9P)?Wgo6QP(GA+-rRfce?uk)(0J6]LTjQ=dN-Zn:c=ri8+YF%.`5(-E>tL>06'C74<$DZaMdqAq:]h;\8:4LE8sRh&
%M*F1XF3Nc-4qHD2<@HRe7;aGC<Et?..F&WjK@A\J!9AugEd-hkG#jVf#[F;VI::"O"=gM^#4Z$L)NgSnHi)ZD-0SmbO.<u\4ZQid
%e+3G3r9=c"/b>qF?)Jq"(6j@6oPrSFJo-WH/C3:"Yc,=rNGd_tF(][C%M"<4E\jrZf`Xlt<eqCSZF)t<^GZ18W)r@nQ.b+1SC)O@
%6#NV28GW?a%1[;U<oL3WJ3/DiAb[mX;C+YVfgMu8KU/r/=G*R+Ue8EV"qaJ<V+I]%(A7H:Sa[mLUq%&KCPX$8rGXp<#OekGg[qt]
%s,PO);KGCJ*=+gG^bNPP_.TVp;n2'PN^tMeEGVam]T]k9`\mud/i3UanWIdR8&-9LDnXKu2%fH\Y1(B;6-TZo0`+d6lj",ZA0(m#
%?0,RIZiuGC-fIeL@$*ut<MIlsfsLQsk-ktbB-+'go9Rpd[b+^%<&]\Zhu's(G%4cZ^(4W@RFfq9npt&*nlpHj$#YN8@G_+HVM3\,
%kjbhDL>Wngh+Q-Ub$fIEisg3\^oHb;&aHN'rKS@KQu3NjYu<Qu:9\.#f#hh=EuYk^?-OYB_6D-igDUi'GIJ/pi8XaCh-Xo!T]uf9
%BM0AuCP!!+WYsu;:-l$UU3[JEL>08jWDRA]G%1Vto68^,Vp53=K2RRh+l&h+=CdIj.uM82g8jrilnGcXEOM$ZTrWk#$)sIP@\1>P
%pK)A6![j.i<Ep/X34:'-1jq+Q3Hcld,mJAK!C4`dDe_/'0VWJ",HQpQ![4a`oa21b@Wg7a<cXCqNM1:?-7nfN\$598c&iB57m#$3
%5R#-o['.r$FRj/N8s?3):^8So/4Gdo:HJC0c":Qns)$E5?gVu^rIoFA*-jK_o@LO%\[C.5__4:A#4gJe7F#)<HspN),EZULp1BiN
%7G1PDD:di.o>Q_o6$G3l0E@"$=RR8gTm>O8=]K$LDKNA^Qt+53%QUIQKp_&/OlHk:>:t1>':T*PlZIF/q^+_E_)"V4^W.[KeI@h>
%oXF5a"UJ#TM$LergCJsk>.ZB%;$0WuTp3?;b^a?[q(!U<6T">k\cgFfKfgW;%hj>O=.FKUj@E;>AGY29i*9B$6QZn83s7kb(7GZo
%KB'5<qU8Shs5Y+"*1Zpm!\'fF;u&g<C&h(Xh:),48RG)/rK4_!("I-UFI/0:r>E&#ZTR1?'IS;2h_4:RoCUR:LJCYg\.Lk0#7VTk
%g'>R*gclo2i3">)1.63cqlUX*4>6VaD$lkHL;mhD&r?pR4**\"FcZf<^Nq,FK%B!Mag6FiNM<^6e:=,m93ti/2n=A<LIa@$?Y-t@
%p#I[OPKpo:Xa-Zmi#f6^^W-0JqH`pF#lX>nhr_kJ4E9MRnio$F<i3+ZTPIut1"u3%aCE"Gl3X7"#m8HpK-Kb\HrKM^h!6c,duPWT
%'Tqfbqd`QkXdh#t_)O/l,#3@NM2dm;_%fDrR$G#;2D0\$N%EI8q@[?Uc/gK]Y_:@(,]G_*Lr,`-(DVZ.C&tnugqM2b*iK7R6drOR
%"e0$\"BR&3J@HZ^UCS4!*gT8G+ik`.'[nsG.P=RPbEq;[/36%pK8LY%N+73jCO()SKnUu'eQq&<=pEVE[8mf+Qf83FoV`\BSC\:Q
%"9BoD5N6Fp$ul0RauR]'g+S%?b#KjteC7F24651?=[N#N@+rJM\0#GoY*R=9CJsChiLKu(MCrokE@n;o?ODc#,;P"geY[imM@$d;
%>n?Fo]70hhf&XP^8f6J+,1eFD#iq\<:3*9HiL%M&P'd&&j6k;T;j?KlddAdMe3f\P=<8i5p!L<6R&.nTY]0T?:'<J-Z,-Q_WP!HI
%oU1Q<&\MlPQPpUsgidtq1=H)kZR("cFTp'b#,OC<TA8=D%E\`E`)Y[<YdC3%>5b9%KkruiXZ^Re8#[6ZP;_6E09+YaStSr\_e)/8
%1%COW(:l_Wea>*Ns$\Y:Af/m:?CJ!t_`<J(I.gM,eC"cDEU$]s_4rVap[,37qa#ih>FI/r<66OA9ce"!A;Z,_",=mBEot<K.!V0E
%J:Bj!<:kp_-IHK[6H7Vc5M*ji[1-u@!2t'R2ca_4Im3,bHT.O7PPt@dg!7>j&d7r/C;(m5MKs'S[G([D)mn@eqkHkRQ?R/\VN_+3
%D0a8(Mb1g2ZJ37ek-1#$P.'.<GrRhR[b7%W1oE69Mu"(ACn%N4i&3DckJ$=J&N3t^[TTUp85tt?m_8E)pd.U=h`'I0#3]>PIN8qY
%Q^l$3R!TD!@@MmkBq^5[KUeQQeNXhhpAnPa'bM)8jbEUJj^3PC,mlUC)2#nZUql"7,V:-uO\oUF:G0c)3(0bW&>3Z@\"Dq2jYQFb
%Ls/m6K),$1m@R`Rn4k)WluThjb.te$j:qoGUrY`]TWe\ED$CbGW)!ta5fJ-oC`eV;(C$e`<C@')a6;Rj;ZMkD'EgN%LB17Vk4Se#
%#1qHEV_aW!p1""M_f->Kq!N97D`8&n8:.;sX\fRiLl<V8ELju6r_dLW134-R<FXp!%mBoI*h4BuI#t!^"4q0O(/>S.`@g6GX1*S%
%-HPYDmq4\H,##_LV99:2j6)ncf'PWuHt<20FX0s4Z0e/JVDpeHqY]A9RJmeDj'Bs=gAo```J9sjJV0(@+qX?pOT'uX,(^eS'M7U?
%*m=&lKhXVmkfDDg8A'Y'K52*VnK1M4r8M^n_lq=g,-H6EHVaCOEGeO?qC$&0WglO92c:2iVnUMgHL%"M)gLMmWSSV_M8Q4='?jj:
%=LURh'9hX0D.KQNf>R$'NtBiUGC]^J#HsrtcV*"NM$"]KoS+P(a?ZAL_gH(C`NY"5RFe#1$-GW=p4X!Z@+rfSae5;S!1h*tNh0+2
%$%]!@f.lW7Po`QeM[[pt4-s7an<YbXAc\cIA!]TtN#4!1NEs`#gVpL^aE<Y1P5g'?M2cjIpkS==1'nt??H'/d=AZm+##nB45kflf
%L_03DCn`i-&U!NjInO8]@r/cH]J(ZYC;U8f;DpSVYeSlp+q[ou]ZqR``6*0,LSUScHZH>HA,luY+7[SU#aH$>4IL0=#n3n=rXtd\
%dgSue"BYaK)!7j6[?FQ+3(JZ<@/"o=6Kj=pE'=@cJq7$#aCh0HU\fCrkTem99<)V8m\C"da:1D+M7Cq6fM,n>o=!>6$2>=IVRkJ*
%O?SjEUt_S,8^oJJHe=V>4?t"8[>o2I#$KO.7o]Y"$Y7g(c/9CL%(i$mf5phdWX+j)\VjIr=-O;k`hD@eB'#[-NUSLW:F0%H!H8V(
%3*!F"/gk1cT85:)04sWgIa8fscmEiO;pYSsgc5Y51+On7TtSY=Fk*b45@OND1A1shM!>NP.BLd%LT%5/D$@jGMZmuc3&EmN+jf@+
%F`)`8Jk-!&l4'NlaH9*Wi0sUDcG3C"";!%5r+CfIF6i4>@@f%-P@8lA-iA01*S3H&I(lM(iPZ32Z@g5?<;3"09+)pKI\)#[r,hHM
%\D*l__tT;f=D.JLS=_;'Nl+7oP@4u@HDd8t`-r3=?aZ(`4sW`&@:sUf5gMj"#(Xe@=YDs+4d0nMg1QNTf.>&e2dJ+c#0BD2k<.Z\
%TN/Far5D<li+nnH>:e@f;(mO=@6`Fm-V`R$d.#[s9o'UoLVW#qDKkA"p5f,=Fre%<36Fjr#-9_G]1='#,]Yf[jkG1$+IrOIo!WfI
%@7LPB<'1p!lqb8;.<"U;N"/j5?pQIUNI]j$rUbKl>OIq5V7>Hn%Afu+d$J=$0WG5;qLX^)A_PWO3g'd[cFR?VUkU8XcOl)Kb;K\n
%mX/=TUJ>M;OF\ke#.O_D#k#[/o2q\H`i'jd-Z-+F^a>^N>gqD.4ZCmc>dR-j>0d]:PM1aijS83]?Y,P@m\^A*)gamBK(^d@C'Eg_
%>BdZJ;+[`t3cIha^dfgU,W%l%oCjB/?V4OEXGN<ak(0"X?=Y8YFAT`5^2>'47+^kASRRl9+P?Qc%kbG_Ac5qrnPZ-!j@hn:Ar<+K
%f"lg9ItSO2VsV8UjT_Xp&:JN,o&L0GS-%2%)/73RZ>E$M^I`:!/BSQTB0^<B\D989q)kU_5A:a0E""_$eq(/rWg>YQ2!BS,RXA7E
%-]@&3-(U%8af&JUm;l4Q2R'#-`$C.RVd\%>RtZd>BHL6eK.`fXLPGt0?5E?f>uo5:6DuNeMkRa(j#)>DDDBHW]aR5.Wo#@+=3SOJ
%@b&KaqJpVh!$3\#F`p8<Tm$V!0^"2<%r+lkpS)F3okjq25A8&Oi'RUcT9XJXT4XWeE"&Gc?imH1d+7su5c7@@q:!NEbq.$.H:.2H
%ppG(QFpRdJ0!M?kksT(0?-osA@+c=!>FMSJ_E&AF+t>37'Vb>\AS#=?\:%uMId6"(B3ZL6`pb,$c798No,Q*cgIYMhG0D\9!].tY
%QUjHY&V)C3j(Eoc?r=SS!CHr)o*;+1TA2>*0;.$A\Mp,Pp200f+6WHS]"sR/afb(:TXf*7rqNUeDiWu3A5jaJdE65I0/Q;i.!LRM
%W)sWJV<s)(9?Lof2$'(7Kj9.B#1Ue5ad"ocZM9BH@T/ff%a9mCohHY@c;:'7Km,H9m$N(]kCE,6\mT2:5oF7-2.ZSo'.rJYr)TbC
%EA#mD]HK?,@=l(`#nPW1Lr/[dQ/'gA%\S9-=kq.VXh04j#+Uo?$HJe_`_VW;&;-/Sn:+MfrPF;r__&WT1AM1;3*2=HSQEE#a:/H/
%b5*;-plCD'[3f^a=/7di0L@_PN&iNmdLIT5NWAjM-JLoEFe5=o#GZX_O$kUD@;;Vu)]e1D50J4#VJNL<fXCZ.b>O0XYQ4s6_EQ.h
%F0D]BaP2K6=8d,*/c$J?8%>Y!4$^uKh97PRWqCIo:/j1)nH]*tR>9FefqTOtCn;8"9pHB\j\crd;?&'UXK%Y-#4mTJq<[4pZ%J#p
%'[_u+D#EM2.b6-4S!PVamC(GVJmE)YCm,utm%n"@ag?Cri#.q468iVsS]q=;.Ae[i6A7:<[g+Th,"LB+q:HACTYQ8KieLEsZZ]D9
%rX0>RlXFS@6;C)1<='>P\ULlra:8AQIF)t1$F9VLj))3i3/E^[_o-\OTc\.lgdT>+b\jg:VGV[d!>TkH1i9g]^C[r-T*HHi)e.Ec
%<8ide,<Bka(>u5SkA<MA-rG'54L=N2/gW:C'sN2=/4CcY.U8@+=3lIu''SEt#h)nJ:;68E(B]6u\*Pfd[lE7uG=BWlO24CKiU]Qm
%ZSUboP`5P!_l@ECq1)$V!TSjlXe@`1@ngk#5!k]$]r>Vn!,>"?^s'Y=HtO5u`GJ5`br"oUg)qBkJ.2r@M-U;cL1/Q8TH!=c\h+IB
%/16bFiW<gu)Q?P<3@CHkEd0Ho"PNM'=%&HNPB3rPOJoBSCT,Z,>H4,BONgnd@RQ&k@%Q4C$"9Y\Z64L]:9--4gSBET=Qhj9kh5@]
%6\Qb[0N/29(^2<bo<9*BAi&Gr2R"8Q;6_mG.q7;75jhMK1]1BQ*.8R0oReT5"#V:"#\jN.4DR=hOS3MLf34NC"7)a4hlHlkR3>,n
%UqeEYS+D&s#T+8![B#t#X3fgJV.-Y&Z3%dm.NI-rS>cOs?5'J)VJ&`U&9\T0;.PsLThim7KVfW_AAf$6p@&m#NCfab9grOuo.<ng
%e-,564'bp4$*J-(IUGAAhPbtMS)dB\?96O;+&:th7GI-4QJ$)F9\7\!\q1WnH$L8b;g;49olVePG1ioW\H^h#gmp\4i9>e%')HEB
%IS"FX44Imuc)Dh&+20*A)@$9l+Ho7B</"8qQ6<?g"c;l.$J^khcIg!nWJV7h+[;U1ZT13P$-t.?6pu?dPT93)dH-7pOjajSeJgkD
%Vk/<W/I3i"*3l5'dH7Y[nl<!qT#,b.:s8B,>:NPd?2!\U<>c`S%AMZTkVXdS4KZd53fm(04b(/`0F,*q&H<IIcEdPmGlf4h4CaRH
%i;:LXMfC<3,N\upZJnuc^_+?sVO628K<$V$U5JmK?8r225jO,V!QRKb?*Be>ULsDECn@HMT[e'<#968gH-`/h=YO,I.1`!sm3mM0
%i4X07iOucj;P?I9EVG\A,Gs,9CP1@Ta:n%[6g])t19;!kp%V/g'Rd2#DK!&^"h;>cNC16:-\Et*dIQot40I\TStq;P;V&R+L/M@U
%8;hG7E'Wn]PEp!llWrbkKqU"/"8u$#'Fbbi2>D>u/1+![Ic@?`ob>bIjh\mEO$[>d"r2E2QIJhY@3'HZ.X[:h&o+uX\'u0RMK<'E
%c`!@n)A/]PR>:aLTp#D]F?iFAZ@S\fYV]BA$f4"MKHXfZQ]tW%X$'@&E'G(BT@mO?NfB)f_Q=dC+Z+&@Aq*4@Y6ON.jbTC?[i^%Y
%c1E+Xa2@rQ(YuR7kAGUU:i.dJGGRXV9Xo&E*.IJChu<S(rJuI.a+*p:s8T;&q`k%WGl1-_ePGa:7U&3-mO-$o-DJS[2`lN[inep"
%ANkRZP=r56gS\AO_pcZLqLAEms82iq\'KR&5>R(7nG#6IgL(!4^Y0e/l^sQ'2'W(js809TJ,GYZci6\6U*&K8I9ZK4[tV#XkAU,e
%=q6EDSU9Of?X:/I^3TqQ[u<TKQ60sZ]pkj!E0l'R6i[(d*D180f_B&GT'D<70N<WeXttYg?(M8-#^JndZuE#:AHFTLX;M]^g>U)9
%Uuij'dn\]*c3PnIC?jONJeNpGAjam#HQM(.R?7ggfg]sNF<3i]B<&<B3aGT#S-C80p+sQA0bFa374/./EU`6Ak($'K60?$[B2F$'
%Gp$Q5hW`37l]g<6`*W1AF\7aW=@WFElIWrK[rtA#7[1XPPi,@"O#\MR4&V^JSo6Y9\EMC_g\c7U,rfVB45.U(09(lgJsjB';l9bu
%b2;_<iE(j(Fd4,C>K@9YeXU$(5K_Y*pBoD#di_A5_GshKCOZRolles31;(eLm+'F[mCjZl<riRm?2EBJY;ra@Wr]LM)ah4BI>ieL
%![GfE#Y1Q\B-nCBF\`r:)1k)F)hNY]39J]DPo!F*p7CR\qW!RUlIu\LR/f\r<1LgB-t\(#E_bHZHDFcXQdgr?+9aMu6'[&iE!%6!
%K+`K!l1V0L<CpnjJ$<[)nMWRV,90]#1(Z0*UIdeLcmPp1\Z2Qie1nqVFn4M6*Codo(miJu0Y9Y3?R6HQ&akB-/JoG;QZORKF[@"I
%/W.-D,`lWkZUALq^GPQI:RAXa,D"u(Y52aPU:&R?E.LUilN9R6,Kl4+lp(=_il?W8?o]up(m7WXI.aG@fg%,Bi,g"T_'"N98St,Q
%ng^oiQ(nI2l*icM_OoRLSiK]uWr)kJNTj`kE8M4bG<32q6mPF!#f[K`lPk\:=Z3)D0bH]Z!L,A3d/E3ahlkNRgKdf:SINDGpPg_r
%el4=l8dlY$[mO1<!>fcnM?a`5i_^XM(C&Jc>/5QAAS9Sf#EEV#C6IAFKNf>uljl:IZ2,H(<lm1lcn3lrVTZd`Anl"Z56T-JDs\Go
%TF[F;FGC[j*-]X:]U]lu!9;5D!_B%4O:q>ND+,gH"I])DR4!qN_aG/e&VP]^ZS8XV]>o#T,bKn%NO7YZ]u4Z[=-DAc;K4!&>,%/^
%X-?LF@4=9ATkQ>=7oaD[.1p/1rkDR5n&?@.<J(h5!Iff`A1nuLTZ0CJ%T7f7REMB.A2qAi!&"ad^AfC,(4=q`BRa!,>;9U#/(b)K
%)?GuI?WD^TO(,G^5\nE]T[lMTi,(tZCh)2IFJk5tmi*uN-3G']B]-;kT2+qhQC='1:4LsVbeuV!W1Zd^Lg1!lp2Q^0ZCba1ICZH=
%7TaLT2j0fE?BNX?bTo^9,6?aj`8tfUZSp8L8o?+LAn4dn>\]([i_X*!LrL+4mjEJ?e)ig%hI7:hN[e$X/+ueN[WI4I&@oFp[O`qj
%=]pB$P!`H9o%]T94f=H0E:GL(;q*g9-s;2S>AcuXqhO"R+B%\LP8S]4b<<"52<Ia,VoX[+>rD0n':bNSnK[oJ]9<"V&n&p=MH?aO
%#*K:tEfj5FYt#?^,l*Vp@^>(GRJ(j9M[Lsb=EdiRlI2j#r//o5'me7*TbHBqKY3tCZJS?4LkDVlD6?.9,<P,&RUddRX(EY3\tYZQ
%;Ben+H)jF0p@p[Df%IXOP/1#0YtJ8d#JHg83ds>hb*4-(!YA"TPU6bO*>#*S*S#F.:U4VJ<Vl8.bADc.VP70!A\*-Li5EFA+&JYa
%i9I8"q,I.DPmLPiE>BFMY#1Ft($#L"#'X\=I1/Y+s3#,+mb]X5?^W64T=Gsge.:`;"ZoMI2]c$A]hc3h=G;I3&H`3S@Ras-BEB1D
%Y[A&,($R9(1t][\$LVrQ'L]4%5q:$g;YI$nZi<h8nE$<+YQ\i]IT+5@?b\%QJS6'qQ3#d&iVFt%.$Ed<Jdm[O%'suT_I%u=.?+WP
%73Y4K?%(J$lZ"]/2O+Lk;aD9:@ViJ(g,'](Xm=ViZqn["Qm[O;7-098!VJ?Wb=/=*6M;&tW/"Ba^BlU+#Xct6H2r7Ol0Xf=Z4Xm.
%nWpD2[V<QcqK'"%H:-e-Hj8j/>I3:)\o?nYD+^>Sp4hda?@a^'_D'dOn^B$F5XFGc$'Y.U\5R*ORaU-1??mYipGqkYgLKir/5hl=
%Q7EQO+'kmcVeo1-LRjp@dq43Z``k2WkF=.KJLbq9<H+5OCb"'Y6t/[Y]q1?i>/YWrDT,bD.?kHD(OE2-/%#rGW$r%)HqrIe.$0]b
%;+H#j*79Hkr%F!NGI9l8hNQ7!s1M!C_k.BBo]tnh(P_0$HaAf`IJ@6Ud.Are'+%;GZ%*65(R?KqSrVrr#Q:rSFF/LrkZjHkm399o
%J%A9u*BU\6T1lqCW?hJdokjS9HO%!fT(MZO?1m6dauR;S[qq6&qG"hQQ.r*UO,,?Nd*Io_0DEN_f\C.Q/DtUe9r+Y8Hn$Gm!qUM\
%F6b<,%?)WCWUh7,cNI>C>)s0q1mN2NHZKuI^=RkHUg5hDa6%=^Q#uP&(\sc254J("lGdT,]"^2X+1PLeSX&s'9nI%#Qu?lN8Usf%
%?eV=1-G]\q,=Hb./#XS%:r]ggG>Zj9(m;`D%ENN:(HMRJi^*40?SZ3_nj.T"/mDO(^=.SBbCE6)C^Y1tj5QVmp^d>Pp8>>/XbMj!
%]\1;<cP4@rd#Cmdg'MdM://'tR^+q\[5"6lTGqa,Bf_e+(e!*5Tl?5.'b6s7V?c0Q+jEZ2/e:V9$WVlt(Cth,khb)lPihi(/u*Lc
%Z8#r6?bVdL5C3%Lo*:>InE->7p%LL0:qSu0GBi0m#N%1ZGb?C^1TLiVE+^f9PS1bR,#ulTe<#"$;P:+Y[>Q*u>@i1&*q[t<@rk-P
%hs7/f/kl>K\83e75B-F)MYt0b#At(?h:S0CdbiqsVZ:f#Q=^n[fWVrG4?l(ig*m;3kFn.sW^kMkUb#Doa?q&M4p)u0ef@CA9(RYu
%_fOQYH#N'uibKVg49VpGW92I\[dEdt*r"jsH%uY!:3^PU]tN)_8`AGDoL&@E8,;uJX=i#A]uHi?_XQ>oQaEl$X4iPNWe0G$g6hN\
%8E8j+(g97b[tjVj739GtNT$u!KDE*hI/.+Km4KuAmXeqiBlMZEhb0+3G5oAF_/\;d\9dU<p.6h.kO4TA%q3325&&/EH-K*0G(=J;
%;iiMrBuT.o)>-L\:SfAdKBq2<'JXg,OG,$AK?3'se!Ke%?sdpF]t'non+GT+;S&n]RgUXt]6l8#*\?,3E-lQmL,X>,hr!]?:Y*S@
%m1[Oqr<7-0=C%W3(Fd:*f07la0p^)g(=R:L1"V0G2(K[2U:!cP93V#opZ9.IG80S\QhpnS-`Ql);0/[0/?L#O]0sA/qu_ujH8kQ[
%Y53L7I=a6AB5S&@Gb5QGqI]`0,#m)Gn!"Umk[q8)(^dNjA`Q$=Q("u-Bs\!gr[K+cO@_lXDEN_;9!8ZsM[+Mp3&Yspea7O$PS+bk
%ZFLTm:`S@cd6^U\50tB6G/Kf]lL1iub)!Md;;s0''Ge[&b49jeGhrU4a]G=<&Y,KhHcZ$J6WF3':$nO666\[f*2Jrbi%gGjMu;cY
%F;Q=_Y;%%Z$T(c0!N5L-)?dFe/6J^4L0Rd3h0F&boup(Y]VD>,XXVM[$)/i3`,"Z]Jj]kGO2l0cpG*"$T*%7kST')^;NB!4-_5\c
%R4pSB;B&X#^MgY'1\0&1-52+6\*9`M\BIit7ulfBaAV?frpW%7*)u/2Gc]"lGm)\)4c[KGVV?S@\1lR(\sd#bp]38cs!T%#oV4A^
%1n'k`[>%5jHJFo=;IiZ@?D*sY=P#r6)Z#>E%-4FJ=lU+u!EgQ:4;-?c<<3ac3;.,]a,1`T?ZOuQpV/M&Pb[psG32lhW-uY1I!7Sc
%W-ZNnQ+14;5!G5EVhaB+?K2+*XeC_3[Mfs>\35Gm7peA\VbX`hF1[7sp##18;?:#\(QgS)q-JsV\,-F,K?%kSF'&>=>r'r<:]QC<
%<]269S6kC'HUmt.':ld-O1-79q+GGJ-ufE=65V?7,o<<.<C5Uf2pR"Q@eL%r(o35;*CYAEK+>_'C8]1/bLU]0n]>Pqo%3<e[lq7q
%@^Yp*[l4_g^)^>LCUXRCLNl1A2aKBp3?I%&!4>n3Q"=rLnPk,KB`if77*Y0X'h(>"OdU2*4m9@an%3h+<MgS7D%aS5J%5jlJ:6*O
%#3kdA9.BG(mU*Fd\G'EImR_&@.rR?pQdUe3rZCKt-pmt6"o[8S^e++_[:a9Elr&AC,DE#$_T#$W1[nT+e]9B6(!FJ:j+Hj>Q$Ld4
%0(Sc5Dg,n#^%eim<9YUSk3u[nq,+L_nF5Am3H+>c^V<c<%Q)R+lgtF/];*0VI`:>X3!gn;Jk$j8-bC']on]l?.*pkHP`eGQP2/Rm
%lCCFknmKP>!,ZLhM>Y'dgKcjB=a"Hgp^S*YV8.Si5&P^\n(-(:PFhbS-5W1.[ktXW!WC/Faa;5![&^:m=3pCiV2TP>hkd`'?%[3*
%230$0J]L^fQH7H@a9?b_T\l)sc0Z^hpYiu#&4+QsW6RhQg2\"uh=g!M#At(?h:S0Cdbc!UXdsfcIcsPk.`8sQ:?`j9IBD&m^@Kj*
%o/#r0!(c*J^QbUMN#H`V-8/fL]bcPgd^_aefF]G.`Im9`\T7LPs/eqV(,,`8YW%?uJLBnl,6+cpi:4X/h;#Yhn#c03If<*1l/l+Q
%osOOXB*[Wi42nA4[<]]>bbQZ16&P5%"u1i&b0nG.Y\#*Jb*"mNG@Y\V4B=Yk\JIS=#lKB,`3Mr@$@ck":]d=r][K=Kde.I4#PVPA
%brt=TDfpa]&luMV7:lkP6uq2\'cuZkbMucVZrGTlfqghc,lepc@3H-lcm+(4[FKn?m1Ream*G(bIr"F"ibP0&PTif1bN?kdH1>'1
%r3cFbD9qU?fNNXMgD_K@SL;\^i-dpYUmpb8BW(d/;EJ5&TUQg).1&]MF:_s8>e=r2OoRi6JI0=`^_'aj4bu42:JRYEK4t@em`cb@
%d8SjRKV<IFmB&g-O']QO7;d.JmlNYApVNDHg=tL7>A_C7*[f0>H8/dpD_bZ/X=5CU"f7ZP4Ul,(^(cDe$S9M$qLZ0]#lq1`F)G4[
%UW<N;#h-.))gTHu6*!1qF2Tn8Q4*NLVUMpQRLT^tW/_N2<<-n<BH[j=!Q>+R++Fs73CGTI>SAO78P$*Tc=Z]8Ll6ebSLBH2md9mI
%Mn)R!=pJsXk^@?;('>WTrf!W52h4m1!,*U'kle5,b)>gAKQRh@7/?rJRmr`u'foDWpu/62ii;C96dSGg:>k_!l*IjArf&<<\`UF]
%5on(\),s!Wgg]?G9u%N+`c)-A(_NNsiEVWt^m>hR1-6m@ONXa20fa2eln3S3e+^U3Dj.BubAGIIQ`gULeQ1se,Hnh^N`,@hF#?`;
%nO#-CDA8'SJ7f[<K`gkW[O2To1s2$EFqNWt^YP`o"0V9j\^CdjI=*\:rnIARrP;u&]Xb*Br[.GUfIA]4%eh1Je+r*Q\bDJp2A^0]
%Z/]>["7I@L]&STa=F.W:/W!LPq._jNgLak"UOIPD$$#ssgb/0l53TB.V0sJjF(c%T4De?9f1#\qomql'pWdX#4mDG(P[Mi_ou-5U
%$+L4H%3Y>X_Pd+l?*"#n0_:?$KQA8EG_.C$D&X`g6;Sn@$s`@rhrQTAj^W"<koZAJ7:X^O>Y%;VEbGnUZ(YI9eOBIAs1#sf>6hUV
%0)PH+3P'Q*qKOu,G<]YkfYmF664^d`8%0r9S5oqh"O?>n;e`[i5a"MFN&5"pQJk:el9XEfFk//#=O4sg#&Q5@PjkOKdp3kA*7K\o
%:eK4-nZ=G6,A;M]iOQW0hV(t:J#=ifN\\VBDX,![Y=:3jB?(:0^#ZL"X6+LPgC(!R"(C<SjBU7n22R-L^5LR-]>sa._9hIpdbHJ7
%Hi:Fc1c@a(0:E9VUaPW-aFCgOi:c*cNNK`=rVaD</tdLGcJV#Skd@m_pQj87'!SUZ3Lqqh;G*!/6mW%ET!KeMK@B&S+F;CQ@k7)k
%K=W^C1q/AYM9_s)+i\`ZS8Z(#HhSP,r4q^9]c10s:\srMTrdpOm63Gc[P[TVG"NB)`NPW3#&e@7EpI>b+$;`P<eU6><#/M7IiBg$
%6Hl:.V^V,G:.qY1G^HZ$2chZilbD8P#pn#dc,K#C`l!/t&#Aj')f4r<^V:H->#.&F:RIGtY4XZs6?qT4jaH*h_58kqH5&S=AJn`F
%Err<[r\:ES(7,.^1"6?X4q=:lrAH!25TLm[_rF1,]85qKhsSq>`qXLh%e/Ul>eJZWrnI*sLBmQkCs>--mr*?<#NluWcYg0i?l6Y'
%:O94RH*4?1C32pVFrmL?@gG55GnL@7,.gWdW@_/k+C5ll6`uc:/L&\3>>+$1^"=[m5)a?-34@ChbaC-@l6?8qqRXRsHdB._Soj[M
%Jm%E-9Ue!5$3MmARFV>_@FiY18MtiGU>SZ6pf(Fbn27,<h[3/D'iOK`*^h'XT.>H[cOC+G5I>SJQ0j$AP\/tW?F4;[fR36jMVR^T
%5AtmfmtA/ne_At1D68FDoS1CX5`SchEM*4[Bkq)%$-I;/4bsC0k#'Quq][1"h(3g1K:Xp=Q<IYD64e4V!5T+`J(j*L(\BrN)oIG\
%rn%255I?@;r\%XWg$)u_nL,P9Wec^1>%@4Nd>gU7HqcprBD+GJ_S]6.)Ro,s^Tdo)Hen,]?[`uCFTJ*Pa]/e!fDl8'a<hP^WlUbV
%s-P>9l!5/KlU7`a\X/GEo]TQ:@`'[=V+W)t[GFW^)M=oQKVkErA_+t/-.?uOB<U.e=a<BG@!bZ]0sD:#,K_b-[snb@cLHKb(UNjK
%*:@[s^nlHqh'VmW)unj#PZ$iY#RLK0[<H7<c>BC%/L`+&".6=]J9Vms^X*&W\VVJ;;Oa,2gMc=!e8:qV`lc/R2C--u$>m)'%@qo\
%WSkiEHhd<'lgOXZc/3N=r707Y)t";KDf-dYnMn!U##if4g.[+q#dAVOF9f/F2/<X->TBO\`eLkJCq#LgPL:;UF6leCf*)<WOJ0j6
%'9dV#s'QK.:ang5cMQ(6mpF5s!g>TQ-XX\6I'nu_qh7@g(%NuTL4*`FRn=Dc1UI1'6+Ll-4067Qm0Q63NX<LF&`pW?2;)m8A6MC?
%A4j9uD*_9^Z[Y6d"R+F@;Ghp\PLMD;r@#(u$[c%Z6o&IC!J2?mK)XrtCHfKq7&H#[bc`%]<pUAm:hcRN?sO#K;'T,"92.p8&&Og=
%r/e)1*WO3OPM/RHNVs-V/O_dW_HT-VhF+INlq6gb'&jsqJqWnpkU83P!25#CMAkk]YQm4mTCuU?QQHTt>oOstNf9%jPRMhNX+IUf
%(Mjeq<)"+^.Q6UjUH=-2BuJpC&Q5ehh=7>M+8`:WpPrD>D`c&,9h.H:[:#O.dC\7M6C-Aod/FI:G],i^5n-ouFV9dFHF"'BOD`Ua
%;q>F/CU7K%G8O4>Eh[ufFXZ5T6$!,=p5F[em)'k(l>72Cr#KDu"RBq.c8/o]G(3Tg]`TIL3#NRu2D^=ZCdB@0[phj2k9tPJQ;L%M
%dS+(\E"hHEUU2nX!bpXD`0fNdMMA.hO-nP"V=a#KV2>bif_TBM.YuVF-/!Y_K1F.E%+4XuRE1?+RH4;;gncoK)L)a%T-@FCe)&CB
%i)3Sm6'Op4`DmADoJ\Q0Fp"u1:E9KT&fWjtaV)bc`_7>\>(m(%[7V8gDG!H^7bDN/1W(;]`J0aq2=&c36,;6j-:(u`nuuMBCf9WM
%S5sF%=g(W`7r.5r1c4?511\g(*#Q<MIXbi@+$m@jBKfSm@"DiJc\MI)?355j%VDHpRaO*BB;_,2LUa]QGkJj_CJ2[E*nH,2),]cu
%A(Xp)pfl3C9N[#^5n&8G<)*BXhtI8:KJ96?W,PQ/n]+k*P-u_)@MX7ORtYY6a,&G'7ddZ64+M&U]NIcp0@N+?@sk*n+'htV[3J#Y
%:k^5om416@9ON%9/G>'^hN9>6N0oZo*8n9piV6*T7InK*pfeG/j]ZdDd1C6P2X./Dk7tI3Se.te[$?1oU2gg:5!6o8rSr\1ULk95
%!X^&.g=[JY'jBI+n"V_4BVJnsV9YWq3m%X`Fo,5@1F@35I#ah;'32;4[m!,["g`:]@kh($6NmYOBgdI>:r/NS=V!1oEhT'n;D\*E
%#Vn"A24X')1M:XNgbTWD1,T;:AWKf_\QB'D)lj>lZ?('NW0+$?iO^MHUYbh=4gR@fmb@_scgD=M#Q8.KE(`)N*a`AX<@hfKaT74m
%A8^#)q>)o>g<?=G#]m4TRY.IF1J\2nNNi@8@h#EC4HI(%j<rWN[^*>?b.>iM.s&-n"c%nDYcL`LMKBnN/@Xi(E?0V2Oj$DHNk@_E
%`(XJ&4ifRf%+Euoe.0CG`WaC/_B&u@@+gs6S(%qL$^,[h7;E;m"$"CTKo3[rD(X(s\3'e9):hSlr,ZT8O*9[YAcLJ5P_iY+-M!!:
%rK`0O/q,oULTU?.J'=3dYtur(A\gF%J=IRD(^7#CXTA4^:m&d]%JK<^8Rok[o@cZh*C5c9=\!%*b?P-*2)gn+?V@%*cCVmM1uI@2
%\s(RNM^:b/<,iO>+&O#NNEb'GDAkc"Bc603!DT*p;;mW1+Lk=P!GpKTS(>:gT,/O$([<SRkU;qf>)I+.So\%MTTae+;DUQ\1'KaE
%<)W9uOd<pc<(5bGp'.QL;VG?GoQp9F>"'fKr5Qo&Na@%k8J-OF_K-cg=#?V:/S4Vk`n^Q(LS@KZkMKkqk1.pCjar(mRD;&4"1JA#
%$!g9.G>Pt"KqDo]m_.V]9*I.sh\l]?*:CR"a]K0H)WRNM&WBA2^eiuUK*QBc?sZdiDo(Ol>On!RDqk3]ZH_h_fa&HHMq\XspJ:Xs
%Csq0"a^A/YDkh;UD,<%E,u(-MQP-E9*%O-$bELB*9eXE-PML#)>%W"W+H:Odi6a!3h3KFM7H"O9oR:d5,_a/Z'fZ^??GuLTT[]6:
%;=#"6\'RD7$\2MHK8TPfVd(,n!?>`63)K[nIo*n#+$mj30913laU_/$GmtHnBJDeIFCF(=.85BeUpi"[kc_I#EOJnK6/(b)m:.A(
%3mC\D#WP2r\AeJcs5<ol2Qk&RZZ/-Y-c>lKI+V5QDAQ2=esmaW;bOfaWVM@XqWbOOTB65X9!\%S.Q\j:"%ff;Dl'4iq8.MAS[e"M
%4^SG43?NF%+h'K$Ou<P^#WNm!>B'M]-*5MWp2S.ILO]<pa)$c?9u_BnN]4KE#,q6D>QM*8rM\uH*Xq1A]]DnVfXT.kooZ3CBo-0^
%%^jNGe\P*cCsC=ZKqk](c@U>/Ru'bE1Q`qZg#A>L.&=tU:"OQ54m;'aZDBPk7qa5i15sgbW+ZAh%TZcDYV'bqY<29oQf)e%/mWo&
%UE&1mPghg@^q4Zt^iob0J&??Lg"Qd'WT@*$jfi_U[\.UJYe;QrCCb<&F(i14F>*l/)<b():(Pd#_6hG5l(Eg4^@<>@Pcj0Zp(-q?
%+R0(Bm0%/WD`jdU5,/ALCkiJr&a\76s&";36skT&:K+)7_H1rOG)CJ"Bm6HW^:UN(cP^GU@`U;hL!DV6fNG93\Al-/=h3i&/:#\\
%+,(m>_]5N\7J8<5?Fc;hmfZmp^h$p&QgrKQG7?4=bqCMjI;,3g+Abl^+;5@d,)hh%T-b0Gb5'bjCf*e,F:ihr>:Lsd.d"=K?dRJ>
%WJoF^I(NOY6LEQ%faQOhQt9l#gAQOe"?$eXG`#P@M)6;OMj9oJ(Op^]#i\^N'T=V"%)*1qjC4-PCf6X]5't[J7k_es1W)9!P01_8
%5k[T`%QoZCf`K0iNHYiO=<)Ja_V/MNUA$ZD!XI\_.[kpP:oY"Z5pQ1l(^d':RLlmjb/in;i&]g@\F/dSc3Rp&eLo$%1j^<tK#mYk
%``j>/1GDIFn^:92D>3NtkElglYSG2;jddbF^U;f]%3D'cWecoEo99?gaMu52Y*O4R%aIAY6Z31DG1lT+AS:iW68b;g-Y>ISSVRad
%`fqQUZI_QY$!>0_6]SLbE[0QZ`C#lfAWH1"O3fQXD#jhK1k,_(hjAdEKB@Bje5'>gY5A*Mb>SbIfD=cLil\;K]+\%/fpZWG!Rlk6
%i;e^O?5WZ9;>ff'\k0_25Y&F\!PKb>RP*Hh.:ko!hTSY*S0QR-h&l4"=CZ75jH)GV:2\NgH=Kq4&9f@,\)-(9*oPaR^g^!F3&1;[
%kRpsdAfD4"\k"R:FFk5&W)(/($Z"Tm&_"C"&ZIo_XE@LhO+WX&`tED1*jq;3O>OS9[fFYqFIcH+k,.mOdbg&tngUUL9.cCh?CTW2
%r&D6,SA7lYGU5a1gCaYmCj:0B0JdSO%tDdrhIPq+%Q\Wb&"SQ1gC5/m1Ch/gl@LR;l's0qHf/-SpJIZXq4tbYK:8/K1:<QWYNn3M
%n^9D@d@p:(Be^"D)>f:t)3--*1)Tal]8n@g["%l=Pg^/>OPjln1/\Gd9Qp\7n/grj8P^a^X]-CTNA(#[N>Jsh1JU[=,Ejb_K1bX@
%46UNAI'13[je8Ep,N`(rpPX,0>;HHY,.&\9/AWNh6V!piK`$`jlhc)dCtHlYei4in\uOF@`oaoe=,OU6&MB7d$;%C*XL><HaAKRp
%i"9Oh@\5I^F"@K&W[DQepKX&`</SK]l(U5oR::MlPgs5qiaKod!C#-Y&YhK'Y.MT:MJI>pdhG7<5(3(LQKeC@&U>KEn=[j?hkD\+
%2^Ei,U^4glr7QfDq!L.9U0OCjDQ`"X]Xa/:j=mu8D`[5Z^bM>fnJ;Z;]33d7i@F?,H,9XA[);PIDG3.MVW)1Z4-[,aU'G,DnITq+
%-sQfrh<`h,$O`P`/^s186*!lE;CA]G4SuPjHrt39:h+Vj.`mfYBK%,'emSF)>tJ6),=O]XP7FBcZKjCF7_.MXQALM:j!#K)jM&`R
%Ro)C=ZDa']=/%-4^$5<qOU(heh6N;?2=3U;M=C]'Y8\jp.lC$='Q#tEgu0i'&i*+60.#![)V[rL+t$./8fR@mGb<bhXn]RB)m=?B
%=QJ2VJXIBPBhakj*i"U$lYN=@5<*s6*=sI[]qjKH5RhoY1'4*#[>s0.GIL?rG>ErlRPUYt"<8b8D\HFCA:Q6=@+LEsQ9^BrH9k"R
%6ljYlf*aqDjt]:100NKU3P`2q:H']X&9b7a+ek<JR^E^gOVj;5c3c/?k7D%o"GMW=]XQf1I(kDQ4Sl]&@LU0>7n*#Q8'Y!RdTjtm
%b^qA:Y)pTJV/("6\VZL)`P`pp">N*l2<6^fkGW0j,E-W-d_gjhXj\AQ#b-Gf60_$)#kSYGS*[V%D:uSto#msp(_Y*X:4Gf?U"-Pp
%Za1<A6sI9JCel8-g.S1k56H![^_1$_.WFWqUapQEc^2QIenXV'gj/Z&OpLc6%LJI1e)[A;(qk2Qi.Eq$DQ`d9-sYjQCXDJ^Gpjp_
%=tf(Opdr?\[,F9%=+hM]HDr$sA5bpsW60/k5pk&jbG/Uf*@$[P<T35r=ma&h!^-J/EmT_:(GIoiL+cnlb6ZQt&@dA\K4.."0&D[(
%^)G@K_-]9]Z=%&C\oikkJG^F6"g[-V6+B=mGH+u@JIEBQ%s!Hf`8B^O:bXN262.=:Fb,6n29HG23M=Reo(=Uf-4_*YZnomZ-c8Jq
%>!61aX72R>a25@X*^kR'Kj/6tgs+!cdDKJ(?>!I0>@Ro#^\,G!%[)"M1EDndpE1.6em"L!5tO!6ESFuM(Uh>dqg+`(KoWt41MD,"
%Y#Ji*bb4I-.M\=eDtEiEa?\tHp5X[%i>-!HRCBsg'J;UB/+t+Vh^5)'<L4^Qdru!%W#q>h6,$qdSfJkG,i.h-jpiSbY:oVrNH01_
%S)YAm0Ac"=^3BUmp#)M_X1@QqhI`f2)5R:KaEH#E6g"$C[L*JWp_)T9<[.suMY<(W"0ZJTQE.,%A6@<)"ZmI(G$MRcJ=%Y(F0)QK
%'3"gJCL5o,7meaCX$1?:A/re$'*kW.9ZfZ^@DJr6fqa.7cX^^E,7QX`PSUCu]8Bf.ZF(f4':,%jHb5nGhtG`_kn<lh0@5X]4*>MF
%_JR-Ya/j^+a'7KB9h`AP>l_[A#=>n3/P6sno`u3GX<Wq[Z>)ueZus=q-QFWS2hV80(?K0'H(h?rne*9OrF$5*$'\Ece5/kMf#*/l
%7^-^iQN8ha9I)RMbTrC#p4/dpB$G)*:=P9o@G3p[1r:X",'ib,0=tq++6WJ-QsO,_bH`RB1g_5Zoab4R)"-K3++)f#/o$2/GtGW9
%SlF#<a%.N/EInkY/Gi;6e%2"@2NVf:JDh]`@O;<gC1e$$a#HCX>s"20f1<i8\doY@&2Ci9.P)@OE$,6"qcL+W^Y>l*+t\mb+OZJt
%prrOaa\.L(csH7sK(VOmA`b>oXi4lR9+3"T$fd++BLoF6ZbgV22\0GH$d"HIA,?=d94K_<\H\fdHnnZ>4+dWF/`p`BH"pJLQoaK_
%'-Lt*VuCj<;*8V("PGr-VR[bI\"/@@?NNoN]0?ID'BmG0F##.'O;5i1VZQOL5Ns6aKcPlcL-(VGZHN?u#Yh6A55KOZ-BmHrO^2Jn
%2NNFNNMuQWn'O6EEE`M%nqC4WoEqFa:h?07_O="lbJ;o"3c%GD7:#XBLQb)1HICNa*)?9sD'&)^m>U!<c<2F8/Sn?V7jFj`J&I`H
%aP?ub%uf0PhbA$c#no(ea@QW-BSQcR/MQg(JL<W<%O5aj+V:?k"ABbeY*:[p(@r^4'M&oC1&t[K3&m7)U^gDKWIpu1Xt]ija!@OB
%p+L2.l.B6>2n?0t$VtTL,f\oFl6rXbn]`q)9)PLY\a+r&)>I2.)U9AO.]<Y_G0phl]@[M$F+KfF$cB_8VFo=Q`Z?u`!MEck]BpIK
%fbA#r_JG7cS;DXOU4aR`Agi3DD'Ch<6R/(OjN;2+bq^(CS%Z%>2WLM7YeB\g2JdsIE26U[VR"t`Kn`!.=U<j"PSq-pC][229gOk2
%gak.K8s_j2FgT-3:Mrjm+`MMKCGK2[,)IEfhfT2>Lku+<]H9A+DO;]UOb,]oT#af%Xn822nqi*^D(4&?_Slg^D>qD:p):=B3,8W,
%ELk,\M!*7*,QiEN]:u%)q?c0aobD_U30:SVs"SRB'?_!5ePV+mX_lBBk2'cfD:VZ(SI!h\3stQa=#k$*).jo>UWBfn;=]7H6AHdZ
%cJn0Fgp3<WhqKZ]]YHa?Mq-McbF@l4K5MDp1h-U"RGUI*)jgoB1Re`KNtYEBY!d0)#gZ_=_,@>6Mo6Wg!6qHKHb^k<#1tVK8AYch
%Ok9VBCfi:J#.GYCSf<^$DYeK5QSQa&5*ps@!'6Lb1rZU=OAIuNZ!*p'o\85rOroAjhU=KrYC`pKWe^kW8tA8OHnrESD/d'"QS7:Y
%M*%a4FU!U8Dg>T\%O>[W*DF6>"Y0IK*9qu`9ER'GUkB@2$:ejRC$1dnPn4-&BHW!:!bfB%gB+Y:k%#hQPq<\M+['@aaFerRo30RH
%%M:4!mKi1[bbC<XI_)Mt&YF<4#<4'!?b5HN_R1.pL:ORNnch*YqBu?%B`eOF!ZQ^h[fJlT,e(^.?AP<f`Bh:lW&1Cm+:.B+-e?an
%_Y%d*r7Z.24ZU&J5/2LC`58p-rRTZ)]&/!8?D\*Nf;>V!KK?mo6`klUB-78EFEK?;)u4L*6i>M=Fd+^c4&fn7#A/91UN7cZVF<LY
%NgYQ(*7le^1Ii!ZWmVNq"NH<a*bGR>I>&t>A%J`d%uqOa'sPju_:G"eHe'U],_3i>L_(n:6Ih?cW3Q7JK2m30?PT_S`_\DEC600'
%[NL1EHqf]%"a'^V.tDBt#c^g&IF&=b/7U/#BttJ&SQKkTDRfS!hOYTD;n+>Tl-Z=oGHK"QR\2pL6n,SKOC?n3\RpI;j*`D."T&8D
%1/=b(XL+$cWYLUq6^<=I0e4`mBdr_Kp%1hYT$2R1Z9/4uAWeYg9\IIfDa4'Y2d^0jp5sbcHXa:OSJ?^nR/%grE"l_?Bif:6a&FCk
%J4I5T.D$$I*ArWlfaQ/d<(+".Q]FDRI!.KMnj>DP*U.7$8VmM!$hC]"TF8j>21eI"n6=]A6h.Ekcl!@;q$k/kLIjN%jL81FK/lrA
%o&e:VKF+>?TYZT*1oI^tr,LCXH,"6eX;6aE+=oq'LKjsma']=@EXl$()%.*8Xo;O8C.o(P-)P^L:,a+Y_\u$gM"$?q4^94D(V\3\
%l"cIELDs-G_[t9McAWpKCn_E8S%%8qD`B%0kt/>W3796'7V(n6$8bFn<8D*X]0u=gcF`#_*!jOI[)5$uOOr3V\bYC3mO(K.B&/Ae
%hG#rJGucit'(]iTMr2npHshb44*Y3ME5lFshTWR2'+kUb.]R:<oYlgtPn/-*ibjZ(@lX;J\()LH6!<Ef*QVQJQWb.O<o4-N(X37:
%,l4I`.!#E71`)oRE(QSg(_sNZ!I9XbB9%jR)F\Q72(IrGp:J!mBiJhdjj"Fka[^i#<(rLp=!r5Dn+l])RmU9=P5M?+eA=_Bf#?%g
%OjGsu:ms?KP'u@^'&m#fi6)<:p[qeRMF2tlF"5Hn34@L;c1p!<#6:UAN6lFVEG<9(%-r)&45ZK/nNofes53HqO/+JXfno'M(t1rL
%3r;B^ouDbTLU)bc0(\"O9oT#22[t[s)>P/'ok+78@>qi+Bc>]R]Ha!Yq2f!\XP7;dQ1Lc:C?j=cVAY^p\go>h.)7]k4b`"/cj_e7
%U46ilWc!qK\0iinVM\23n"uJQn`J$u?P5h::LTG0*h)r:@IZ/S</]c\Jt,(jIIbcm9P$.Wr-HmNiVT_bjW-gFCE0\#SL9=-E=<2)
%4L2[2RE_u-L0oV0Rc'A)6Tn@O&@;o\L_9NKSP'$X_LY$rqI4H;](]'!XtnKco+EdPK/cWUkeK<orou.JXdad/l.%*Z0*'jWY9O\R
%:iU]M-dY$!%\=oV"/f]6]FgF#Z0EB9OI$B42-&^SP%u0$7R`Zl`=W;9N2_e\!.1L^^pY)i[Y_E`"LD`AU/S+*(_F8JoCbrS=aHSn
%=(,/"*oG[=Jj)]U5k-g'Df2BogaO/%6tQX."mjQeb`#7RNg!TH)M0<fnq5/3q6XTEn!;eq*TMnLPK6H_)8.[D)E%o1V7seUo=YG7
%QqHMAE[m!I=XT*5OB*e@>o3]^`(2<*(@u(M.3,O[26[u1geDePEto7G#*q0e?hS\1^1)VXNaZM?-q>#a4u:)IG$lKqQN@lHU^MpK
%7f[1qnqZN\jJ`[Kq;]5tHcso:a?Zbs>A5ZQ0\[?._oWb.H&Td#;&'/U9T82&NALp[&i),G][\d;6VD75NkeW<l97Yr#%E$X;=$]:
%5n#KX`3OKL<m1]SqB*;e0.LV-BMITAe/#L.&8k]0\@Wske*THi(#L>8TVag;'kLV.Jb;7/9q/(1XQ$2#6K=XgBc;Fr!:n-P0A\em
%qJCLFa9b`YYS'/k7dL-S-:\ND,IZAk%,=#Q<O@V^^orZ\diFUV113;.&(KS-*r2f-l:id%aEE[5jCX3I-JTD!JNHSG]BaJ*f&\Q"
%SuMTa7K50Oj]t*H3n_M>.5Nk%asCkAT?hU?rN=P;@gZ+k2nG7.9r#MV.d/)@ZUK"4'l<:HJ4gT`00Len-4hft@st9R?dsk%I/Ssg
%Vr&-aZ$TO"Ynd_V?5Wir&\'3h7_()EA6f\+\hB2007Q+OiqZ]HN7mmVroJ5CmNKhm;?7A4\BY2t!L<0gPVaMd@_hQNdNOqI`!2\c
%/j*Yq!Vd*gSLoftdoj1FmC.%\s*CX/s#q7gJ7V-qSVeO%4SXu(;H2,4\RM>=63B(P-i&jt[mUa1j,E=F*t2JmH"_(3q0O2?Y"Mr`
%&oqXq8'*m-<<E/;qmc=GhLVf&X.J/p<u1>!p<6P%#:@VPd%eGt^JV:Q,+[QUL``*WWnu']OM29k(\Xk6/QhVE_ub02O,R(a=Cf/+
%i+%n82Ho_=[EFQ<9*&muYYM6X,25=J8ScA+js&\r*YR-JA9b.^1q/C')f:p"<Mge*6esiZ`g8-a'_/Ze#OW,jh:S1.lL0_@>?#=Z
%hm_@HgPmG"m]!aj",8_c&Z=o).6h-2]eUBJhE!)pAh?D;'!!P`<M_%n4;%T:A7@SFcFS]MKLTX^d9XMD*gE8!>Lrcn]FBg:Q6F&F
%UBmOD1Tq7p9BkRU/@jcB(JkFJ)r_#hmc68NB&4oK<lIptdcUa1Y-YcMj.>W,'0U<30Ws(<hT,\B;Dp5lMUW`Gp`Nl9_d(7m]9P+5
%$LktNR73N&a2a@+?&t!4U4\Ig8='dj2s5A(HKT1'llWYWffsq$k,OcW1duk>KcA0*l*U<kFQ;8Q.70d*r7'jn8=/]D>$DdAmM<gN
%aUX'H/0\C^5))^/Nu*fCU>mTTV+UjVc#%31gL^\-[X[*3f\V=aZ)bUqdL8-#AH0BoIOR)6H6GLZ8s^E)U+)E$bmZmAFjO#MQm"`f
%;l9>%LWm&e7lU;HeY[Jo2/RLBb9BEdGd%Rjk?s)c6jH*?67P>*Z.n-ud1AU:CKV+9*<I$)0OG<5#a5,+*+.L1-enMd$(P^fT4EXL
%n4B\=jY4SBW>c='P4tjrb_lcsV+X%pK7$\ldT&&bQOqTmW&]b/:*6<M5TH5VO`>X3Ar.Kkc6#)h?o<&^e)/=]BnSdb)(jcbDM_bX
%/t`,_U[:r<*bMW.;Y/<*3,Z+Z(7Cj(c1:WPr5<S[1q/C')f:qQ)EK^aPgscSm98oHJ_Pg4DQN!'qtk_C,JVTKqaITKPGS2%.<TD/
%,!pJ@ed+[SNHAlo5haq4Q-^G;$NkZ519`R?BAW+.#W;ni*QJEJ8#6GAA)nccD352L9bBp"Onn(8#XkMe-aq)AWVu#c>@`oqYLZeA
%gQN(qU'Ap8`W(;m=895,OB.'d``Q88)h<NqVuU;V4fm;FhGu`&>Mm;T$Z$t:W;cUofbFVfrd/3\KNVuWg<`'PUb)3W8Z>H+U%NH$
%$gIB,`=W_HT=1e=^,F5u$rOZQ;mZTRD;LnnH%5[m/g[CS'.Hi=Jt(fm)=kU#gpCWApXL(.H6+AI`^8&J@JbS/hKDpWjr"D>M[AC$
%V`(Za:hQ.VZ!h)4op#\AJd<\N_r98^49:VJHu!:dJX24>1de)CI#+lRfI=Vs,Ma?GZqt7eg_3hfbi;+na5ddW0;J)3/*?JgjFpcs
%R1-2Hfp3i9_^Nb'`nF`;?57]LjP-@=E=rKVQ[=r+S94I_Bg1@[e!JO2IbYMDR-+1mF$i%%];VHMgY>W[alc1U1V'2IQ$a#Yp:JKW
%rQ;E-@Q2R?[9gLt"iUm#B:I=(U)2A=?lK5>nD-otf.]T$Vd8BELbj39?!&brghA#XjWr&<2T?q)8=5'`QSNLG6.LFT2gZ7J%WH?\
%[A6FJ3k]-R%aT9J8FUs#[\>n0k1-p(6!S6M"_g^Z4am&2gC^5r8B1SLgCbogACJ8,au3N=q)'VUMD(OTnMdh8hqAV5]pW0)SeSD#
%>pX3W?V%_RinIpgPfQ+0aua`jLudt@M`.`J8J(SF7c=')%3,25*'QUfD($/A=Z[<F0"=bMm8=4L$&CT.:,,rd:++O(R_;%eWa3a>
%d1RNPbZ[NZ+m\6?;McMH.6`m[aR&Y]N#njN_n7,3BC?3SRPkGo)BV5i#^F%eZGciBC\gElImG+0N+-]E/G2B</SaGj"S*MJ^dD[t
%$PCYb&C_]=a)'9t/8`9"gjtQY=N-m8_sN09!."hZ/uhN2j=iIA]3Gm0Mg>d\K.6Mt`mX^4IMT.3Og?%:P[&=;5h]=F"-5tV*j-r?
%1J4_*%%&+GU)&k56U[dW9M._L30Q<;NYtAV;Tir%UZS-f96IaoKpBIb@Q@rd]l%c(K)pOZC;`uNbo1G<)gNnaE6+S&&D3]4KBn@*
%_r-()>gSg/lgLXY?^R-m8'kp.4C&R+Jpr%.QgFq3CiAN[REoHW4[Bd1@>&NEY+VTGmVsf+[7g*fIWK;+f#sNm?3nef6Qm1NI(r$:
%#ul,Vql[lWgWD$[H[UV_eaq%$.BHC<(EM^ob+T>.[Nrh?M#cP8LGOX-nu=@)FhMfglriu<Fs(r"0mgoi_BJCs>&Ri-UR8l8Dg!tq
%<_.O7NXG&$5_[cc#i'N,P2rJB0dRO["Xa[qV[#lk#1m>#6\*0Lcmg.kKear=BOF8"`\#P:hOeF&q"\b3cL/9M$G0Me;UaKs/GWfl
%!1BBYa`mLEij`Vdj80h1N=Zt26Y*9++s)P$0Nt$cn^HH(#Wq#JB]iFJ#hi"cMbC3*7hQ[na>d68?\Fn*[P`ZQ1\%54h_9_7C_IZ&
%?>\9n4T!&U*Q#R?k:VG8[aMS9?#oI(Ym1h<L[M*f8@)Zqd(KcGqg13Yr^m$50FtgkdY3=0U)KL%$+jl'=;q>roD>lgh_12^RE@6j
%*(MC,prj`gfaGI^k1nt%pqV]^H9!+9gSE6X$XKSMllQhtC_`D\`HjNuF!j&N/'=to5m5W>+b+;9Bj%uiCn'ZsVGUS\3Ihit2;S&B
%N"uLh7>8N//IiI/!f9;Rj#!-t#,iM<9Dj)3d;Q\`8dPK@,6)\Wd9f/SbOU6I_-DO`T=*Jj^>e*85Rrhj<\5I/c(bjD"\sosS-#uR
%P3WYj<b:>t/3UMTVn$OXTkm8Q=-FTPF@ZLghPPVAQu:F`@LrO)\r:?R!ruq=*WYJL(f8k0JKan$6r5)Bp1JcI/SI/jJPZHol-Eh7
%>W<Z'bahnbX%pD!4MZ=1+SV]=@'@o#R0dJo&nI[D9*&?6B=<V*fG(Xq!Q,n&NSSjoP95R<6U]-JE)TKmDh:S6W<*2jFl[kG1r=Ql
%m`[dl@hILG(KEbf-n\`2qq[&18Md6)lim*MI^;E?5#egT#+,]K)]6jYm4>b@_<cj]Qjq'bocdJaVW60d\oC]sKfk1b7$K-SpE2-r
%jlFok^k54(Ld'k@\@h(^"GO&\!%EFdo[:8&Rng+gWUE[qjW$rkfE@SQ#l)9U)Hi>9Mm4AC=UP%`Q\Hc/#ttXk695$u/&7A\/U`h%
%7Z'HUNmBSd(5o+a[*)2LH><p!a]2q^Ur]q,ME7C?(cA-QB;n2J?dkL'@mQ'>(f]?:+2h2?\rak1$BI`Eb/,>^g,]ob.<Gb_i8klO
%>s`,\<7s3L&Bk+s7:m72&8!fo%jqIU\bu<!^i[:8]b5.Q7fc)b]#@VnRF#>N.]A[K[=cW-=f>8c1t:EO+sRmRq+RKq6,Z:$;`:"1
%i/Ubd%G^g6m-ajcB$'5T(r86[dpO`_#'&DA7.Wb'Ds9p=ULH)g;+@qO6oj5iL`lIe%^3nLqFSHZf(arZZ6PI#@Ha^D94XS4Z"ukB
%-UU?I![%LL:p(2dmbXZ:A]unm!%ZEn`WNQ_6NU[CDSRe<-)Q\Q#qQr[Xg5MR<GIn$et0HI@Umo,X9TJu2kfVI;'NjtVH]+Wa"atP
%oK&DtGh^?=IX:V9oG<QRg?1j9g_:]+qucR]WmS3qMth(_'4:JCiD+CWB5B%YiD:.;_W?MUnCYC&0*8>[OVh)m"op/se'rqQ9"$`K
%QA(OQgT1$$cpreDI=e&saP`lW%q!`UcKa[+22;UshM^)VTP1jJ""4p9fi7H_MI^*O?2+*PJ:R@\L,/"TkZ._!VpmSDZon'l-L\X$
%;c$US.\jd2h'AHpFDscd]K^9,rdp[Xd!eh<fXC8=O'YB;UeQTn&^c&B\*7Lq6usbq69tABbrR@Y)lFfSqaU,]Mk%/2S;TCU.Z2\+
%@n:hE-)<9R5.0OD-84U[0f,Y)F%(JC;qoqZ6G+;W9FEJP[^IM),[^klj/L2^>FXYc6"m=!Op/ECLYQ=$`CX.GFO&W"KJ1e,r]"PW
%p!jPSF/RKJFEWWecCd+=FqK#seIF5g0L:Kb)@E$$FNJafmioh#Q%I[_SH\sP_46^XYXS?G:^Xrs(A"DU_1sYe\]W[Lg6?S;CePk=
%JQB<1'iY/?"A\I3XAjMG!P4+eiWla_'K&Fr6?i,EV(tKtTi!Y:^5b.A+C3W@?X=6+D>B#re&F!J`Jupi<^CR=Tmem3Z9O02SNO25
%g'3u%^$ZIZ>BTN2-_5\SgJUkU5J8$l!H,!R`0BjlG%E0W-6KBr$*_;A9GI7<F[LeS;Q6S(4Mk+i\CgVS,O9<HclZ)M<Jfc<i-j%K
%&=jKb[L2eAg60lh@^G.K6[18*2rRY>iS_4lpY/)NHuQlf4%o/f?H+`F[C=0`M9-an!E-O:^N!1G!)%pN<R6OHA2qXb>h[7`86-M\
%gT]pOj,)WJgr(T/Iac#^GL3^mj/A@$6/'+I4K66#UE[]\ge)8&"U4(V(COXB,K>W<7F_h0,e!;/S5,/fM"&HI:)B?7GaNCJV^Vd1
%;fPcDEWin<:'@(!F%jN)9usjB)IE.:4T38YFZ/3\Nl-FK9,:AK<-K+I$lE,o@L0fT$%Xmi5ft/UWlPEO=MJ`7!7;U&aRZfrN1(pf
%Yq.FHn?d-;a>K/%.%10N*$KT,VgDf>o?X`rHu!YiBf^rYChN<rACbg1[UubUMdN6P,O"K9?/\>\e.pU'>5'?WEenq&%Zk=JPDP_Y
%4K;7<Lj!]V:04NY;K53Y-X-<IR994m)77mo%PdJ=LX8mohYsqc"9ZZ@T:j.Jk8)[8>-P/,=IU.bP9)nSC?A47IT'V\'h!%dT6&*C
%X4uWi_R`2:B_(G)G=(')N'F.1_B4-/8Y8m+3obb63A9$QjK%'Hn9Q3o;:<jUWRgAYr6+=9hLEKI^4V4b#[)!_BH@6G>,i"Q)'5dX
%8H@Oh:r$KD2];uC9u"R[*Ac5C61,#kH5n#0QZY^Q^>\B&PliX`AgJ4lIb[ug#Q[7.:,<I1<l*)a"?^Xri2"VTIt3c;ScnNskMU\n
%d?!'!T'SL[0U\>641&+j/rC4.-?>4/;<d\c)M^78?bS<Oq><W<+7(T_6;3X"]&Qt/_ChSe&q]QtSgu0%p#j;Y7.TrVj-2rZgn_+q
%FOrh*FFhBa_ZhiR)G7K"3TCVl=*JG-+9b)CUn]0*HT;Pi8j:FFO@'?J8(M%G"6J5:T"MWf-6mW--pKW!NDE&6=c;_8Y15=?GRmh3
%"0(J-X9"(W4[p"k>M2(q\20\l:.1L"F.s4Bg5\,+X80>=*@gW*4CB.*elnG0j@EL*m;1cSl^1/hOhiu.<2uOE8;H9l#.XD!B>6,F
%[W4mPANgVtCZ[XVk78jEc3cJBm:?XBq),W1L['1S;U<.<j?4f/J+mgF1/Ckp2q*D]%+RO*S$oXpl.iW"&UnT/\2j%=\41.)P$X^P
%$ukqaH3LI8*]t,SiGH5o<1(6BNU'CG82a2Y7>):;q8?'5E9TG`'V+'06&8HZ/Ge-&(%-%4Q23D5VM#-r3$sFRm19$T@AE+Ti5Ma.
%5S?/9W86E;Hcrh.:AAsZ9)0jL`1DA"TAT#HIkoKWf]DZngp#u\bm:u225+h.n`@!"LLBVWm&e0iBKV!iZ)EO?KQ*BdWK?S_PBOWs
%DZg5WTRhcsSXHBrWe9HmP?@5f,QQ:#@[$O!V@CMKU2$fm22&P&K<NFD9a^-jLfhgLH6C7Nl5m<?D#e&30ll8'B#^p97XY3t-11nb
%rhO3m:`'>\lDQCk*=P]I;6m>+S]:tf[5JG8W8S0-arAV9,6(6>`$L,BLOEUGNC%uH[2U#P=#9F3,-^S8BskI_#fa\AelVP`5(th'
%+N?\n($=,3pKF56T)fQFb:O'tq8&7]!g><AddCp-M.aUBRj,q)a=_BN:/Es,rKf<3`,?pmEn`N\&euu-a(.G%M:2\F_uNk*M)./s
%8.o5/A1sm5EsQLRUoWrIV\TSUrT@+?Rt7U*d]IP);\@X%Q]L$j7d*;r#1MO64"u`:P6\H]M(Cue'rPKNTG,0oA<6X3bD-G1AjNCZ
%9%Sm2!h?JO8$V'C:cGuD7'Iu>*NnlTenf4SkTo"8E>[G*BOG)e6=F]I@=sC!%B2.]s0.C)L)Yk-QAl#"^-b90;u3f$i+Z,O!(q\d
%_p=CnD0[/U.*8!&q7l@[Hf'gm[NZ+<n%8*m>_*\\kZ0AYhiTHD(*aO]6==h[]Tc/'6/c;:R>Wq[*qPI*YXDf;6C@c4KA$(0pXV6Z
%^\'m,].RnD_E,&X,EI#t+Uu7Vr9<otqh'5;[cX_RHR&"iZhf-"%7ui\G-`)"\G=.FG$''&G]'h#rp#n]ZY0-_OF725Bl,f*8No]d
%6NJmca;?h>F%@>35:0f8,.`lSe/kqeck0N&b%YDbp9pgef?l_EPp7jJ!b/5+@H@nF8sjrp\(QSFXIhN_"V\^Mj#`.(R".M7]7Q.d
%YLa+,kL*-2Z1B7]85b.TlHFl>#ul*r]m[F^=NlCV%AC]>q"$H&/>A#Kb7."&Ofp1gs,+`1'_[+-m+lKrJ,&?tp]2*RO#b-cU6mM7
%4Is\n?O#[o&E$'NG%]Qm26hkRf$[^\W.YkO17:St*RX]0\NB\/bLd!Eo=sSM^k"=]G</fd*'H_'`s7W"=T"h>;R8F>;bL@)k-AgF
%UgtV1;h>WmWpOWg\#OZS<)/"b(a'_?YJ!,u@dNqtR5c"Qe'5Y[bCQ4rT)HuP'h!SkR6%%CVs(,MUmdk'U]kAiN<O)7O;_(H&VE4l
%b`[-tiZL0gW$"Md?er'J<6&1TqH=cT;$>N!dX+QV?3*orQ;n#e_H^h6Tj5-MKjlH>/BBn>)Gb'NYe76]3RisUE4&l8F5fE"eMof9
%n<N&qj%t&o,fFZRYU4q^9G#=s0hH.8mV6)-`ZZP^^9d9qLnm+;8R=acf:j[\=ln`Rf#Zbj>n;eme4,3r+FHOO5!$--[eC8-<X-bN
%I/-kfT#tsZ=P3[S4raaB5X=DPO%!;=oMc<[2bUd=T?3AOmC`o@iG^Ge4um"I?okn0)!C!'pBCu\\=!2=Yq<8I_hH;NKDj6E5F,XH
%0qeUKek2j9LTV<p8Te5G*nnIh!?*<rkEY:+C'o(5K2@rfd`38VVMo^kK/V1.-!DhWksEcIqM0P]0-GUn,='6BT/T4p>;*n3H9Eu>
%>B6fS4_e\3h#fdU0<_CG]VbuWUahE]_UPWR%W5CooGq2H'?R8H9a\%Lg)`dcAml+D#lcaJH'F^3eIJ*+qdS@<(.U4!r7*'0nA1T/
%JjQ*,m%)K_RUJNhkiVW0XbJ.gARH6<7t=(?_j-a[,j6tGM3-_Ca3-U5J+o&!3"2Bc\F:@3UpRoAE[dQ#rbQ0b10R4SfMkuI"'4+r
%g^=de8P5JP?r8u4LA\*.ilT[$L9F9CPJ\KLl1$r.L$Rl!pfWoi^gt'Pir]5CHZci"\/sR.@?U6\kqLmG#CFU]jCbpt;<^B5\W)6.
%En/-U2T20)5t*-Ii3t)3CZ7)V$mh>RUt`?OLb6T+B?)-&D@R@iK:](%'"/UDJjK)YU`il^`AEcQAqHs0"Bk(k&LT5#FGf+f!7q@_
%q]..)Gp[on'^$IC-__E.5K?(+)DR,n9IL00:FHPIFCaWF4$s-.B$r6o\:Sc[kT/SO1K=YlVq4=EYgmTT^J27Q,>j:4L1I]MWcHT4
%;C5VkF2Pl1f44k.=SItRI=*g'fLuE\0ZJh@Ku0O8mj[S#:PCt87>"36^M3V_ne2LJ73p!$<"Ngtlrs'['/\@h+ANgtH*AdohPDo/
%.)^=,khn`,.:E[Om3W(q7ts9!8:ZBD)D0MCBs:EY"Y5?I!!tb0kj)a0'ild$A@5.<Yp-YK=,G*&ns#gDE91fLIB0djlf^B`mXQ*O
%ChK?@dT'gd>9bjU\ot@sY;Hgt.qZ26H4.p'A3SS14^/)]r7R=+#1]^LW&B7A*G?m\P2.:BZ"#emMLbR?75q^bA*K01(T/BfS-Lsl
%,_9Co%^89CW1WMpA8r))6;rb0]`S*I*nq5P=I'eGiNuI8lR)?E;De.tXY:.Wr`S2U=Tks\MGGn-)[+V.V\V[q^nEh-qE4n;]QS;#
%,ON.B]P]5j>op4UG?p9n,<>h*VtjH"cENE*Mr+P6g/M_$PSD_6eZ&NT6_*Kk<E=XE.\cL_8d$nW8Z5[E"`25d'Z7i3\r/'[M@)X\
%l7Q\%:fOF>E8KROU%3f#9*I0!O"O-A;.*&Y`SsC$.UH2J=$S>Q?U=iRL4TK]_Bja)X`C9k5&!`ir/lm]pS^N3`(A`_TR[jh`7XfE
%QD+Tgk32sIT,WTLD*uTc::NPV9@$12AhXBk0%(p'U7[?*!MimPmE'0C>)uR<g9p-ZlQP=-I%fVQdfH2J:+q@s:0su-4nh)t(br*-
%&r.cKj_46\D/_]\Wbr%9*7Kp91pA]0aqcP4L81!GB?+KW'JQEU[gZPid]&@`\ia!T`WaJr"Ql1E*+(ef$LD9B\L,^4("M<o6tC^h
%E%V`*m4-/Umq1-+Kl%S@A7On7@$]Q!eFY;I@m)!`#`rqCLIgY0M!h$S=(TE216NH_BMm<GX3MmRCXSk&cFlB^7VUj?RK]@>*o^7$
%;B"&&-QoVB+f%!u_kegj`/HJ=nP7&IU*Cq(-h%u@;"gNE;Y)&k4nE5f>[0+^Jf]Rn8ebQTAni_D<'WK5]nKQ(pMO@N[LD+MU.Mjo
%Kf=m&M9cb+Li),YO!Lt7pd.M;^PHWq42gi&>1Vuf;-l_gD8?c_:>U]e#3*]tQ]+Xi(aN11@S9e%L[8;S&[LsB3m./;?Zpc7>fi'_
%H^?%_[-J(BI-h&3M%qOG`V9F.'ia[a/o/<\71%C1lI6h(1o"3/'\TSiA(i]K'-:\aoC>XlK=NsXNMb`4_&r9FP9`T]"V2MF;2GC"
%@NqY50h@I9@j)H*!.AF$'NZF3s.g7b1=67+#mE#;6I/r8-)h`QZ&a3<0Bl2=?Blek4QGf:+okJ8`n8U;9P.4K=KRkYhIM&t2'L0N
%/@rasPsp/Xp+5-cms:5*7ufQjB])t$qm(Y.*#^">\Ic$KgdE:2SCBQdH^H-"EnQ3#1G8)6\Rb)h4'Yr.2"f5F_lCjP,pphlMU#lR
%_Ee2&!iF5P2&;J/LmK=)-:eZFO'6Hm$JLGZT^'1ohKnbcQLRnT\&fN,H36PCf:-R[<2^6$g7BiTqm0HFgOcb_I:"L"X2ZCf41:."
%GnumC*OseIqWX"$i+oT.:JFT9TQjno(WS>n%d-P(3h)CdS1LHG@"<'9@i5;QWs,)U(s'o@jjnE]Yi0/B2Ba7_8C\X065Kb<QeRb"
%#n(:P<.%gMJ&g,87046[0d7.mR:-6Nl8h%@)3Dh4AKTQX"=(S/I4d4$]fI5W(Lg^k!Glq*f<Vi*Zp/_V_(Mrll^85Fr&-E.gr;&<
%MrA1m^aomk:<g+LrpoQ44,pRXS^4Au1&EIT]di#+]Hg4)_#A8!hpS8iEa?47i;ZUmD%*W\n&KHBgV<dl4GuK-=q)C([QK(51*hd1
%rq@)hS/W?.hj5UHA2T:.XGtl1nr&GG)35a2EUN7-2FN:s1;4H(2(V'rC/B#VKFq9?:lDNo3J9'qSEP\k!"^`UJFP!P@r&7P<L"Ft
%a99ZBlqX?58OF"d:`f3+WHnPZNJ7b+'kbPD7Zr/36#HjYZH$[Y:kSjlfa?*bq#[dQj?,r$X:'E21R]biqi_2Q-u9Ck,Rb)1,Qbh?
%Pu&)[9#jI!FJ0S0;[5j04RQo\F8b',8G26"*<m2F@u^Bt`StCGi8T)r3AIV[,;:p57(iHh0d,Kt0G+^C\d2(#7[:pV<$;(&?!kD+
%'?<-61rb&o9_+#/\%)$K[tUE(eI"e8,_I8GIrWTr%)ahJp5]`,2Yo6>FcjgIU]t5*a2eR,F/ZeCMM['qp.Hb.W&<G7S6[d$L@jj\
%$'9pK)EoO4$,f]8,\`,"g5=^WF9u9?fX[HN/,%Y.+a])EC>Md#WT%kMZpLQRW%s]r!d@qA8X%LY^C5N<2!^mLIU3aM]"d=/2ijlH
%brhk*'\@b(@9Qb'eC)Mk5gXTebiiSV80$U"U-P-en^pU%]bP3!1UE`LHk2PVPm'FW!7BXqi[=^`oL"OpJL6Pbojq7ba?[YQ?5Vj=
%LYtJAee$.WSXS6tn8HbghSJ-ecsRp8a;KWh"WMc/g2+GRY]_"UM?9B\b^%m<Tq`P1[bM6n5NPHY45f>aB//n0EH?:s5E2i;1>TuJ
%b0+lHf0JKJ*T(Nj:_,b^F#Z%Y'L<XV1@sLhd'6]sBYm[Wf1`f'^noWK5$A$tf?(%$RIQN8FoWJ"i:L:NGm.!rOPuD^5XgYZIop5i
%ik\-V0,QioX,<43"RAN(E=<u0<n$2^RKoAPW">"G#<%Y2\Z2;p_5)#nl_gKQdb$im2:-o=Rbp07[dr)9+%Yf!o)'73kOV%]'(&rM
%WY>TQOmjA+k(;jE'EORCOj&S\L"",jL][-`GSA**Wq]Is)c2:p^JlpR=Cc.]iEF*IaeAc+M6AUkd1khY-\pququUbeVX4U6CR1fZ
%5V$,bP\7'"BE!^OD>DSdoNSs199FEZA@^(DI4rSfE`7$GB]WmoB4%d9rqBebCTo%a][3Vm5QK`1ar!4M!Z^UR;'D3T`'FTkFKS!?
%M(EYghi8_6[Ab8<>BjM#b<^"XY1a2N7,r4!,uQ+)?F6,Q03fBO$)I7*og3OA>1;f'W76D`(af%8l6YG?T\UQQNseNC3`8M%mGh\>
%GGMA]qL:]!pFe4-jgV&25pCGF=8:oN-OST4*'_qXGdRkL:kS<NWQtbnFJ/(HfgRcMj(G:loO`@48-iTF8,p)gO)%7OMSq4E7s/BJ
%F/d)[h@Ydrk[\5tEa*Ls,1ilal@e3r?AaemK>7W.e=Ss0_n;/MDi[:dc;r_'W54I)_b@ZJcVr1:)QU7G)N'3LM`HWs)RC/JJL!J"
%&@%9(,(;&:18L$o2b#dTZpO'Y@Zq?eor-_8nq"X&6jEfnP;2HWf!TR*P;O<$!_c.HpYeH#Nt,+nJ%p@0ZG*1h<pK:kIdRAng(gCH
%Ug8g+SQ]._L;JE>+C2*D>n*#<B9fWf8r!G5Y72'EfQ6#ldZ'W*k$TQEq1<!(,>;D*eek0N:#G;ZoVYtFKjbWk88bGL<`4shC<9>d
%K:>0Ug0tm;P-?Q,rTMf$fui5I9o6,b,t>A&X+XFLZ&=I??7n#,kD4;?TQfLPZ7<GZha,X,i#M)U5aO=Dr6#L2juMJg7`E9i:RWjX
%]idl+!ZmNY6e(/+5i<m;9F!b!?JsN>PcNq.bUYKF@TKGC@(0Yi'qmW,C"A&IUkF.BVn>Lj8iF4&'@5+D:Vn4d=__pa\<-Erf?cgI
%fWR0o?WBGu1&=E3?+u;QcER"TW9=XAs,OAdDCb\0K_-pRU8%%4hMWkA2-)+4qOCEeh(dKCD@YK72os0dbCG`X7C>K^H$X[$Bh6;0
%>;&:H,6CV@B.!1M&SC0l2NTQ7/p?[Ma10LZ'":qYd-M/-gBTe:rU,W5JD3`Z0W`PnjR(J7aohGMJ$qmR307Y/d,Y/;$=@B^^?Kt-
%FD`,@_ahjY<*liDdkM3P\p`;iCY1^s3bJ@e%.&TrWe=fCQF*<%=>k7?Q6"5+<!s6&'t&pDjtm'+:>]o?p>&\G@/Uqs-><dH2sen[
%=W=rsX::`kD(i.[\/W+!](8_on0*L6)F'ci,;*R:2#See!P!-A%>LBcK7T7+VT%m\PQ`[Tn(Se)ke*Vu]ie2GF]=C1G9EOq#MWrY
%&\21D"PLU?h!s,V!qQR7EaDL"j7huJ_i&e#l(nTBGUr@Q#4GR-['r;9@?>PS$a`JUbVhlo9ol7b&Zh63&W5n-&d2\3d^F.HbtME(
%./=$Ys7a+U)Hma-<a!Bf*QHRu)K@oG]]Zsg+$8oI1i$,nQ0qbq70=olO1F]k_?XpCCp6BY[1#9kA/I9&il0[VF+Uood:bib(2d+3
%WkeqHC7+N;LsmGB+cks%T/"i)TW#.N\d#+]PoWN8AAN2jnUnbPV`Z?p\<]#C7c6:i@mN3p2Xue-0@PWn1B8PVCCD5mIGFCm>`MHU
%-]`[@>u.NEVd7bIEiBd+GqhcaQf$K9B\[M7j]-_6n]``4:[c;U*+G_+id)LT<<s@cgjaHFL]nM`90GS&c[o[d1m-i#XlWmB7Ba(8
%-mjmX[U(mu.7.#u.o?Gt,,LGKL]O`EfnI(//B,-kn5A."SY)uI$MB_((7J/-dnD,gnCi/-SOO%hl5WE72**+P5b.rXDN530dPkhJ
%"X?I8;_KuMH*XhYi!-tDH'4!1UFu1%V070hMU?<[DF*$((OC1B2)hAA'D;\;S6)IBDV$<dZU$;Kc3LEg12XmJ+kA[^%((AE7[!<'
%9qT(AnVn1ShBp+lhQe\[WL31/f,\sl??\_:jFKe81oEYXS)j_phF5dpJ@CCA/+RYVV-<%XD;gKa6cO[bV4Y7eS"g:0bl;F6<Er&_
%7&E:I-HRfKV&B`\TX1kp\.jo;2^[[.DlQpJ'c^`ML$r1A-,T:Ae`J3*'FdtZO=]sM5e;_[0s^;Dbn%i_*_`BPrJnV3C(RB[,W]o;
%)3Tq>2D$.OiJ9664HX9\=*8F$*`\iZosl'*3IsLPa#_R.(*Hu-i!B<?_'OIPmAHIrA"t+2qYA#8KsW,[T=k]3mrJGD4>SQ#h.VE0
%TL2.m5b+XY\V4Oa[i":QG"MeD0Wjppjdd!TZ.NttP3,Wr94>UX#F(ns!Hr.iA5#bF`rTWRS[R7<Neu$U@1=X7Ge>tf-:@rnJ:e5T
%5<>GCT.E/ggCf;k+]=q7&a3^GapfYlUVaE32D'Ob8K\d3Ig\$:FNbee"^*+Z[ME?@Zl^pM+T_1JX!"A)oL;2a@Tq*<a**lPV)pCh
%N#5n=qP=6I9'FB/R<Ng\1<:0Y,j/D9EM`6*X@=q*X6nfiWlnoP%cEqs1nd3p:lASa_92T4[lO+kn75N#)E^BFP7"@1QFPj;\3>Q$
%K=I"OO?u_m99`>f.7.pJrV5qOrp<MeSo'h3qI^E\qaM71m<5JmV;0Fj6,ZS/U?75DEn/e0UAqRE0%=@JUnDYmIo8feURS[Gn\!du
%R=]7e*><$Yl)C+Jc"jF_Yq]]E`B;/Z=lplDquJo@5d<]L$cU0Ye!/"mKs71/3lV?#J!R!CM`1Ida9524)L^MMNMeRi]VhK&h'X3s
%9q2OF_0k\jA5fX=Mr,VpWSZ(&\HVA(c9a+-FDidi1gtm;61\Kn%NZ-50okDajSd`_q=SQk7JX4Gg4YlXMPe)tTug-?TVds7"Z]9B
%-%%lu@/G=OqTLU*;:)suA^8Y+[FTq@8/$\pI'X6Wg4*kN['?XiPCOPkRr+n\-_]R)G=:fd9eih:j\6QV[5`,E&FhcQOR5*=5c!jB
%oqk_nUb-`hE$=T&;l&1"3b_?ern=l*[/$f8LT%2_q1PW)b6=4kBPq'/4mW]r9%W(%\K0Bg`'fOO$[Zr,Qe:3-R4>WTD@]JsNoocj
%I@Z?*>&3oae\!EBi(,0irGPr^7J]9_Puj\@qsmBET$;89>n!OBW)B%ObOBV3[RBFL;Ah;@pl(^*N[$@.KP^L?)#EJ_0Gm^b>0ZGr
%2tE"M2(erJG)`PZFXgZ[>tGI1>teKMgOi.XUU`I3k7th6NY3(%k?OT["NDBP1I_'O+g]*Je\'pRJ@U8^`aq0S.tXi;eLC'?=,CIK
%0rIFcG]3G_T8"Y)8W#d$2$/U3D1p7A43Zsq5fc3+GL^\+NV:h!PdX+dH"k@0Zs3n6W=+*T85Oeb9K*FbhT'B'gF_4;djgNLWL41"
%i<>mN]'5UNm6Y7$P-0$K)G:PRB;5JG$&5Q7jA?^-qaSV9i4l=IOG+<DA?,?CN7r\H))f-&"[8;M;V02uLY?nfP!.[`Nbj`b*1/r"
%X*[C;!9eh:.V@ZJ_jaKFAd1\,%bV0r^POrLJ41@;2M0g_gh0oZm5q=Sb7:*1TS=Wk^3CM_XLW&<^9CbpB[_(<5A7U\HZKF63bT<j
%41L_@`420.EOjBg?:C+g[F'd]20to,11a[>b[ahsbubf"`CI>D7=/[Zkn0";GL?t1G-[(RhU[;(p0^7K^9,rr!U_7^4If[=`;4f[
%<N6fW(I:fX($(_p9124^3ZrDHSsiW+T=sK"6f66k`>/RU'aVRBC50ebdY1r=kN2VC?Qm=J-Q/"%$LY3DE[4B6<Ag7ong+/;eBHL$
%QdA'O.U5[N8`4Q-NWu)pqVdjL/g^&=gH^JtP84853:i6NS4*7>i%2#f274RH)i1C#GeA]'X;;MaR/cH#N1MZ:Z],R?2%aCJ@>ZjH
%S"Cb9U*&LDXOO,0f8>b0R<m(eK^]CpfHFd)MWJV@.l*>t[S[5cH^IBLJsXJ\B:kr>$ILq8p7U@W2BoX>6SJ-U$o_7/ioU)>VbsLt
%9?f_0Bb,&JiK7'([P9YZpS@+c5u%OX-qBr(@oiHcjAiVMi&>-3hBnFPF9H1n.ea/[ai9N]20V=_HT-%iE&DiqEA-cRqQLO=X3ZWq
%;%">#+K;@fC;lJXe"MqbJ(85m&`#Li/.+B7@#AMn2,=Wln'3'<PMm\*F@j2(S$iQdS@hsRbfg6T(q#?CUQ^r4aNX,X7"*dZgTC[+
%OI>p//B2/D_&n+Zm)uuE,'%:4h]akuP<LbN2i3^2/hsn0\mppAQG.F+9#I1`WC\7o7?t]F7dbPXORC4K.?ZY;<krZ4hg3Rs:/#7g
%i>lJ(^gK(HnSM%9^gPl]"S4Cn8:`1do78)-R[ZT?.3:Z4:0^(tBj]MF'sWHb!YEa_bUK(UWS5(WMmIOICk0^fMpE)fqcb[oRB('@
%7h[o:I"r_+`E6lr[?\Ca-:2Df[CrB-X@8:A@$F2.YIUW7$nLY?h0/)$&KGOHP<929.&\731JbmpihHm$?e0d^^^`ku5#TbdX*_EH
%>>GS5+i?,1)oe!rOIq6M%`m^?8XfUo+D9ing^`kfp=kF-Fj7T[cO-EDCPCD5TA>ut/K'SWmY%u0.cNAI9LM`Uirf?sXqI$OU^*iV
%.YVO"cq4uli`WMsgGSGi(($_@m6Flo?&+3JkG(E*#lrJd\#4tpeW*LgYnH_+KC)iO^#W^D3IGe.#3-'NC2TKa.Q'RFVqCp]&bh"X
%=CALD+?-m$@kDcJMoVa^h,G5+JaA6RofL%F7:!2fW>]q..]k%\j!H_Q1gR[a9.Hcn%kP:N4I(k?)CXFl;ZWng<N7UgnLR]#l"+Y'
%:=RJBoU&OP'*OFG:rGsafj]Qpia1F/foq+fXh*.\XlJZ)N_/J\qBRS9O,oKI[]<r>!B/o(`-si/Q.*(KZ_1UKfhppW&C7dU.lU6J
%]l?C1=BEPoK=at2g7=a`;]`#[:,-t]PmkJ\R"Fiel+uAA?dkO=hNY_s:-V*]\QKjq&cLd2!@NBKd?m8/obi1e(f+eFO[4_?eX7>m
%6lS)<A;+=:>+Oo)'ADl--e.gf2;+j?Rt>^Ep17N3gPN]6=M#W94HEU?M&+R>UlL.K8$68D[V)FCbP<l"BT?D9/SP.m43Ga`f%MrS
%CiA-H'ruQE_-Jg3mS;EL.K<C"$H;uC\#mD_rtU.$ZdbKRWkCbmQmd'JDDm"\:#BSt?#DW6?8BU!5O4p0%u0?+=j8P>hE1*0#O6&j
%J^K`t*@,L^^2sdh/W<-dp'5g#XLUE<fA3++VB3*7&@pHD5TDa_8!-nJa:,=CNR(6_eE31;<GtrkBrYPjB[[tGAi%gLbUPbUm4">%
%S,qc[Rj!tH?@XL3Qa+.]E\O93[?uEhaA+f_Jdr?N*)?rlW3Y'lMf(=`Bn$lt'eWtEP*!I[2bbJM=L-P0Cg#-]X&"Loq;-!$16Xu[
%_Q-Mh/=[tU79aY%QAdgCq$QhLk$s5F9kB>*#G<J:BcWmjKd^6EJhZMbq,3t.2([F00@`"(?%'MUN9`cF)[aoQh4(Fp;V7Y+!OQ\[
%XKd!%bYiN22LT#:[K0=/o'O8.ftCU2$T]4l%6Zb^RQJHtQZmXZSU-Qp`gJiSF8u]fNBX4UCQo7W4*3@c)[aiYoGO\ifK-W/S%-pE
%b['tk'+,o'nh-j&%d7L]-9=5uRQJHtQZkHoDUV1lg62\8X+He8Ds1M[8]>`8QlP^POZG02.VB3uM\/@-ik+YlZ5c-*<Y'VCFL7W5
%i^@3ID!g3@/MH8,q?dOXga,3BD7-)DW6e)`:AS;5fS`GB!r@U0ZmBuq/UB2]@J7JprMUu3;K;8tl_O%R"ZhZ!Cc!=H7A4lE3S^@7
%8eXH"qW"!aKc23Z#%jY6?SFMXXp4Hn>Zga<o5sYVD0SCIp44g!["tOeDC,u<F)4.-(b(VJ4[AS4r.?h@LD'Y;7bPa>1j"jYU0oQK
%1\e[uBOZ-1UWq:uA)]mrcr-pkEHmNT"hm8XFqQ""g7>H$k.]Q(bULPdH.jYdc+,UWKSlMrG:Kd+Te78ej'UAG[npbFhD/!23<];5
%Li+"W/(o_=V((aAJ[[guXecK\?Fci^\(0+Fi*ObjL>B,CY_--c(2o/a3!Ji5^kb<R7SFlsM#XUCU5!Wc#RhV^l5U.X*-6,F!.(M>
%rg4`L3WuBK/VrgFMf[ZME+^B)&9O/d"#+<.2o/B#N+dl4,\;6_2Zk.=DPrsi.k8a7a`._ifE:_$YQ?X[KFlOP+mo_!!$P@7$]"7&
%:BpZq2b'%C,)NhU2Hspt9cl@>F[PR,Nb'$OVpP5W:l\_]JUgl*T"NqF&_&O"6_:UTli^*Eg"gooO3uSaBUC1.oi(LZ42-t<Ff3R9
%1\Y'@/qH7d?Ifqcs5D]me3W/M9U#F=:e$QZF^U$CG>GZ84-f]Z;\a::DrcndI1?jAhJ5D(m%B_`b2C,H?SsnPZ?c)[RVZTP:/njM
%XN8_<5e(PrA;f$<Ge.KuPn+D(ijWH_"h-LMe!DI#=AJ!FfGF8]ojTI'3o93eL3h(;(SP@)"f"MllKZ%Wf\W$r5!;72Nd]>d!+C[.
%%6erm&2]cc@>q<E2/OQ\NNcUfEqC5+a5M]oN_s6t,u-ErD0';IB8=)&Fq'BjF0qIVUj',OJqc&WLC6CTeFSI++D-,i:s:SA\j]bq
%&BdFb:2FmBd)`;O*W/5tVNat`+I6``>(+uQ)<+;+KhiCE5d4t%etU-8Df;2nU\5u!h0O%^@*Ms_CUa0qapDsk2s)`SRA5rXf[MAd
%`ksoIZ5@]q(?+4NX^l;4[.c`K\)P9$k)NtYbS-/LZU6Q%G&iAl:J3a'+k+O<0He;()jhs<"I&>1<[VOEO#G1KV94fP%?hQhb`23h
%g6Zs[@7R7CBfp;,R75!"a!>6,A$>3)B599:Fb^B>/j%j,/<U4P/TXTpj`=H)kDaBTTTaOi_prSF.KXJ!?&n#C)\EbaQKZb5%^@bq
%+L50AQY\P*h(CIUJFP"sCd9nil1J7_Lb?XENZEUO.eDq6g;_SZKt#`L'5KJXbb:Yn]3+M@1(X%S:62e)Clqh()mUul#O#;nmpU"S
%=]Y6BUET4?ZCVrFpYQn$&G1*=kg4pr[/mthQIoLqF02>iLAOacd(pgZXtBU%WIDU"NZFU]iS`IRjdTpF0+1J-r98n:HU*hLX?t\N
%H%A\KKM><>):Qr:/X>jm\^s@.UV54?UP0aq^E)$HdL1bUd-L<UD6?]t.c(R1U2IaE^u+me>n)Uhb=:O)\"/q,@(`H6=uOG[/;Kmh
%rP?M-3ifXt3Icheo\fH#gQE^mJ*/TSCjctA(5m$88GY@d(<B=T(Z_d1@tBC?DOKsCa3(>SoK>Vm]VN^]X.GaT<)[igC$Gp:m@'k$
%*EGka-Nb`/Ycd%#ZLt(#qZEZ!k"a1gOM07p4&M(K+NOf4fp0WPIJ_/AaS%8&/(u(M@T[[fo$0lo<F%sANkH;<Ei7MER4=XoZj6G2
%e)Hj`dTm^-`/n4S%L#fX;&Cd;!oppUe7sjmG6g?s9E?43\=^O,p=q2K4H]?bSr7ouYWoJ;XW%tEeZS/%/gR.N#S>Bn?k>8(!e^&t
%\A*dI&*gYS*#qGVBa8'=SjH0HWKM#5/\U_g>p9j?,,)jE_?YEA=Xr^1ZFO62#2(:h9TQ(V?(Za4VIl\`cfga=NnQ(Z<E!r&A`UKQ
%eP77<hRSa8nWkEjL&HFdQ?Rd`Qi2ZU%T8c;CuQSkT[OL^ct^DfX1;rd^UNU"buekIp"6cod3q'1g5rY?;rI#sC2+)p0BhQ]4.2;5
%?Rmug5lO#gI1JWX#3>@u.X?ZlG&p$eZ@[Zq>B@/bp3?"([<-oS6>:FCcfH6Nk3-Jp+ZI;HTQP-fCPm'alEuCcbaFn%*B#o#:i"Lt
%g0&AodVF8=VJ>Y4(+oR2GnJB$g)#C4EjM3X^)If77&_qhZ1ga?3HuWC<_IP:6^R#eOuY"*Y^a32c[QoePT6V/erY8W&\nZu+G=f:
%r?G!>E&^V09f5Gp<YR"os)M-t5h&e27;p7$oQ1ZcW3f^O:0+7d(=L%OOVD?d8)<+e]_Ti-i4iO2AP.KI5oa;IX?n(UNdG%1;dL-W
%>HDZ-6-]P+\uP=pW01s?/1&[nbnG_L+CN'?\VKm-T!]0PJ*)M1LDt#-K0qCJ"_:.ZUW+m]n$eW:IV0:hJrERIWaMsRRS)'-GA%Xq
%2kQ->3_GR`GD:DQlkQMM)08PFD`<,s5tB=2g^)ajF.-+T$OUUEkshKid;,Sk;).)X58DVciJp\d.k(jKO;O$AhWbjTJLQpNp`Xs?
%X@0$.$K<XdIsNf4(m;kOa7nbYNWT:r<10U4jpWGB2EL.3=EB]5?KcqLQMQk^'m4N%kQQTTd20bh9bao1m#5=*HPik@gg8h3eQAa;
%;8[8hP9nP"`OdenMg\X9OBD=P'IZED=j<A(kKU&EhT5QpH9.g-!=31U_=(boKWYG%oE9,`Ou`;6S8aW)Fd^HMr33C0$=eE:h_:!,
%+f>0f1BEFE@6)uu+JBSc04P/;o$ir)TT(G7``kb?('XONkS=6/!D-T//L$/d8\`JXs7-KigWu6ps7V&D`:-qiWd>dEJWonf]ib_j
%:]q4W3\/qoAHu>+'ru5G1EPI=FDA)qqO<*Kn_uDZQV%,:,5cZu_.V:\7Zo<754dm_VMN8h8QeYL.PV[lmCau&C9"f.bR'S_739:b
%K0QA2q]#+NFd`]4"oC&A"TG7,VDKPI%:33fh)@(uqlZHN$]/4?%-(fYSh@da%FS>]L8N0\Js+-3'rs`_#<BfKpasSXagCpG'c)cU
%\KKV_+WPn[^U'VD2lmT@=CW8DI5:XS:o9^%O4J.uJ"EdV,J^Q3FB0lpbUOk@PQ-?T0,BLd*]LZ@Gr0`N!%otU=oO2V.5[2.ijG8.
%Ys9!*6la%jQD[&KDr`)6W,JMa2qrsR)4X3$#I(m]@C'IEV5*q^@_Q4Q!PXt:'2o)+8LY39Mn\tRL@hPj\^&S]a"i,8j0F7fSoR:k
%fT:L:m&/>R;2AISD_/Z?Cj/.h?<Sm?Ydq;X#HCaF7+d3*haqldITHPPVYh`F8G)]\<i)shMrR3]eemC0/jt-8#Qh(57RLiBnWoc&
%FjfC^'@`."@o6(-'"T9=RCP&3AU&0J2?k'FToN=tih22J/*7%+FE6terml[1YS9Z8!jl`An4I<O+K8ZangZ2^b/kc8UR@8Lh-2W@
%Z6SJ@B2("V0&K4s_BB'48sn;_Cr89[W(8(0=%BC]CblPp5\&LjEB(>9X]])?!W"tb9$.'W"Z[>YSFCnN$b>Hr94nRr8-CBi4HNSP
%IjBW<HaE\#(Cd6TR5gSZQan)&:n/!&+j[W@f%JGYiX0WXl\e4E?oj*'Ke1udcUC%6,)0GqeUrHi0LdIsa[g0;Xp1:r1IU>Ld'8?!
%hV*PEV7+GU9SWJI.8ZT/FF'iN2D8_+NX'd=XLVP4c!#p>rM57dTF),dST8G!MYn!Qj$&mn3L37ck:m')OqHD[L!/=^'P4&WJRK=L
%X?9JgXL_d"$S1i,F[cM'AecA)@R2@XWdD2cY>;ZV\u@s%'&pT2;5_cWRa(4=H!`Ic!.+cG.eq:sj#M::AfoJ@"\(;J!@#p7],n@,
%U-`g9]<a@+5`XGG+.P&sM>!gr<eOaX=GQ9eXi33k*TS%^^V"mYM"iB[!?hC`<Q@'H'c@U*F>QfG+FlOS;\L2::u0=k*=!-`1dkej
%W^`S\IA5S=i\BI5%C=u>bbf4//T*oH9[>b,NsD6;IrER`aPK!SFeQJ<7=>GWDOc2-s1#ad6M"G`#M4T`(ot2/H!eTDpGs21A+r;Q
%U[-@9hnh%%6e?f1K&WstK:%Gn0gX9.TbE%tC#uktS/4KapT*CfZ%-kS/E3l?G$B9eGt6_Sh$eq+Df<$a=;b-94f_A?%jTgMQteTJ
%q_dk.;('/II\T"D5YJlF7=EQ;K(GDFG--IY%6Xp[Z-uW\F`FBIeCHS"#.*(;IQZh5`N,p!(3JE@(<X8+f%dW&D"$1S'WZlP_-K$9
%mS;WjfsP-6J[g5Q#&G^Fs/u%HSNolOQ!tZtd!ZF9@A507*4-m=X=.g!DRCou_[bAl[i"B&+<:@9T:/uG^"7]p;3W1l\.6&Qk(>5Q
%]It:XjsK6Mq8"AsdG1;*o6u3LLMTTI\<*M#9aX$%b4)+HSKN?P(C"^Hg/B6e!6VrlZECQ`M3';q,@!*>BW7+j%=P7ndHjHOh=J!e
%<cjZHI\"&RL(/YrVU(+Sgsq4O5j2cfnNf$kGq1V'2B(o(]sPOD0EFYT`+l.P<gBs`!m="EV,`o*IgYd@_n:E$#F@>@Ma&;jEJTL-
%i%:WtnHdfj@XY075mrM-(h+K#h,iE3J_d\$iO30=p(mI/ge>aCS$hiW[`<<S8:58I`cp5ngh'L1Ar*MoWnsEI`7rWa'Dp201eV1X
%Wbo,+dogrYM"hipp;T"(5A(N!kh^(B&E7$I/\'`oX,s3P#^)5(-q%lXlOQ+6>g3X;O+j:&<unm'ef8Otl"$0POGu`V2RFM.U[Ri!
%W4<)fN5e7u#?Pu%)#*TM.)b&E*>YTW>Y1C4RgAVWj:54J2:=]sYsiA=dG?/24a97l3=1g3NUH7CYmP0U0_5K2drfDoXFnDQTh;p:
%$=Xe@r$$MSKq]6d8KuU$OM.IDCd!=+bs1:Mi?3'.K9`$&07#R>$B.2^</7Wm#RVPFDLbo1`_JPnMiNgV-mO"a@CJu''^'HNf*Klo
%[@(W;SHGXe0d<C^O2?Fpq&!+NU%%u">u\'FK04Q-&LJba+Bs#j.1E+*^L)j=,SCr)Q4]uida=,]=(B#6eruf5X!!62%Uh\D,2NIn
%k#Wk6`EW;&jgj4jG(A\@3o&ORKNQ9a\S=+mBX`0WlM:6S\I<+V=FB5XQ9g)'D1=,Z?BHR%*:Dt>1Ju`tZ/+/_#W\8#/Ni`NhMA%u
%IuE"$)<L"^`)cK_31Qn#Ojrfpn-)*uS7LtCTn,cqMrXrbma2V$9XS$mX-/Ap?A0UHp*@U!<9n''DK-eN7'&hD:HaWq1natP,&nQB
%pgtBFE6`W):LId"n5M.8ZdD;,;Hp9a]SKC^/WPP/6mJU#SlB;M.9W3)mVDR7U@EtQ)q'1%(**(M"jjTm>+Z5JECU$I7h$Wo!*P=>
%D@"68X)'LVealCA1)Z+7@c9isd;kh5asckFZ.b<kUZ8@j/B,[]Kek[`NKI=%nWX`(`Xj^+!o`aZ/1*%>4^4LR%SG(_+U;!97(RUU
%cGFd![H2j:%ek.*M78<rYO`>D<BJJ.>U)@C.g(_!`XA'mri852eQ;^Lae"NLLmipT*9$,eOlhn&n1DrYXI(.G4E0eS,ud(,<q9!-
%.jpT3<!a'_#6)Q(7,>pR$E`_MrT&TD)F$YB5$"hb?j&Dq'Zes:Sf806K`N&gkYUs6N,hO>j'!@r`^g660H%Lm?m.lpC8D_h\1@%G
%HA-4uRW5JuSefka_TV!O*Ss-do(b[J2:Cm;m>345Te,D@RGg-d5A_/R\"RC"eQ?.6mDpgl"B-VI%]u,3$(:).7$MmX(X)oc[C.3)
%X^1oQMC>VU4]8E,HdWraBFoZ>FROHn'4SCn0CA(mCJZ_hU^H!?qdZ///pne@i`cu.0neChbC-hNHu+IB`F/9JIpT#7cei6YCPB]?
%:DQ;49AE@FJ]XqsR^O,1d!;lI8k*hADU$#3&T?7CZqcZV\<OQGl<n<sIW&nP[Pr*fdC#aS-,?(Ie&;/[VfCX#XNY,:#?N;=$.BhM
%M19TLrWMV`Yg?iZ**6pX8`)Q&M3*]b#po$N%M=t,[[PsDo2n]YkhskD+iURfDiZE?mGP9"I.]DCI-rO#+\B4m3ho,@1X*I-nHd5&
%\l*UNeD#X)i7LMO\Ch9:"bX(r=`ZZ8n$Q,^G0n7.Ghgji@RrgF^"4B"DjVP-*aE/VEu4D]c:/;P-h'r\o>KZ;RYk2$a?eSN!B97g
%,QHC%r<7*"kLIGB+NlgS10bK(5$2TDn]\Mmn'H?f9Jfk%p!t*>bLg`6$R&_+=_4J]K?.:*>AG1`hR\9h]=fe[iBl1600aZ;]IPlS
%3JSVD6Ea=5A&\T"G(TF]==B%26q]/@k(`$SrM`^^C`lj5DL3q.BNj<Ig7`p?(2CP;>;I-LK`0FZF4_iSkWctXT$A`_@tV&99hJJ6
%4bDLm=?Qb=*lYNG3jGHQb9I>Vf%^J_HT=1r7>_K1]:*f`1"tN#&Dt)\GW`LS31@ICpQ[XX'M%QJSj`]m)3e-N[EUh5/Aj8%F,nUk
%'`@KdS,$d+A<>nlV('l&6V/o0_ISYroOmC#=siML+1F1aOOBY;<XU'T/S$'Z+3a;CmEI4rHgc^7%W9Nc1%+/Zp[ddU0S&qNVpk!l
%'88hb=QUN6B(ZZ$]ilhKE\_F5jpF_ah"HVeNQ.b/4s!*OB(2_\(3CUWM&m[BboL9Kanr,Ul!^HVW\@,q7,(NPR#0k)VD#@GLGa+I
%-?8U"C8&@OP<EMAkhCUt)J_7?62"XaG+iM7hO6g!FS;X,:'eU?*F'+-0kPM$o"NP<cEQ_T*Z.ga8VB\-e[BS'"n7I&r?EQZQaila
%<f9hr@s5oPgB+V_6=HlAp'i92m*L$[9GArbdOnU:0[rQg#bTZTTgu5'QY*?0HSGHW@kW1M)mm;&6Y?X*F&RrX@JB/:q]igpmrKn7
%Ro]ul&@&f_[L<ochkBXD9Jl_kF`XsV<:K2.-UP7Y/44tOaAAMB[11eZ@\L,T>AI/nHYM)DDVKDf90s4l!>SQc3ObI3DM;82anj(@
%$n?'M:0=;<504m\e[<!a&k<VA-sBE(A4E.H'),D$\d)e6A[pi2SQ2g8pFl@o4a&'-D]*3frMsQtBH>>R?aZ+(hj!.ejBN:\Y=4]u
%I`VZ,32H#T$$gQYY(r#o5d6pl-mT`.3qM%FXU+1=I9mIfitW'TbeO@)Zcd``1Is>/FcY10^b";]LmjCLK1>p62J$B_Tl1)0)B$3.
%I9(1BJY#`M]$Gs_aEr?9%hlXGFk+KM3IPr>[\d2_r*g)lI`CQ7qqgF:Qunf1;Pe1?R]OS1q6h'HT94VtRb^EPdO1_oY1S=m;2n/t
%M-2P%PVGN3*i;tjH.^2h@G[4c]_N">Y7Ht1O`mK2U(Q03.'&)ah52P<7)Xp%m@h`XLHMSqn3rZcB4g.ics&3Zb>AbFjhf2Rr^3`Y
%$\f241`HtBp7d';<Y%R)(u/]HK6=-1RPZ_hg6'2O>Wfbl`FC#J$&+buK.QcD`F`G@Qp[kS<3muB-.HSs^kAF1CsEP8%11la&=<tc
%]Lir[/Aad.;:ddpc^^Te$_cbUq1;=r@iS6P@]Y4620u>;_(dP"nmXiAC/[qGj&7q5*:NV/6o8duB/+ak6ijjr*JDu]"]Y&'i_>5K
%GdQssSh6>/,M3PI!R06XCMTrEj:T5Sd6BF'3E9!CS-<VXmfiOK99r^b&M,7V/PfeQ<?l;d]*\)q/%K")lB8dCN@]$fTO<)J8g/,I
%^iTkTG[QE?m9tE:`+nguaK%5H);2khbK+`0b_+/fQ8cK=Jk<t`m+f+'#9gM&Q5g>!1Q&4_K^akUW2oQ@@e+Os@](V4<Q.""0CH\R
%'Je=KiBef)*/n8ua[gZXFsRAf[X-F4DU$a?M"GI%kHohbY_CJ]NTt2I*3bHSkCerl&Y42<0%TjYkH+8c,rHQg!K@BNI*r+li4NZI
%"qu#-`WaR9p%perM"8el9E4Op8&3"Brl0Ue-dFEDP.l0nZ.B11.;+E-najT@\eBp\IcK,(RHFqfCSQlj;=R't3-!Uhbn^cpd$]u`
%jUDJu8-j2)`?2j$%CdLsVjAAi*T\-T-rs$FY\4MT[h2;"Ct<j6-F'^>\W7`GEA/:C==2S?#KBQu&`aZW<GGq+@TVc&KSIHspJgSH
%,a?,X"1\HSPt2\p[N%c8.63-JR6Yr>S8Dc;9MtM%kTeV8,Eudk:BnG,.,Z=qb-*/V=)7s4j(=pAWMi4Y;A+i>8CGVIF"qANmAI30
%%t^5LVD[Se='t:NDSoC;CZF8$IoQYI0beaM:fR8%=++m3m<TPC!a0l33ei9dLUj[E"GVYi/:;1cn<l,b73(E2a.Tk$Nl_'9nRe?=
%peVk9OQ[D.&pr&,LW'b%3sAH-o<+:G'gZR_XSuNB)mPr4oth$!RJ!D^k?-:UW[VE%l7C*79`;r7*bCU=2+BsiNT<T&n@jN.*<`_^
%2TFFqI,h+\g3ujF1M.((jU?ekDPDJKIY6u\+Z8*L+<or?X'9?Y@W/ZuLP6rGnmQI=l=A^XCQQ5Qp@!6F(X8D\PP18nJ.V)>c!A?n
%M&+0jGV.BDa0^fO.Jh*dqMmmm&E2T-BSUTrQ3ahDW#R!8noRa1HdLA#3i(#RWX3[b6;)+'%m&h&m*/8GhJ9l3-k0($F/Zq7cgNa4
%IQKW94Lbc3c/$M==t?G"g%Ln*bCPo>eT)VFWseC7F4SG<LZ`g2$0\rhcL"Jp,Gc7pYgB'gRGFSf)n/C+A7:KP3<Y@I3o"?<$"^2'
%m'k4kM!pm#"U>r\;XpO8>a5tKJ$2/eKOPra*o+`=k3h;YX`ZsFU2S=+NhilLC1W(=7YYHkkH0sZ%a_8XP[0K%pQ#FR+9+.sTCEZQ
%rUe:ZIsgj"!5J>:5Q1$5s8C!1rpTXSJ,a`-qpS@0It%1WpV4a.r;<2I:Ck5;j3N5OY<VsTkD);#q]GeZ&H(be_/Feoci<hpJ,a`m
%+(XOa63~>
%AI9_PrivateDataEnd
